{
  "openapi": "3.0.1",
  "info": {
    "title": "PointClickCare API",
    "contact": {
      "name": "Developer Relations",
      "url": "https://developer.pointclickcare.com",
      "email": "devrelations@pointclickcare.com"
    },
    "version": "4.4.32"
  },
  "servers": [
    {
      "url": "https://connect.pointclickcare.com/api"
    },
    {
      "url": "https://connect2.pointclickcare.com/api"
    }
  ],
  "tags": [
    {
      "name": "ADT Record"
    },
    {
      "name": "Activity of Daily Living"
    },
    {
      "name": "Allergy Intolerances"
    },
    {
      "name": "App Activations"
    },
    {
      "name": "Ancillary Charges"
    },
    {
      "name": "Assessments"
    },
    {
      "name": "Backup Files"
    },
    {
      "name": "Calendar Event"
    },
    {
      "name": "Care Plans"
    },
    {
      "name": "Care Profile"
    },
    {
      "name": "Claim Management"
    },
    {
      "name": "Conditions"
    },
    {
      "name": "Consents"
    },
    {
      "name": "Coverages"
    },
    {
      "name": "Destinations"
    },
    {
      "name": "Diagnostic Reports"
    },
    {
      "name": "Document"
    },
    {
      "name": "Episodes of Care"
    },
    {
      "name": "Facilities"
    },
    {
      "name": "Historical Clinical Data"
    },
    {
      "name": "Immunizations"
    },
    {
      "name": "Medications"
    },
    {
      "name": "Nutrition Orders"
    },
    {
      "name": "Observations"
    },
    {
      "name": "Oids"
    },
    {
      "name": "OrganizationMasterPatient"
    },
    {
      "name": "Patient Contacts"
    },
    {
      "name": "Patients"
    },
    {
      "name": "Payments"
    },
    {
      "name": "Pick Lists"
    },
    {
      "name": "Practitioners"
    },
    {
      "name": "Progress Notes"
    },
    {
      "name": "Users"
    },
    {
      "name": "Webhooks"
    }
  ],
  "paths": {
    "/public/preview1/orgs/{orgUuid}/ancillary-charges/{processId}/status": {
      "get": {
        "description": "Returns processing status of the Ancillary Charge file pushed to PointClickCare.",
        "operationId": "getAncillaryChargesStatus",
        "parameters": [
          {
            "name": "orgUuid",
            "in": "path",
            "description": "PointClickCare's unique identifier for the organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "processId",
            "in": "path",
            "description": "Reference ID to get status of the file under processing.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAncillaryChargesResponse"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Forbidden"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Service Unavailable"
          }
        },
        "security": [
          {
            "two-legged-or-three-legged": [
              "user/ancillaryImport.write"
            ]
          }
        ],
        "summary": "Ancillary Charges Status",
        "tags": [
          "Ancillary Charges"
        ],
        "x-authorization": {
          "description": "This API requires a 2-legged or 3-legged OAuth access token.",
          "name": "two-legged-or-three-legged"
        }
      }
    },
    "/public/preview1/orgs/{orgUuid}/ancillary-charges": {
      "post": {
        "description": "Push Ancillary charge files to PointClickCare. Both Facility level and EMC level files can be posted using this API. Once the file has been pushed, the GET AncillaryChargesStatus API can be called to determine whether the File has been processed and is visible to Customers.<br><br><b>NOTE:</b> Customer organizations work with PointClickCare to define Ancillary charge templates. For a successful upload, you must ask Facility/Organization staff to provide the template file name format and extension, and a copy of the associated specification. You will need to name and structure your file accordingly. Please also ensure the organization has enabled the Auto Imports Transactions at the EMC level. The posted file will be visible to customers within 5 minutes of you receiving a 201 Created response, however, the actual file processing time may vary.<br><br>In Sandbox environments, files must be named with the prefix 'ancillary_', and the extention '.txt', with the full filename and extention not exceeding 32 characters. E.g. ancillary_myfilename.txt.",
        "operationId": "postAncillaryCharges",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "string",
                    "format": "binary",
                    "description": "Users are expected to upload ancillary-charges file of max size 10MB with pre-configured file format."
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "orgUuid",
            "in": "path",
            "description": "PointClickCare's unique identifier for the organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "The type of media being sent through the request. Expected content-type header is \"multipart/form-data\".",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostAncillaryChargesResponse"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Forbidden"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "two-legged-or-three-legged": [
              "user/ancillaryImport.write"
            ]
          }
        ],
        "summary": "Ancillary Charges",
        "tags": [
          "Ancillary Charges"
        ],
        "x-authorization": {
          "description": "This API requires a 2-legged or 3-legged OAuth access token.",
          "name": "two-legged-or-three-legged"
        }
      }
    },
    "/public/preview1/applications/{appName}/activations": {
      "get": {
        "description": "GET AppActivation API will return a list of the Organizations and Facilities where the application is activated and API calls can be made. If no Facilities are returned, but the scope is set to Corporate, the application is activated for all facilities in that Organization. In this case, use the GET Facilities API to get a list of activated facilities.",
        "operationId": "getAppActivation",
        "parameters": [
          {
            "description": "Part of pagination control. Skip (page - 1) * pageSize records from the beginning of the list before returning the rest. Default is 1.",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Part of pagination control. How many records to return in response to this request. Default is 50. Maximum value allowed is 200.",
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "App to be retrieved.",
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAppActivationList"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "two-legged": []
          }
        ],
        "summary": "App Activation",
        "tags": [
          "App Activations"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged OAuth access token.",
          "name": "two-legged"
        }
      },
      "servers": [
        {
          "url": "https://connect2.pointclickcare.com/api"
        }
      ]
    },
    "/public/preview1/integration-destinations": {
      "get": {
        "description": "Retrieve list of available destinations for Integration Engine Activations.",
        "operationId": "getIntegrationDestinations",
        "parameters": [
          {
            "description": "Represents the app name for an application that has been marked as an integration engine.",
            "in": "query",
            "name": "integrationEngineName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Represent whether if the destination is marked as enabled or not. Possible values are 'true' or 'false'. If no value is specified, all destinations are returned.",
            "in": "query",
            "name": "isEnabled",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Part of pagination control. Skip (page - 1) * pageSize records from the beginning of the list before returning the rest. Default is 1.",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Part of pagination control. How many records to return in response to this request. Default is 50. Maximum value allowed is 200.",
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DestinationList"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged": []
          }
        ],
        "summary": "Integration Destinations",
        "tags": [
          "Destinations"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged OAuth access token.",
          "name": "two-legged"
        }
      },
      "post": {
        "description": "Push destination records to PointClickCare. Destinations marked as enabled are displayed in the PointClickCare application when activating a new HIE or Health System. This API is only intended to be used by applications that are classified as Integration Engines.",
        "operationId": "postIntegrationDestinations",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostDestination"
              }
            }
          },
          "description": "Destination to be saved",
          "required": false
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostDestinationResponse"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "409": {
            "content": {},
            "description": "Conflict"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged": []
          }
        ],
        "summary": "Integration Destinations",
        "tags": [
          "Destinations"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged OAuth access token.",
          "name": "two-legged"
        },
        "x-codegen-request-body-name": "destination"
      },
      "servers": [
        {
          "url": "https://connect2.pointclickcare.com/api"
        }
      ]
    },
    "/public/preview1/integration-destinations/{integrationDestinationId}": {
      "patch": {
        "description": "Update integration destination records to PointClickCare. This API is only intended to be used by applications that are classified as Integration Engines.",
        "operationId": "patchIntegrationDestinations",
        "parameters": [
          {
            "description": "Represents the unique identifier for the destination in PointClickCare's system.",
            "in": "path",
            "name": "integrationDestinationId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchDestination"
              }
            }
          },
          "description": "Destination to be saved",
          "required": false
        },
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "409": {
            "content": {},
            "description": "Conflict"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged": []
          }
        ],
        "summary": "Integration Destinations",
        "tags": [
          "Destinations"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged OAuth access token.",
          "name": "two-legged"
        },
        "x-codegen-request-body-name": "destination"
      },
      "servers": [
        {
          "url": "https://connect2.pointclickcare.com/api"
        }
      ]
    },
    "/public/preview1/orgs/{orgUuid}/activities-of-daily-living": {
      "get": {
        "description": "Retrieve historical functional status assessment questions and responses for a patient completed in the past 30 days.",
        "operationId": "getActivitiesOfDailyLiving",
        "parameters": [
          {
            "description": "PointClickCare's unique identifier for a patient within the organization.</br></br>When a patient is admitted to a facility within an organization, they are assigned a patientId which is unique to their stay within that facility. If the same patient were to get admitted to another facility within the same organization in the future, they would be assigned a new patientId. The patientId however is unique at the organization level. That is, no two patients across different facilities within the organization will have the same patientId.",
            "in": "query",
            "name": "patientId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Represents the start of the date range for which the ADL assessment was recorded will be returned for a patient. The date should be expressed in the following format: YYYY-MM-DD. If startDate and endDate are not specified, only the latest assessment responses will be returned from the last 30 days. startDate can be no more than 30 days before the current date.",
            "in": "query",
            "name": "startDate",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Represents the end of the date range for which the ADL assessment was recorded will be returned for a patient. The date should be expressed in the following format: YYYY-MM-DD. If startDate and endDate are not specified, only the latest assessment responses will be returned from the last 30 days.",
            "in": "query",
            "name": "endDate",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Part of pagination control. Skip (page - 1) * pageSize records from the beginning of the list before returning the rest. Default is 1.",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Part of pagination control. How many records to return in response to this request. Default is 50. Maximum value allowed is 200.",
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdlList"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Forbidden"
          },
          "404": {
            "content": {},
            "description": "Resource Not Found"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged-or-three-legged": [
              "user/pointOfCare.read"
            ]
          }
        ],
        "summary": "Activities Of Daily Living",
        "tags": [
          "Activity of Daily Living"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged-or-three-legged OAuth access token.",
          "name": "two-legged-or-three-legged"
        }
      }
    },
    "/public/preview1/orgs/{orgUuid}/activities-of-daily-living-score": {
      "get": {
        "description": "Retrieve the daily activities of daily living (ADL) score for a patient for the past 30 days.</br> The daily ADL score is calculated based on a moving window of the last 7 days of data from the current date.",
        "operationId": "getActivitiesOfDailyLivingScore",
        "parameters": [
          {
            "description": "PointClickCare's unique identifier for a patient within the organization.</br></br>When a patient is admitted to a facility within an organization, they are assigned a patientId which is unique to their stay within that facility. If the same patient were to get admitted to another facility within the same organization in the future, they would be assigned a new patientId. The patientId however is unique at the organization level. That is, no two patients across different facilities within the organization will have the same patientId.",
            "in": "query",
            "name": "patientId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Represents the start of the date range for which the ADL score will be returned for a patient. The date should be expressed in the following format: YYYY-MM-DD. If startDate and endDate are not specified, the last 30 days of ADL scores will be returned as default. startDate can be no more than 30 days before the current date.",
            "in": "query",
            "name": "startDate ",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Represents the end of the date range for which the ADL score will be returned for a patient. The date should be expressed in the following format YYYY-MM-DD. If startDate and endDate are not specified, the last 30 days of ADL scores will be returned as default.",
            "in": "query",
            "name": "endDate ",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Part of pagination control. Skip (page - 1) * pageSize records from the beginning of the list before returning the rest. Default is 1.",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Part of pagination control. How many records to return in response to this request. Default is 50. Maximum value allowed is 200.",
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdlScoreList"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Forbidden"
          },
          "404": {
            "content": {},
            "description": "Resource Not Found"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged-or-three-legged": [
              "user/adlScore.read"
            ]
          }
        ],
        "summary": "Activities Of Daily Living Score",
        "tags": [
          "Activity of Daily Living"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged-or-three-legged OAuth access token.",
          "name": "two-legged-or-three-legged"
        }
      }
    },
    "/public/preview1/orgs/{orgUuid}/adt-records": {
      "get": {
        "description": "<p>Retrieve a list of admit, transfer and discharge (ADT) record entries for a patient.</p><p> ADT entries include actions such as admission, discharge, internal room transfer, death, leave of absence.</p></p><p>Changes made to the patient's primary payer details are also retrieved.</p>",
        "operationId": "getADTRecords",
        "parameters": [
          {
            "description": "A comma-separated list of ADTs to retrieve. This represents PointClickCare's unique identifier for the patient's ADT record within the organization. If adtRecordIds is provided then patientId, effectiveDate, and pageSize should not be provided.",
            "in": "query",
            "name": "adtRecordIds",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "PointClickCare's unique identifier for a facility within the organization. If adtRecordIds is provided then facId must be provided.",
            "in": "query",
            "name": "facId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "PointClickCare's unique identifier for a patient within the organization.</br></br>When a patient is admitted to a facility within an organization, they are assigned a patientId which is unique to their stay within that facility. If the same patient were to get admitted to another facility within the same organization in the future, they would be assigned a new patientId. The patientId however is unique at the organization level. That is, no two patients across different facilities within the organization will have the same patientId. If adtRecordIds is provided, then patientId should not be provided. Otherwise, patientId should be provided.",
            "in": "query",
            "name": "patientId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "<p>Represents the date when the ADT records became effective. If adtRecordIds is provided, then effectiveDate should not be provided. Otherwise, effectiveDate is optional.</p><p> The expected date format is YYYY-MM-DD.</p>",
            "in": "query",
            "name": "effectiveDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "Possible values are active, cancelled, all. The default response will only be active ADT records.",
            "in": "query",
            "name": "recordType",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Part of pagination control. Skip (page - 1) * pageSize records from the beginning of the list before returning the rest. Default is 1.",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Part of pagination control. How many records to return in response to this request. If adtRecordIds is provided, then pageSize should not be provided. Otherwise, pageSize is optional. Default is 50. Maximum value allowed is 200.",
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ADTRecordDetailsList"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Forbidden"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged-or-three-legged": [
              "user/adtRecord.read"
            ]
          }
        ],
        "summary": "ADT Records",
        "tags": [
          "ADT Record"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged-or-three-legged OAuth access token.",
          "name": "two-legged-or-three-legged"
        }
      }
    },
    "/public/preview1/orgs/{orgUuid}/advance-directives-consents": {
      "get": {
        "description": "Retrieve the list of advance directives for a patient. Advance directives allow a patient to spell out their decisions about end of life care ahead of time. <br/><br/>In PointClickCare, facilities are required to create an order template for consent, which is then used to add and track advanced directives for a patient. The consent template can contain one or multiple advance directives. ",
        "operationId": "getAdvanceDirectivesConsents",
        "parameters": [
          {
            "description": "PointClickCare's unique identifier for a patient within the organization.</br></br>When a patient is admitted to a facility within an organization, they are assigned a patientId which is unique to their stay within that facility. If the same patient were to get admitted to another facility within the same organization in the future, they would be assigned a new patientId. The patientId however is unique at the organization level. That is, no two patients across different facilities within the organization will have the same patientId.",
            "in": "query",
            "name": "patientId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Represents the status of the consent. Acceptable values are \"active\", \"discontinued\" and \"pending\". Multiple comma separated values are accepted. If no value is passed, only 'active' records are returned. ",
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Part of pagination control. Skip (page - 1) * pageSize records from the beginning of the list before returning the rest. Default is 1.",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Part of pagination control. How many records to return in response to this request. Default is 50. Maximum value allowed is 200.",
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdvanceDirectiveConsentsList"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Forbidden"
          },
          "404": {
            "content": {},
            "description": "Resource Not Found"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged-or-three-legged": [
              "user/advanceDirectivesConsent.read"
            ]
          }
        ],
        "summary": "Advance Directives Consents",
        "tags": [
          "Consents"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged-or-three-legged OAuth access token.",
          "name": "two-legged-or-three-legged"
        }
      }
    },
    "/public/preview1/orgs/{orgUuid}/allergyintolerances": {
      "get": {
        "description": "Retrieve the list of allergies (drug, food, substance, environmental or others) for a patient. Allergies include detailed information on the category, type, reaction type, reaction and its status.",
        "operationId": "getAllergyIntolerances",
        "parameters": [
          {
            "description": "PointClickCare's unique identifier for a patient within the organization.</br></br>When a patient is admitted to a facility within an organization, they are assigned a patientId which is unique to their stay within that facility. If the same patient were to get admitted to another facility within the same organization in the future, they would be assigned a new patientId. The patientId however is unique at the organization level. That is, no two patients across different facilities within the organization will have the same patientId.",
            "in": "query",
            "name": "patientId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Represents the allergy category. Acceptable values are 'drug', 'food', 'environmental', 'substance' and 'other'. Multiple comma separated values are accepted. If not passed, all categories are returned.",
            "in": "query",
            "name": "category",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Represents the clinical status of the allergy. Acceptable values are 'active', 'resolved' and 'priorHistory'. Multiple comma separated values are accepted. If not passed, only 'active' records are returned.",
            "in": "query",
            "name": "clinicalStatus",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Part of pagination control. Skip (page - 1) * pageSize records from the beginning of the list before returning the rest. Default is 1.",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Part of pagination control. How many records to return in response to this request. Default is 50. Maximum value allowed is 200.",
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllergyIntoleranceList"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Forbidden"
          },
          "404": {
            "content": {},
            "description": "Resource Not Found"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged-or-three-legged": [
              "user/allergyIntolerance.read"
            ]
          }
        ],
        "summary": "Allergy Intolerances",
        "tags": [
          "Allergy Intolerances"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged-or-three-legged OAuth access token.",
          "name": "two-legged-or-three-legged"
        }
      }
    },
    "/public/preview1/orgs/{orgUuid}/assessment-templates/{templateId}": {
      "get": {
        "description": "Retrieves all detailed template structure for a specified assessment. It contains sections, questions, and response choices found in the assessment.",
        "operationId": "getAssessmentTemplate",
        "parameters": [
          {
            "description": "PointClickCare's unique identifier for a facility within the organization.",
            "in": "query",
            "name": "facId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The unique template id number associated with an assessment template.",
            "in": "path",
            "name": "templateId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonAssessmentTemplate"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Forbidden"
          },
          "404": {
            "content": {},
            "description": "Resource Not Found"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged-or-three-legged": [
              "user/assessments.read"
            ]
          }
        ],
        "summary": "Assessment Template",
        "tags": [
          "Assessments"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged-or-three-legged OAuth access token.",
          "name": "two-legged-or-three-legged"
        }
      }
    },
    "/public/preview1/orgs/{orgUuid}/assessments": {
      "get": {
        "description": "Retrieves a list of assessments from the patient chart. This API includes both standard and custom assessments.",
        "operationId": "getAssessments",
        "parameters": [
          {
            "description": "PointClickCare's unique identifier for a patient within the organization.</br></br>When a patient is admitted to a facility within an organization, they are assigned a patientId which is unique to their stay within that facility. If the same patient were to get admitted to another facility within the same organization in the future, they would be assigned a new patientId. The patientId however is unique at the organization level. That is, no two patients across different facilities within the organization will have the same patientId.",
            "in": "query",
            "name": "patientId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The status of the assessment. Acceptable values are \"All, Complete, Errors, In Progress, Inactivated, Incomplete, Modified\". Multiple comma separated values are accepted. If no value is passed only completed records are returned.",
            "in": "query",
            "name": "assessmentStatus",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Unique template identifier associated with custom assessment.",
            "in": "query",
            "name": "templateId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Identifies the template version of all assessments, this includes both system-defined and custom assessments.",
            "in": "query",
            "name": "templateVersion",
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "Unique template identifier for system-defined assessment.",
            "in": "query",
            "name": "systemTemplateId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The start of the date range for which assessments will be returned for a patient. The date and time should be expressed in UTC in the following format: YYYY-MM-DDTHH:MM:SS.sssZ. If startDate is not specified it will default to January 1, 1970 UTC. If both startDate and endDate are not specified then the last 30 days of assessments will be returned. If the latestTemplateVersion parameter is set to true it will take precedence over startDate and endDate and only the most recently created assessment for each unique templateId will be returned.",
            "in": "query",
            "name": "startDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end of the date range for which assessments will be returned for a patient. The date and time should be expressed in UTC in the following format: YYYY-MM-DDTHH:MM:SS.sssZ. If endDate is not specified it will default to the current date and time. If both startDate and endDate are not specified then the last 30 days of assessments will be returned. If the latestTemplateVersion parameter is set to true it will take precedence over startDate and endDate and only the most recently created assessment for each unique templateId will be returned.",
            "in": "query",
            "name": "endDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "When set to true this will take precedence over startDate and endDate and only the most recently created assessment for each unique template id will be returned. This parameter will default to false if not provided.",
            "in": "query",
            "name": "latestTemplateVersion",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Part of pagination control. Skip (page - 1) * pageSize records from the beginning of the list before returning the rest. Default is 1.",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Part of pagination control. How many records to return in response to this request. Default is 50. Maximum value allowed is 200.",
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssessmentList"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Forbidden"
          },
          "404": {
            "content": {},
            "description": "Resource Not Found"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged-or-three-legged": [
              "user/assessments.read"
            ]
          }
        ],
        "summary": "Assessments",
        "tags": [
          "Assessments"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged-or-three-legged OAuth access token.",
          "name": "two-legged-or-three-legged"
        }
      }
    },
    "/public/preview1/orgs/{orgUuid}/assessments/{assessmentId}": {
      "get": {
        "description": "Retrieves all details within an assessment on the patient chart. It includes both system and user defined assessments.<br/><br/><strong>NOTE:</strong> Before you call this API you must call the GET <a href=\"#operation/getAssessments\">/assessments</a> endpoint to obtain the <em>assessmentId</em>.",
        "operationId": "getAssessment",
        "parameters": [
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Represents the identification number associated with the assessment.",
            "in": "path",
            "name": "assessmentId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssessmentDetail"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Forbidden"
          },
          "404": {
            "content": {},
            "description": "Resource Not Found"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged-or-three-legged": [
              "user/assessments.read"
            ]
          }
        ],
        "summary": "Assessment",
        "tags": [
          "Assessments"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged-or-three-legged OAuth access token.",
          "name": "two-legged-or-three-legged"
        }
      }
    },
    "/public/preview1/orgs/{orgUuid}/beds-availability": {
      "get": {
        "description": "Retrieves the number of available beds and number of beds by certification type for a specified admission date.",
        "operationId": "getBedsAvailability",
        "parameters": [
          {
            "description": "PointClickCare's unique identifier for a facility within the organization.",
            "in": "query",
            "name": "facId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The date on which admission is planned or sought.",
            "in": "query",
            "name": "admissionDate",
            "required": true,
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BedsAvailability"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Forbidden"
          },
          "404": {
            "content": {},
            "description": "Resource Not Found"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged-or-three-legged": [
              "user/bedsAvailability.read"
            ]
          }
        ],
        "summary": "Beds Availability",
        "tags": [
          "Facilities"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged-or-three-legged OAuth access token.",
          "name": "two-legged-or-three-legged"
        }
      }
    },
    "/public/preview1/orgs/{orgUuid}/facs/{facId}/backup-files": {
      "get": {
        "description": "Get the backup EMAR/TAR/MAR zip file generated for a Facility. The file will be available every hour.",
        "operationId": "getBackupFiles",
        "parameters": [
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "PointClickCare's unique identifier for a facility within the organization.",
            "in": "path",
            "name": "facId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBackupFilesResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "404": {
            "content": {},
            "description": "Resource Not Found"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged": []
          }
        ],
        "summary": "Backup Files",
        "tags": [
          "Backup Files"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged OAuth access token.",
          "name": "two-legged"
        }
      },
      "servers": [
        {
          "url": "https://connect2.pointclickcare.com/api"
        }
      ]
    },
    "/public/preview1/orgs/{orgUuid}/calendar-events": {
      "get": {
        "description": "Retrieves a list of Calendar eventIds based on either a facId or patientId, and on \"from\" and \"to\" dates. Only active events will be returned. No cancelled or deleted events will be returned.</br>Note: No occurrence details, other than their IDs, will be returned.",
        "operationId": "getCalendarEvents",
        "parameters": [
          {
            "description": "PointClickCare's unique identifier for a facility within the organization. This parameter is mandatory if patientId is not passed.",
            "in": "query",
            "name": "facId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "PointClickCare's unique identifier for a patient for whom the event was created. This parameter is mandatory if facId is not passed.",
            "in": "query",
            "name": "patientId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "All events after this time will be returned. The date and time should be expressed in UTC in the following format: YYYY-MM-DDTHH:MM:SS.sssZ.",
            "in": "query",
            "name": "fromDateTime",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "All events before this time will be returned. The date and time should be expressed in UTC in the following format: YYYY-MM-DDTHH:MM:SS.sssZ. If toDateTime is not present, it will be set to one year after startDateTime by default.",
            "in": "query",
            "name": "toDateTime",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCalendarEventListResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Forbidden"
          },
          "404": {
            "content": {},
            "description": "Resource Not Found"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged-or-three-legged": [
              "user/facilityCalendarEvent.read: If patientId is null<BR>user/residentCalendarEvent.read: If patientId is not null"
            ]
          }
        ],
        "summary": "Calendar Events",
        "tags": [
          "Calendar Event"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged-or-three-legged OAuth access token.",
          "name": "two-legged-or-three-legged"
        }
      },
      "post": {
        "description": "Creates a new Calendar Event. To create a Facility level event, the facId must be included in the request body. Otherwise, a Patient specific event will be created.\r\nFacility defined values for eventType, location and resources can be obtained by making a call to the GET EventConfiguration API.",
        "operationId": "postCalendarEvent",
        "parameters": [
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostCalendarEvent"
              }
            }
          },
          "description": "Calendar Event to be created",
          "required": false
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostCalendarEventResponse"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Forbidden"
          },
          "404": {
            "content": {},
            "description": "Resource Not Found"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged-or-three-legged": [
              "user/facilityCalendarEvent.write: If facId is not null<BR>user/residentCalendarEvent.write: If facId is null"
            ]
          }
        ],
        "summary": "Calendar Event",
        "tags": [
          "Calendar Event"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged-or-three-legged OAuth access token.",
          "name": "two-legged-or-three-legged"
        },
        "x-codegen-request-body-name": "calendarevent"
      }
    },
    "/public/preview1/orgs/{orgUuid}/calendar-events/{calendarEventId}": {
      "get": {
        "description": "Retrieves details of a single Calendar Event by calendarEventId. Only active events will be returned.",
        "operationId": "getCalendarEvent",
        "parameters": [
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "An identifier for a calendar event.",
            "in": "path",
            "name": "calendarEventId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCalendarEventDetails"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Forbidden"
          },
          "404": {
            "content": {},
            "description": "Event Not Found"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged-or-three-legged": [
              "user/facilityCalendarEvent.read: If patientId is null<BR>user/residentCalendarEvent.read: If patientId is not null"
            ]
          }
        ],
        "summary": "Calendar Event",
        "tags": [
          "Calendar Event"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged-or-three-legged OAuth access token.",
          "name": "two-legged-or-three-legged"
        }
      },
      "patch": {
        "description": "Cancels future occurrences of a Calendar Event.",
        "operationId": "patchCalendarEvent",
        "parameters": [
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "PointClickCare's unique identifier for an event within the organization.",
            "in": "path",
            "name": "calendarEventId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchCalendarEvent"
              }
            }
          },
          "description": "Calendar Event to be updated",
          "required": false
        },
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Forbidden"
          },
          "404": {
            "content": {},
            "description": "Resource Not Found"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged-or-three-legged": [
              "user/facilityCalendarEvent.write: If event is a Facility/Community Event<BR>user/residentCalendarEvent.write: If event is a Resident Event"
            ]
          }
        ],
        "summary": "Calendar Event",
        "tags": [
          "Calendar Event"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged-or-three-legged OAuth access token.",
          "name": "two-legged-or-three-legged"
        },
        "x-codegen-request-body-name": "CalendarEvent"
      },
      "put": {
        "description": "Updates an existing Calendar Event by calendarEventId. Facility-defined values for eventType, location and resources can be obtained by making a call to the GET EventConfiguration API.",
        "operationId": "putCalendarEvent",
        "parameters": [
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "An identifier for a calendar event.",
            "in": "path",
            "name": "calendarEventId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PutCalendarEvent"
              }
            }
          },
          "description": "Calendar Event to be updated",
          "required": false
        },
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Forbidden"
          },
          "404": {
            "content": {},
            "description": "Resource Not Found"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged-or-three-legged": [
              "user/facilityCalendarEvent.write: If facId is not null<BR>user/residentCalendarEvent.write: If facId null"
            ]
          }
        ],
        "summary": "Calendar Event",
        "tags": [
          "Calendar Event"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged-or-three-legged OAuth access token.",
          "name": "two-legged-or-three-legged"
        },
        "x-codegen-request-body-name": "calendarevent"
      }
    },
    "/public/preview1/orgs/{orgUuid}/calendar-occurrences": {
      "get": {
        "description": "Retrieves a list of occurrences of one or more Calendar Events, by eventId, facId, patientId, or date range.</br>Note: A single event can consist of multiple occurrences, each with its own occurrenceId.",
        "operationId": "getCalendarOccurrences",
        "parameters": [
          {
            "description": "Id of the event. This parameter is mandatory if patientId or facId is not passed.",
            "in": "query",
            "name": "calendarEventId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "PointClickCare's unique identifier for a facility within the organization. This parameter is mandatory if patientId or calendarEventId is not passed.",
            "in": "query",
            "name": "facId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "PointClickCare's unique identifier for a patient for whom the event was created. This parameter is mandatory if facId or calendarEventId is not passed.",
            "in": "query",
            "name": "patientId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "All events occurrences after this time will be returned. The date and time should be expressed in UTC in the following format: YYYY-MM-DDTHH:MM:SS.sssZ. This parameter is mandatory if calendarEventId is not passed.",
            "in": "query",
            "name": "fromDateTime",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "All events occurrences before this time will be returned. The date and time should be expressed in UTC in the following format: YYYY-MM-DDTHH:MM:SS.sssZ. If toDateTime is not present, it will be set to one month after fromDateTime by default.",
            "in": "query",
            "name": "toDateTime",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCalendarOccurrenceListResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Forbidden"
          },
          "404": {
            "content": {},
            "description": "Resource Not Found"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged-or-three-legged": [
              "user/facilityCalendarEvent.read: If patientId is null<BR>user/residentCalendarEvent.read: If patientId is not null"
            ]
          }
        ],
        "summary": "Calendar Occurrences",
        "tags": [
          "Calendar Event"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged-or-three-legged OAuth access token.",
          "name": "two-legged-or-three-legged"
        }
      }
    },
    "/public/preview1/orgs/{orgUuid}/calendar-occurrences/{occurrenceId}": {
      "get": {
        "description": "Retrieves details of an event occurrence, including its attendance, by occurrenceId.</br>Note: A single event can consist of multiple occurrences, each with its own occurrenceId.",
        "operationId": "getCalendarOccurrence",
        "parameters": [
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "An identifier for a specific occurrence of a calendar event.",
            "in": "path",
            "name": "occurrenceId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCalendarOccurrence"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Forbidden"
          },
          "404": {
            "content": {},
            "description": "Resource Not Found"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged-or-three-legged": [
              "user/facilityCalendarEvent.read: If the occurrence belongs to an event that is facility-specific user/residentCalendarEvent.read: If the occurrence belongs to an event that is patient-specific"
            ]
          }
        ],
        "summary": "Calendar Occurrence",
        "tags": [
          "Calendar Event"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged-or-three-legged OAuth access token.",
          "name": "two-legged-or-three-legged"
        }
      },
      "patch": {
        "description": "Updates an occurrence of a Calendar Event, with attendeeIds to track attendance.",
        "operationId": "patchCalendarOccurrence",
        "parameters": [
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "An identifier for a specific occurrence of a calendar event.",
            "in": "path",
            "name": "occurrenceId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchCalendarEventOccurrence"
              }
            }
          },
          "description": "Calendar Event Occurrence to be updated",
          "required": false
        },
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Forbidden"
          },
          "404": {
            "content": {},
            "description": "Resource Not Found"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged-or-three-legged": [
              "user/facilityCalendarEvent.write: If the occurrence belongs to an event that is facility-specific user/residentCalendarEvent.write: If the occurrence belongs to an event that is patient-specific"
            ]
          }
        ],
        "summary": "Calendar Occurrence",
        "tags": [
          "Calendar Event"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged-or-three-legged OAuth access token.",
          "name": "two-legged-or-three-legged"
        },
        "x-codegen-request-body-name": "CalendarOccurrence"
      }
    },
    "/public/preview1/orgs/{orgUuid}/care-periods": {
      "post": {
        "description": "Push Care Periods for a given patient to PointClickCare.<br />When pushing <b><u>historical</u></b> clinical data for a patient to PointClickCare, you must use this endpoint to first create a care period. The care period identifies a length of stay for the patient within a certain organization (for e.g. hospitals). The care period identifier is to be used in all subsequent API calls to push clinical information for the patient.",
        "operationId": "postCarePeriods",
        "parameters": [
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostCarePeriodExtend"
              }
            }
          },
          "description": "Care Period to be saved",
          "required": false
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveCarePeriodResponse"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "404": {
            "content": {},
            "description": "Resource Not Found"
          },
          "409": {
            "content": {},
            "description": "Conflict"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged": []
          }
        ],
        "summary": "Historical Care Periods",
        "tags": [
          "Historical Clinical Data"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged OAuth access token.",
          "name": "two-legged"
        },
        "x-codegen-request-body-name": "carePeriod"
      },
      "servers": [
        {
          "url": "https://connect2.pointclickcare.com/api"
        }
      ]
    },
    "/public/preview1/orgs/{orgUuid}/care-plans": {
      "get": {
        "description": "Get list of Care Plans for a patient.",
        "operationId": "getCarePlans",
        "parameters": [
          {
            "description": "PointClickCare's unique identifier for a patient within the organization.",
            "in": "query",
            "name": "patientId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Represents the status of the Care Plan. Acceptable values are: Active, Closed. Multiple statuses can be specified using a list of comma separated values. By default, all statuses are included.",
            "in": "query",
            "name": "carePlanStatus",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Represents the status of the Focuses within the Care Plan. Acceptable values are: Active, Resolved, Cancelled. Multiple statuses can be specified using a list of comma separated values. By default, all statuses are included.",
            "in": "query",
            "name": "focusStatus",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Part of pagination control. Skip (page - 1) * pageSize records from the beginning of the list before returning the rest. Default is 1.",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Part of pagination control. How many records to return in response to this request. Default is 50. Maximum value allowed is 50.",
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCarePlanListResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Forbidden"
          },
          "404": {
            "content": {},
            "description": "Resource Not Found"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged-or-three-legged": [
              "user/carePlan.read"
            ]
          }
        ],
        "summary": "Care Plans",
        "tags": [
          "Care Plans"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged-or-three-legged OAuth access token.",
          "name": "two-legged-or-three-legged"
        }
      }
    },
    "/public/preview1/orgs/{orgUuid}/care-plan-kardexes": {
      "get": {
        "description": "Retrieves the care plan Kardex for one or more patients.",
        "operationId": "getCarePlanKardexes",
        "parameters": [
          {
            "description": "PointClickCare's unique identifier for facility within organization.",
            "in": "query",
            "name": "facId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Comma-separated list of patients to retrieve kardexes for. PointClickCare's unique identifier for a patient within the organization. When a patient is admitted to a facility within an organization, they are assigned a patientId which is unique to their stay within that facility. If the same patient were to get admitted to another facility within the same organization in the future, they would be assigned a new patientId. The patientId however is unique at the organization level. That is, no two patients across different facilities within the organization will have the same patientId. The patient must belong to the facility provided.",
            "in": "query",
            "name": "patientIds",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "PointClickCare's unique identifier for a staff position within the organization. If provided, only those Kardex items assigned to this staff position will be returned. Kardex items assigned to any position are returned by default.",
            "in": "query",
            "name": "itemPositionId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Determines whether tasks belonging to a Kardex are returned. If not provided or set to false, only interventions belonging to the Kardex will be returned.",
            "in": "query",
            "name": "shouldIncludeTasks",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Part of pagination control. Skip (page - 1) * pageSize records from the beginning of the list before returning the rest. Default is 1.",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Part of pagination control. How many records to return in response to this request. Default is 50. Maximum value allowed is 50.",
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CarePlanKardexesListResponseDto"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Forbidden"
          },
          "404": {
            "content": {},
            "description": "Resource Not Found"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged-or-three-legged": [
              "user/carePlanKardex.read"
            ]
          }
        ],
        "summary": "Care Plan Kardex",
        "tags": [
          "Care Plans"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged-or-three-legged OAuth access token.",
          "name": "two-legged-or-three-legged"
        }
      }
    },
    "/public/preview1/orgs/{orgUuid}/care-profiles": {
      "get": {
        "description": "Retrieves the Care Profile entries for a patient. The Care Profile allows nursing staff to collect patient information that will help with clinical decision making.",
        "operationId": "getCareProfile",
        "parameters": [
          {
            "description": "PointClickCare's unique identifier for a patient within the organization.",
            "in": "query",
            "name": "patientId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "List of PointClickCare's unique identifiers for care profile questions. Multiple comma separated values are accepted. If not passed, all the care profile questions are returned.",
            "in": "query",
            "name": "questionIds",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCareProfilePublicList"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Forbidden"
          },
          "404": {
            "content": {},
            "description": "Resource Not Found"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged-or-three-legged": [
              "user/patient.read"
            ]
          }
        ],
        "summary": "Care Profile",
        "tags": [
          "Care Profile"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged-or-three-legged OAuth access token.",
          "name": "two-legged-or-three-legged"
        }
      }
    },
    "/public/preview1/orgs/{orgUuid}/facs/{facId}/claim-files/{fileUuid}": {
      "get": {
        "description": "Download the 837 file associated with an exported batch.",
        "operationId": "get837File",
        "parameters": [
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "PointClickCare's unique identifier for a facility within the organization.",
            "in": "path",
            "name": "facId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "PointClickCare's unique identifier for an 837 file.",
            "in": "path",
            "name": "fileUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Forbidden"
          },
          "404": {
            "content": {},
            "description": "File Not Found"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "summary": "Download 837 File",
        "tags": [
          "Claim Management"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged OAuth access token.",
          "name": "two-legged"
        }
      }
    },
    "/public/preview1/orgs/{orgUuid}/remittance-upload": {
      "post": {
        "description": "Vendor uploads 835 remittance file to PointClickcare application system.<br><br><b>NOTE:</b> For a successful upload, you must ask Facility/Organization staff to provide the template file name format and extension. You will need to name and structure your file accordingly. The uploaded remittance file will be imported and processed in the PointClickCare application system within couple minutes of you receiving '201 Created' response.",
        "operationId": "postRemittanceFile",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "string",
                    "format": "binary",
                    "description": "Vendors are expected to upload 835 remittance file of max size 10MB with pre-configured file format."
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "The type of media being sent through the request. Expected content-type header is \"multipart/form-data\"",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {},
            "description": "Created"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Forbidden"
          },
          "404": {
            "content": {},
            "description": "Resource Not Found"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged": []
          }
        ],
        "summary": "835 Remittance File Upload",
        "tags": [
          "Claim Management"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged 0Auth access token.",
          "name": "two-legged"
        }
      },
      "servers": [
        {
          "url": "https://connect2.pointclickcare.com/api"
        }
      ]
    },
    "/public/preview1/orgs/{orgUuid}/claim-change-logs": {
      "post": {
        "description": "Push any changes made to a claim by vendor to PointClickCare.",
        "operationId": "postClaimChangeLogs",
        "parameters": [
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "The type of content being sent through the request. Expected content-type header is \"application/json\"",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClaimChangeLog"
              }
            }
          },
          "description": "Claim change log to be saved.",
          "required": false
        },
        "responses": {
          "201": {
            "content": {},
            "description": "Created"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Forbidden"
          },
          "404": {
            "content": {},
            "description": "Resource Not Found"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged": []
          }
        ],
        "summary": "Claim Change Log",
        "tags": [
          "Claim Management"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged OAuth access token.",
          "name": "two-legged"
        }
      },
      "servers": [
        {
          "url": "https://connect2.pointclickcare.com/api"
        }
      ]
    },
    "/public/preview1/orgs/{orgUuid}/statements/{statementId}": {
      "get": {
        "description": "Get a Statement details based on the Statement Id and Facility Id. After you receive the statement a '200 OK' response is sent.",
        "operationId": "getStatement",
        "parameters": [
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "PointClickCare's unique identifier for a statement.",
            "in": "path",
            "name": "statementId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetStatement"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Forbidden"
          },
          "404": {
            "content": {},
            "description": "Resource Not Found"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged-or-three-legged": [
              "user/privateStatement.read"
            ]
          }
        ],
        "summary": "Statement",
        "tags": [
          "Payments"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged-or-three-legged OAuth access token.",
          "name": "two-legged-or-three-legged"
        }
      }
    },
    "/public/preview1/orgs/{orgUuid}/conditions": {
      "get": {
        "description": "Retrieve a list of conditions for patient. Conditions include detailed information about a condition, problem, diagnosis, or other event, situation, issue, or clinical concept that has risen to a level of concern.",
        "operationId": "getConditions",
        "parameters": [
          {
            "description": "PointClickCare's unique identifier for a patient within the organization.</br></br>When a patient is admitted to a facility within an organization, they are assigned a patientId which is unique to their stay within that facility. If the same patient were to get admitted to another facility within the same organization in the future, they would be assigned a new patientId. The patientId however is unique at the organization level. That is, no two patients across different facilities within the organization will have the same patientId.",
            "in": "query",
            "name": "patientId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Represents the clinical status of the condition. Possible values are 'active' or 'resolved'. Multiple comma separated values are accepted. If not passed, only 'active' records are returned.",
            "in": "query",
            "name": "clinicalStatus",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Part of pagination control. Skip (page - 1) * pageSize records from the beginning of the list before returning the rest. Default is 1.",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Part of pagination control. How many records to return in response to this request. Default is 50. Maximum value allowed is 200.",
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ConditionListResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ConditionListResponseCanada"
                    }
                  ]
                },
                "examples": {
                  "List of conditions US": {
                    "summary": "List of conditions US.",
                    "value": {
                      "data": [
                        {
                          "classificationDescription": "Admission",
                          "clinicalStatus": "ACTIVE",
                          "comments": "diagnosis is clear, no issues to report.",
                          "conditionId": 189960,
                          "conditionCode": {
                            "codings": [
                              {
                                "system": "http://snomed.info/sct",
                                "version": "SNOMED 2020-04-01",
                                "code": "63650001",
                                "display": "Cholera"
                              }
                            ]
                          },
                          "createdBy": "user1",
                          "createdDate": "2017-02-10T03:25:15.000Z",
                          "icd10": "A00.9",
                          "icd10Description": "CHOLERA, UNSPECIFIED",
                          "onsetDate": "2017-03-02",
                          "principalDiagnosis": true,
                          "rankDescription": "Primary",
                          "revisionBy": "user1",
                          "revisionDate": "2017-02-10T03:25:15.000Z",
                          "therapy": false
                        },
                        {
                          "classificationDescription": "Admission",
                          "clinicalStatus": "RESOLVED",
                          "comments": "Diagnosis explains her symptoms of persistent and worsening headache over the last four weeks.",
                          "conditionId": 189795,
                          "conditionCode": {
                            "codings": [
                              {
                                "system": "http://snomed.info/sct",
                                "version": "SNOMED 2020-04-01",
                                "code": "81020007",
                                "display": "Cholera due to Vibrio cholerae El Tor"
                              }
                            ]
                          },
                          "createdBy": "user2",
                          "createdDate": "2017-01-03T04:45:15.000Z",
                          "icd10": "A00.1",
                          "icd10Description": "CHOLERA DUE TO VIBRIO CHOLERAE 01, BIOVAR ELTOR",
                          "onsetDate": "2017-02-15",
                          "principalDiagnosis": false,
                          "rankDescription": "Secondary",
                          "resolvedDate": "2017-02-23",
                          "revisionBy": "user2",
                          "revisionDate": "2017-01-03T04:45:15.000Z",
                          "therapy": true
                        }
                      ]
                    }
                  },
                  "List of conditions Canada": {
                    "summary": "List of conditions Canada.",
                    "value": {
                      "data": [
                        {
                          "classificationDescription": "Admission",
                          "clinicalStatus": "ACTIVE",
                          "comments": "diagnosis is clear, no issues to report.",
                          "conditionId": 15486,
                          "conditionCode": {
                            "codings": [
                              {
                                "system": "https://terminology.hl7.org/3.1.0/CodeSystem-icd10-CA.html",
                                "code": "M81.9",
                                "display": "Osteoporosis, unspecified"
                              }
                            ]
                          },
                          "createdBy": "user1",
                          "createdDate": "2017-02-10T03:25:15.000Z",
                          "icd10": "M81.9",
                          "icd10Description": "Osteoporosis, unspecified",
                          "onsetDate": "2017-03-02",
                          "principalDiagnosis": true,
                          "rankDescription": "Primary",
                          "revisionBy": "user1",
                          "revisionDate": "2017-02-10T03:25:15.000Z",
                          "therapy": false
                        }
                      ]
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Forbidden"
          },
          "404": {
            "content": {},
            "description": "Resource Not Found"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged-or-three-legged": [
              "user/condition.read"
            ]
          }
        ],
        "summary": "Conditions",
        "tags": [
          "Conditions"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged-or-three-legged OAuth access token.",
          "name": "two-legged-or-three-legged"
        }
      }
    },
    "/public/preview1/orgs/{orgUuid}/claim-status-change": {
      "post": {
        "description": "Updates the claim batch status in PointClickCare from pending to open/exported. The batch is updated after you receive a '201 Created' response",
        "operationId": "postClaimBatchStatusChange",
        "parameters": [
          {
            "name": "orgUuid",
            "in": "path",
            "description": "PointClickCare's unique identifier for the organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "The type of media being sent through the request. Expected content-type header is \"application/json\"",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/ClaimBatchStatusChangeSuccess"
                  },
                  {
                    "$ref": "#/components/schemas/ClaimBatchStatusChangeErrors"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {},
            "description": "created"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Forbidden"
          },
          "404": {
            "content": {},
            "description": "Resource Not Found"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged": []
          }
        ],
        "summary": "Claim Batch Status Update",
        "tags": [
          "Claim Management"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged OAuth access token.",
          "name": "two-legged"
        }
      },
      "servers": [
        {
          "url": "https://connect2.pointclickcare.com/api"
        }
      ]
    },
    "/public/preview1/orgs/{orgUuid}/contacts": {
      "get": {
        "description": "Retrieve a list of contacts for a patient. The list includes all contact parties (e.g. guardian, next of kin, guarantor) for the patient.",
        "operationId": "getPatientContacts",
        "parameters": [
          {
            "description": "PointClickCare's unique identifier for a patient within the organization.</br></br>When a patient is admitted to a facility within an organization, they are assigned a patientId which is unique to their stay within that facility. If the same patient were to get admitted to another facility within the same organization in the future, they would be assigned a new patientId. The patientId however is unique at the organization level. That is, no two patients across different facilities within the organization will have the same patientId.",
            "in": "query",
            "name": "patientId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Indicate to only get the contacts that are guarantors. Accepted values are 'true' or 'false'. If not passed, all contacts are returned.",
            "in": "query",
            "name": "guarantor",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientContactDetailsList"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Forbidden"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged-or-three-legged": [
              "user/patientContact.read"
            ]
          }
        ],
        "summary": "Patient Contacts",
        "tags": [
          "Patient Contacts"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged-or-three-legged OAuth access token.",
          "name": "two-legged-or-three-legged"
        }
      }
    },
    "/public/preview1/orgs/{orgUuid}/coverages": {
      "get": {
        "description": "Retrieve a patient's coverage details. By default, only the current payer tree structure along with informational payers are returned.",
        "operationId": "getCoverages",
        "parameters": [
          {
            "description": "If specified, returns the patient's payer tree structure and informational payers on a specific date and time. The date and time format are expressed in UTC in the following format: YYYY-MM-DDTHH:MM:SS.sssZ.",
            "in": "query",
            "name": "effectiveDateTime",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "PointClickCare's unique identifier for a patient within the organization.</br></br>When a patient is admitted to a facility within an organization, they are assigned a patientId which is unique to their stay within that facility. If the same patient were to get admitted to another facility within the same organization in the future, they would be assigned a new patientId. The patientId however is unique at the organization level. That is, no two patients across different facilities within the organization will have the same patientId.",
            "in": "query",
            "name": "patientId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoverageSequencePublic"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Forbidden"
          },
          "404": {
            "content": {},
            "description": "Resource Not Found"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged-or-three-legged": [
              "user/coverage.read"
            ]
          }
        ],
        "summary": "Patient coverage information",
        "tags": [
          "Coverages"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged-or-three-legged OAuth access token.",
          "name": "two-legged-or-three-legged"
        }
      }
    },
    "/public/preview1/orgs/{orgUuid}/destination-activations": {
      "get": {
        "description": "Retrieve a list of activated destinations for a facility. Response includes destination name, a unique identifier for the destination and the facility's configured OIDs. This API is designed to be consumed only by applications that are integration engines.",
        "operationId": "getDestinationActivations",
        "parameters": [
          {
            "description": "PointClickCare's unique identifier for a facility within the organization.",
            "in": "query",
            "name": "facId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "PointClickCare's unique identifier for a patient within the organization.</br></br>When a patient is admitted to a facility within an organization, they are assigned a patientId which is unique to their stay within that facility. If the same patient were to get admitted to another facility within the same organization in the future, they would be assigned a new patientId. The patientId however is unique at the organization level. That is, no two patients across different facilities within the organization will have the same patientId.",
            "in": "query",
            "name": "patientId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DestinationActivationList"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged": []
          }
        ],
        "summary": "Destination Activations",
        "tags": [
          "Destinations"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged OAuth access token.",
          "name": "two-legged"
        }
      },
      "servers": [
        {
          "url": "https://connect2.pointclickcare.com/api"
        }
      ]
    },
    "/public/preview1/orgs/{orgUuid}/diagnostic-reports": {
      "get": {
        "description": "Returns the list of diagnostic reports and the observations included for a specified patient. The list is sorted by issued date in descending order. Struck-out diagnostic reports are not included in the response. Resulted and cancelled diagnostic reports are not included in the response by default.",
        "operationId": "getDiagnosticReports",
        "parameters": [
          {
            "description": "PointClickCare's unique identifier for a patient within the organization.</br></br>When a patient is admitted to a facility within an organization, they are assigned a patientId which is unique to their stay within that facility. If the same patient were to get admitted to another facility within the same organization in the future, they would be assigned a new patientId. The patientId however is unique at the organization level. That is, no two patients across different facilities within the organization will have the same patientId.",
            "in": "query",
            "name": "patientId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Type of report requested. Acceptable values are 'laboratory' or 'radiology'.",
            "in": "query",
            "name": "reportType",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The status of the report to return. Return multiple statuses by separating them with a comma. The default is COMPLETED when the 'status' query parameter is not provided. Options are: ALL, COMPLETED, RESULTED, and CANCELLED. Using ALL will return results with a status of COMPLETED, RESULTED, and CANCELLED.",
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "issuedDateTime=ge (where ge is greater than or equal to) Represents the start of the date range during which the report was created. The date and time should be expressed in UTC in the following format: YYYY-MM-DDTHH:MM:SS.sssZ. For example if issuedDateTime=ge2015-08-12T05:23:45.000Z the range will include any time after and including 2015-08-12T05:23:45.000Z. If the 'issuedDateTime' parameter is not passed, all records will be returned till the current date. <br><br>issuedDateTime=le (where le is less than or equal to) Represents the end of the date range during which the report was created. The date and time should be expressed in UTC in the following format: the immunization record for a particular immunization was created. The date and time should be expressed in UTC in the following format: YYYY-MM-DDTHH:MM:SS.sssZ. For example if issuedDateTime=le2015-08-12T05:23:45.000Z the range will include any time prior to and including 2015-08-12T05:23:45.000Z. If the 'issuedDateTime' parameter is not passed, all records will be returned till the current date.",
            "in": "query",
            "name": "issuedDateTime",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Part of pagination control. Skip (page - 1) * pageSize records from the beginning of the list before returning the rest. Default is 1.",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Part of pagination control. How many records to return in response to this request. Default is 50. Maximum value allowed is 200.",
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDiagnosticReportListResponsePublic"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Forbidden"
          },
          "404": {
            "content": {},
            "description": "Resource Not Found"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged-or-three-legged": [
              "user/labResult.read OR user/radiologyResult.read"
            ]
          }
        ],
        "summary": "Diagnostic Reports",
        "tags": [
          "Diagnostic Reports"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged-or-three-legged OAuth access token.",
          "name": "two-legged-or-three-legged"
        }
      }
    },
    "/public/preview1/orgs/{orgUuid}/diagnostic-reports/{reportId}/file": {
      "get": {
        "description": "Get the file attached to the diagnostic report.",
        "operationId": "getDiagnosticReportFile",
        "parameters": [
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "PointClickCare's unique identifier for a diagnostic report.",
            "in": "path",
            "name": "reportId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDiagnosticReportFileResponsePublic"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Forbidden"
          },
          "404": {
            "content": {},
            "description": "Resource Not Found"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged-or-three-legged": [
              "user/labResult.read OR user/radiologyResult.read"
            ]
          }
        ],
        "summary": "Diagnostic Report File",
        "tags": [
          "Diagnostic Reports"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged-or-three-legged OAuth access token.",
          "name": "two-legged-or-three-legged"
        }
      }
    },
    "/public/preview1/orgs/{orgUuid}/encounter-notes": {
      "post": {
        "description": "Create a new encounter note for a given patient in PointClickCare. This progress note is for encounters with physicians, and will show up as an encounter in the PointClickCare application.<br/><br/>When using the POST Add new Encounter Note or POST Add new Progress Note APIs with three-legged authentication, it is mandatory to use the <a href=\"#operation/patchStrikeOutProgressNotesAndEncounterNotes\">PATCH Strike Out Progress Notes And Encounter Notes</a> API for removing notes submitted in error.",
        "operationId": "postEncounterNote",
        "parameters": [
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EncounterNote"
              }
            }
          },
          "description": "Add new Encounter Note",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgressNoteResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "406": {
            "content": {},
            "description": "Not Acceptable (If the section name in the sections list do not exist or any parameters contain forbidden characters)"
          },
          "409": {
            "content": {},
            "description": "Conflict"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged-or-three-legged": [
              "user/progressNote.write"
            ]
          }
        ],
        "summary": "Add new Encounter Note",
        "tags": [
          "Progress Notes"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged-or-three-legged OAuth access token.",
          "name": "two-legged-or-three-legged"
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/public/preview1/orgs/{orgUuid}/episodes-of-care": {
      "get": {
        "description": "Retrieve episodes of care for a patient. Episode of Care Management assists facilities or organizations that participate not only in CMS (The Centers for Medicare and Medicaid Services) bundled payments for Bundled Payments for Care Improvement (BPCI) and The Comprehensive Care for Joint Replacement (CJR), but for other Payers who have initiated bundled payments as well. <br> <br> Response includes the Diagnosis-Related Group (DRG), model and payer information for each episode for the patient.",
        "operationId": "getEpisodesOfCare",
        "parameters": [
          {
            "description": "PointClickCare's unique identifier for a patient within the organization.</br></br>When a patient is admitted to a facility within an organization, they are assigned a patientId which is unique to their stay within that facility. If the same patient were to get admitted to another facility within the same organization in the future, they would be assigned a new patientId. The patientId however is unique at the organization level. That is, no two patients across different facilities within the organization will have the same patientId.",
            "in": "query",
            "name": "patientId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Represents the type of the payer. Possible values are \"managedCare\", \"medicaid\", \"medicareA\", \"medicareB\", \"medicareD\", \"other\", \"outpatient\" and \"private\".",
            "in": "query",
            "name": "payerType",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Represents the status of the Episode of Care. Acceptable values are \"active\" and \"resolved\". Default value is \"active\".",
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Part of pagination control. Skip (page - 1) * pageSize records from the beginning of the list before returning the rest. Default is 1.",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Part of pagination control. How many records to return in response to this request. Default is 50. Maximum value allowed is 200.",
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EpisodeOfCareList"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Forbidden"
          },
          "404": {
            "content": {},
            "description": "Resource Not Found"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged-or-three-legged": [
              "user/episodeOfCare.read"
            ]
          }
        ],
        "summary": "Episodes Of Care",
        "tags": [
          "Episodes of Care"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged-or-three-legged OAuth access token.",
          "name": "two-legged-or-three-legged"
        }
      }
    },
    "/public/preview1/orgs/{orgUuid}/event-configuration": {
      "get": {
        "description": "Return facility defined details for the possible locations, resources and types of events organized by the facility. The API should be called before a Calendar Event is created.",
        "operationId": "getEventConfiguration",
        "parameters": [
          {
            "description": "PointClickCare's unique identifier for a facility within the organization.",
            "in": "query",
            "name": "facId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventConfigurationListResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "404": {
            "content": {},
            "description": "Resource Not Found"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged-or-three-legged": [
              "user/calendarConfiguration.read"
            ]
          }
        ],
        "summary": "Event Configuration",
        "tags": [
          "Calendar Event"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged-or-three-legged OAuth access token.",
          "name": "two-legged-or-three-legged"
        }
      }
    },
    "/public/preview1/orgs/{orgUuid}/facility/{facId}/external": {
      "post": {
        "tags": [
          "Sandbox APIs"
        ],
        "summary": "POST ExternalFacility",
        "description": "Create a new external facility.",
        "operationId": "postExternalFacility",
        "parameters": [
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "name": "orgUuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "PointClickCare's unique identifier for a facility within the organization.",
            "name": "facId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "Facility to be saved",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalFacility"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostExternalFacilityResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "two-legged": []
          }
        ],
        "x-authorization": {
          "name": "2-legged",
          "description": "This API requires a 2-legged OAuth access token."
        }
      }
    },
    "/public/preview1/orgs/{orgUuid}/facs": {
      "get": {
        "description": "Retrieve a list of all facilities within an organization. The response includes a list of facilities including facility details.",
        "operationId": "getFacilities",
        "parameters": [
          {
            "description": "Determines whether to include or exclude the head office facility. Default is false.",
            "in": "query",
            "name": "includeHeadOffice",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": " Determines whether to include or exclude inactive facilities in the response. Default is false.",
            "in": "query",
            "name": "includeInactive",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Part of pagination control. Skip (page - 1) * pageSize records from the beginning of the list before returning the rest. Default is 1.",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Part of pagination control. How many records to return in response to this request. Default is 50. Maximum value allowed is 200.",
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FacilityList"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged-or-three-legged": []
          }
        ],
        "summary": "Facilities",
        "tags": [
          "Facilities"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged-or-three-legged OAuth access token.",
          "name": "two-legged-or-three-legged"
        }
      }
    },
    "/public/preview1/orgs/{orgUuid}/facs/{facId}": {
      "get": {
        "description": "Get information about a specific facility within an organization. Please note that GET Facility Beds, GET Facility Floors, GET Facility Rooms, and GET Facility Units require separate approval. Having GET Facility end point approval will not give access to the other APIs.",
        "operationId": "getFacility",
        "parameters": [
          {
            "description": "A comma separated value, which determines whether to include specified optional fields. Optional field parameters available: generalConfiguration, clinicalConfiguration, pickList, serviceConfiguration, facilityTerms, orderAdministrationConfiguration, orderConfiguration, assessmentsWithCustomScheduling, careContentDirectoryConfiguration, inventoryManagementConfiguration.",
            "in": "query",
            "name": "includeOptionalFields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "PointClickCare's unique identifier for a facility within the organization.",
            "in": "path",
            "name": "facId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FacilityDetails"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "404": {
            "content": {},
            "description": "Resource Not Found"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged-or-three-legged": []
          }
        ],
        "summary": "Facility",
        "tags": [
          "Facilities"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged-or-three-legged OAuth access token.",
          "name": "two-legged-or-three-legged"
        }
      }
    },
    "/public/preview1/orgs/{orgUuid}/facs/{facId}/beds": {
      "get": {
        "description": "Retrieves details of all beds for a facility within an organization. Please note that GET Facility, GET Facility Floors, GET Facility Rooms, and GET Facility Units require separate approval. Having GET Facility Beds end point approval will not give access to the other APIs.",
        "operationId": "getFacilityBeds",
        "parameters": [
          {
            "description": "Part of pagination control. Skip (page - 1) * pageSize records from the beginning of the list before returning the rest. Default is 1.",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Part of pagination control. How many records to return in response to this request. Default is 50. Maximum value allowed is 200.",
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "PointClickCare's unique identifier for a facility within the organization.",
            "in": "path",
            "name": "facId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FacilityBedList"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Forbidden"
          },
          "404": {
            "content": {},
            "description": "Resource Not Found"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged-or-three-legged": []
          }
        ],
        "summary": "Facility Beds",
        "tags": [
          "Facilities"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged-or-three-legged OAuth access token.",
          "name": "two-legged-or-three-legged"
        }
      }
    },
    "/public/preview1/orgs/{orgUuid}/facs/{facId}/floors": {
      "get": {
        "description": "Retrieves details of all floors for a facility within an organization. Please note that GET Facility, GET Facility Beds, GET Facility Rooms, and GET Facility Units require separate approval. Having GET Facility Floors end point approval will not give access to the other APIs.",
        "operationId": "getFacilityFloors",
        "parameters": [
          {
            "description": "Part of pagination control. Skip (page - 1) * pageSize records from the beginning of the list before returning the rest. Default is 1.",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Part of pagination control. How many records to return in response to this request. Default is 50. Maximum value allowed is 200.",
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "PointClickCare's unique identifier for a facility within the organization.",
            "in": "path",
            "name": "facId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FacilityFloorList"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Forbidden"
          },
          "404": {
            "content": {},
            "description": "Resource Not Found"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged-or-three-legged": []
          }
        ],
        "summary": "Facility Floors",
        "tags": [
          "Facilities"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged-or-three-legged OAuth access token.",
          "name": "two-legged-or-three-legged"
        }
      }
    },
    "/public/preview1/orgs/{orgUuid}/facs/{facId}/rooms": {
      "get": {
        "description": "Retrieves details of all rooms for a facility within an organization. Please note that GET Facility, GET Facility Beds, GET Facility Floors, and GET Facility Units require separate approval. Having GET Facility Rooms end point approval will not give access to the other APIs.",
        "operationId": "getFacilityRooms",
        "parameters": [
          {
            "description": "Part of pagination control. Skip (page - 1) * pageSize records from the beginning of the list before returning the rest. Default is 1.",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Part of pagination control. How many records to return in response to this request. Default is 50. Maximum value allowed is 200.",
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "PointClickCare's unique identifier for a facility within the organization.",
            "in": "path",
            "name": "facId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FacilityRoomList"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Forbidden"
          },
          "404": {
            "content": {},
            "description": "Resource Not Found"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged-or-three-legged": []
          }
        ],
        "summary": "Facility Rooms",
        "tags": [
          "Facilities"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged-or-three-legged OAuth access token.",
          "name": "two-legged-or-three-legged"
        }
      }
    },
    "/public/preview1/orgs/{orgUuid}/facs/{facId}/units": {
      "get": {
        "description": "Retrieves details of all units for a facility within an organization. Please note GET Facility, GET Facility Beds, GET Facility Floors, GET Facility Rooms require separate approval. Having GET Facility Units end point approval will not give access to the other APIs.",
        "operationId": "getFacilityUnits",
        "parameters": [
          {
            "description": "Part of pagination control. Skip (page - 1) * pageSize records from the beginning of the list before returning the rest. Default is 1.",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Part of pagination control. How many records to return in response to this request. Default is 50. Maximum value allowed is 200.",
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "PointClickCare's unique identifier for a facility within the organization.",
            "in": "path",
            "name": "facId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FacilityUnitList"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Forbidden"
          },
          "404": {
            "content": {},
            "description": "Resource Not Found"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged-or-three-legged": []
          }
        ],
        "summary": "Facility Units",
        "tags": [
          "Facilities"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged-or-three-legged OAuth access token.",
          "name": "two-legged-or-three-legged"
        }
      }
    },
    "/public/preview1/orgs/{orgUuid}/facs/{facId}/webhook-errors": {
      "get": {
        "description": "This API will expose Webhook related error messages to 3rd Party Vendors. Error messages are only available up to 7 days after the error occurred. The most recent 100 webhooks will be returned. If errors are related to webhook transmission to the vendor, there will only be one error message (for the first webhook that failed).",
        "operationId": "getWebhookErrors",
        "parameters": [
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "PointClickCare's unique identifier for a facility within the organization.",
            "in": "path",
            "name": "facId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Forbidden"
          },
          "404": {
            "content": {},
            "description": "Resource Not Found"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged": []
          }
        ],
        "summary": "Webhook Errors",
        "tags": [
          "Sandbox APIs"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged OAuth access token.",
          "name": "two-legged"
        }
      },
      "servers": [
        {
          "url": "https://connect2.pointclickcare.com/api"
        }
      ]
    },
    "/public/preview1/orgs/{orgUuid}/patient/{patientId}/incontinence": {
      "get": {
        "description": "<p>Retrieve a list of incontinence record entries for a patient based on MDS 3.0.<p> <p>Incontinence records include the assessment response of specific questions of sections A, B , G, H, and M.</p> <p>Only locked assessment information with status Completed, Export Ready, and Accepted is retrieved.</p>",
        "operationId": "getIncontinence",
        "parameters": [
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "PointClickCare's unique identifier for a patient within the organization. Patient ID is mandatory. When a patient is admitted to a facility within an organization, they are assigned a patientId which is unique to their stay within that facility. If the same patient were to get admitted to another facility within the same organization in the future, they would be assigned a new patientId. The patientId however is unique at the organization level. That is, no two patients across different facilities within the organization will have the same patientId.",
            "in": "path",
            "name": "patientId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Represents the identification number associated with the assessment. If not provided, all assessments with Completed, Export Ready, and Accepted status are returned by default.",
            "in": "query",
            "name": "assessId",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientIncontinence"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Forbidden"
          },
          "404": {
            "content": {},
            "description": "Resource Not Found"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged-or-three-legged": [
              "user/patientIncontinence.read",
              "user/patientIncontinenceSectionA.read",
              "user/patientIncontinenceSectionB.read",
              "user/patientIncontinenceSectionG.read",
              "user/patientIncontinenceSectionH.read",
              "user/patientIncontinenceSectionM.read"
            ]
          }
        ],
        "summary": "GET Patient Incontinence",
        "tags": [
          "Sandbox APIs"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged-or-three-legged OAuth access token.",
          "name": "two-legged-or-three-legged"
        }
      }
    },
    "/public/preview1/orgs/{orgUuid}/focuses/{focusId}": {
      "get": {
        "description": "Retrieves focus details including related goals and interventions.",
        "operationId": "getFocus",
        "parameters": [
          {
            "description": "Represents the status of the goals within the focus. Acceptable values are: Active, Resolved, Cancelled. Multiple statuses can be specified using a list of comma separated values. By default, all statuses are included.",
            "in": "query",
            "name": "goalStatus",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Represents the status of the interventions within the focus. Acceptable values are: Active, Resolved, Cancelled. Multiple statuses can be specified using a list of comma separated values. By default, all statuses are included.",
            "in": "query",
            "name": "interventionStatus",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "PointClickCare's unique identifier for a care plan focus.",
            "in": "path",
            "name": "focusId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFocusResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Forbidden"
          },
          "404": {
            "content": {},
            "description": "Resource Not Found"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged-or-three-legged": [
              "user/carePlan.read"
            ]
          }
        ],
        "summary": "Focus",
        "tags": [
          "Care Plans"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged-or-three-legged OAuth access token.",
          "name": "two-legged-or-three-legged"
        }
      }
    },
    "/public/preview1/orgs/{orgUuid}/historical-advance-directives-consents": {
      "post": {
        "description": "Push historical advance directives for a patient for a defined care period to PointClickCare.<br><br><b>NOTE:</b> You must call the POST <a href='document?operation=com.pointclickcare.docs.apidocs.api.historical.careperiod.operationdefinition.PostCarePeriodOpDef'>/care-periods</a> endpoint to obtain a <em>carePeriodId</em> before you can call this API to push medications for a certain care period.",
        "operationId": "postHistoricalAdvanceDirectiveConsents",
        "parameters": [
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InboundAdvanceDirective"
              }
            }
          },
          "description": "historicalAdvanceDirectivesConsent to be saved",
          "required": false
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InboundAdvanceDirectiveResponse"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Forbidden"
          },
          "404": {
            "content": {},
            "description": "Resource Not Found"
          },
          "409": {
            "content": {},
            "description": "Conflict"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged": []
          }
        ],
        "summary": "Historical Advance Directive Consents",
        "tags": [
          "Historical Clinical Data"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged OAuth access token.",
          "name": "two-legged"
        },
        "x-codegen-request-body-name": "historicalAdvanceDirectivesConsent"
      },
      "servers": [
        {
          "url": "https://connect2.pointclickcare.com/api"
        }
      ]
    },
    "/public/preview1/orgs/{orgUuid}/historical-allergy-intolerances": {
      "post": {
        "description": "Push a historical allergy (drug, food, substance, environmental or others) for a patient for a defined care period to PointClickCare.<br/><br/><strong>NOTE:</strong> You must call the POST <a href='document?operation=com.pointclickcare.docs.apidocs.api.historical.careperiod.operationdefinition.PostCarePeriodOpDef'>/care-periods</a> endpoint to obtain a <em>carePeriodId</em> before you can call this API to push allergy history for the patient.",
        "operationId": "postHistoricalAllergyIntolerances",
        "parameters": [
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InboundAllergy"
              },
              "examples": {
                "Patient with no known allergies": {
                  "value": {
                    "carePeriodId": 10101,
                    "outliers": "No Known Allergies"
                  }
                },
                "Patient with allergies": {
                  "value": {
                    "carePeriodId": 10101,
                    "allergy": {
                      "category": "Drug",
                      "allergen": {
                        "system": "Medispan Allergy Class",
                        "code": "387895",
                        "display": "Penicillin G"
                      },
                      "clinicalStatus": "active",
                      "type": "Allergy",
                      "onsetDate": "2015-01-11",
                      "recorder": "mikti",
                      "severity": "mild",
                      "reactionType": "Anaphylaxis",
                      "reactionSubType": "Bronchospasm",
                      "reactionNote": "Patient develops a rash."
                    }
                  }
                },
                "Patient with uncoded allergies": {
                  "value": {
                    "carePeriodId": 10101,
                    "allergy": {
                      "category": "Drug",
                      "allergen": {
                        "display": "Penicillin G"
                      },
                      "clinicalStatus": "active",
                      "type": "Allergy",
                      "onsetDate": "2015-01-11",
                      "recorder": "mikti",
                      "severity": "mild",
                      "reactionType": "Anaphylaxis",
                      "reactionSubType": "Bronchospasm",
                      "reactionNote": "Patient develops a rash."
                    }
                  }
                }
              }
            }
          },
          "description": "historicalAlleryIntolerance to be saved",
          "required": false
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InboundAllergyResponse"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Forbidden"
          },
          "404": {
            "content": {},
            "description": "Resource Not Found"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged": []
          }
        ],
        "summary": "Historical Allergy Intolerances",
        "tags": [
          "Historical Clinical Data"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged OAuth access token.",
          "name": "two-legged"
        },
        "x-codegen-request-body-name": "historicalAllergyIntolerances"
      },
      "servers": [
        {
          "url": "https://connect2.pointclickcare.com/api"
        }
      ]
    },
    "/public/preview1/orgs/{orgUuid}/historical-conditions": {
      "post": {
        "description": "Push historical conditions for a patient for a defined care period to PointClickCare.<br>NOTE: You must call the POST <a href='document?operation=com.pointclickcare.docs.apidocs.api.historical.careperiod.operationdefinition.PostCarePeriodOpDef'>/care-periods</a> endpoint to obtain a <i>carePeriodId</i> before you can call this API to push conditions for a certain care period.</br>",
        "operationId": "postHistoricalConditions",
        "parameters": [
          {
            "description": "The value determines if the condition needs to be force queued. Default is false if not included.",
            "in": "query",
            "name": "forceQueue",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HistoricalCondition"
              }
            }
          },
          "description": "Historical Conditions",
          "required": false
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoricalConditionResponse"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "404": {
            "content": {},
            "description": "Resource Not Found"
          },
          "409": {
            "content": {},
            "description": "Conflict"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged": []
          }
        ],
        "summary": "Historical Conditions",
        "tags": [
          "Historical Clinical Data"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged OAuth access token.",
          "name": "two-legged"
        },
        "x-codegen-request-body-name": "condition"
      },
      "servers": [
        {
          "url": "https://connect2.pointclickcare.com/api"
        }
      ]
    },
    "/public/preview1/orgs/{orgUuid}/historical-diagnostic-reports-file": {
      "post": {
        "description": "Push historical diagnostic report files associated with a diagnostic report, for a patient, for a defined care period to PointClickCare.<br/><br/><strong>NOTE:</strong> You must call the POST <a href='document?operation=com.pointclickcare.docs.apidocs.api.historical.careperiod.operationdefinition.PostCarePeriodOpDef'>/care-periods</a> endpoint to obtain a <em>carePeriodId</em> and either the POST /historical-diagnostic-reports-laboratory or POST /historical-diagnostic-reports-radiology endpoints to obtain a <em>historicalDiagnosticReportId</em> before you can call this API to push diagnostic report files for a defined care period and diagnostic report.",
        "operationId": "postHistoricalDiagnosticReportsFile",
        "parameters": [
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InboundDiagnosticReportFile"
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "documentFile": {
                    "type": "string",
                    "format": "binary",
                    "description": "Users are expected to upload a(n) document (The max file size is 5MB) file with supported file types as: BMP, CSV, DOC, DOCX, GIF, HTM, HTML, JPEG, JPG, PDF, PJPEG, PNG, PPT, RTF, TXT, WPD, WPS, XLS, XLSX, XML, ZIP format(s)."
                  }
                }
              }
            }
          },
          "description": "Part 1: JSON, Part Name: metadata <br>Part 2: MultipartFile, Part Name: documentFile </br>",
          "required": false
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InboundDiagnosticReportFileResponse"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Forbidden"
          },
          "404": {
            "content": {},
            "description": "Resource Not Found"
          },
          "409": {
            "content": {},
            "description": "Conflict"
          },
          "413": {
            "content": {},
            "description": "Request Entity Too Large"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged": []
          }
        ],
        "summary": "Historical Diagnostic Report Files",
        "tags": [
          "Historical Clinical Data"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged OAuth access token.",
          "name": "two-legged"
        },
        "x-codegen-request-body-name": "document"
      },
      "servers": [
        {
          "url": "https://connect2.pointclickcare.com/api"
        }
      ]
    },
    "/public/preview1/orgs/{orgUuid}/historical-diagnostic-reports-laboratory": {
      "post": {
        "description": "Post historical diagnostic laboratory reports for a patient for a defined care period to PointClickCare.<br />NOTE: You must call the POST <a href='document?operation=com.pointclickcare.docs.apidocs.api.historical.careperiod.operationdefinition.PostCarePeriodOpDef'>/care-periods</a> endpoint to obtain a <i>carePeriodId</i> before you can call this API to post reports for a certain care period.",
        "operationId": "postHistoricalDiagnosticReportsLaboratory",
        "parameters": [
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostHistoricalDiagnosticReportsLaboratory"
              }
            }
          },
          "description": "Historical Clinical Data",
          "required": false
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostHistoricalDiagnosticReportsLaboratoryResponse"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Forbidden"
          },
          "404": {
            "content": {},
            "description": "Resource Not Found"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged": []
          }
        ],
        "summary": "Historical Diagnostic Reports - Laboratory",
        "tags": [
          "Historical Clinical Data"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged OAuth access token.",
          "name": "two-legged"
        },
        "x-codegen-request-body-name": "document"
      },
      "servers": [
        {
          "url": "https://connect2.pointclickcare.com/api"
        }
      ]
    },
    "/public/preview1/orgs/{orgUuid}/historical-diagnostic-reports-radiology": {
      "post": {
        "description": "Post historical radiology diagnostic reports for a patient for a defined care period to PointClickCare.<br />NOTE: You must call the POST <a href='document?operation=com.pointclickcare.docs.apidocs.api.historical.careperiod.operationdefinition.PostCarePeriodOpDef'>/care-periods</a> endpoint to obtain a <i>carePeriodId</i> before you can call this API to post reports for a certain care period.",
        "operationId": "postHistoricalDiagnosticReportsRadiology",
        "parameters": [
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostHistoricalDiagnosticReportRadiology"
              }
            }
          },
          "description": "Historical Diagnostic Radiology Report",
          "required": false
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostHistoricalDiagnosticReportRadiologyResponse"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Forbidden"
          },
          "404": {
            "content": {},
            "description": "Resource Not Found"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged": []
          }
        ],
        "summary": "Historical Diagnostic Reports - Radiology",
        "tags": [
          "Historical Clinical Data"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged OAuth access token.",
          "name": "two-legged"
        },
        "x-codegen-request-body-name": "radiologyReport"
      },
      "servers": [
        {
          "url": "https://connect2.pointclickcare.com/api"
        }
      ]
    },
    "/public/preview1/orgs/{orgUuid}/historical-documents": {
      "post": {
        "description": "Push historical documents for a patient for a defined care period to PointClickCare. </br>NOTE: You must call the POST <a href='document?operation=com.pointclickcare.docs.apidocs.api.historical.careperiod.operationdefinition.PostCarePeriodOpDef'>/care-periods</a> endpoint to obtain a carePeriodId before you can call this API to push conditions for a certain care period.",
        "operationId": "postHistoricalDocuments",
        "parameters": [
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InboundDocument"
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "documentFile": {
                    "type": "string",
                    "format": "binary",
                    "description": "Users are expected to upload a(n) document (The max file size is 5MB) file with supported file types as: BMP, CSV, DOC, DOCX, GIF, HTM, HTML, JPEG, JPG, PDF, PJPEG, PNG, PPT, RTF, TXT, WPD, WPS, XLS, XLSX, XML, ZIP format(s)."
                  }
                }
              }
            }
          },
          "description": "Part 1: JSON, Part Name: metadata <br>Part 2: MultipartFile, Part Name: documentFile</br>",
          "required": false
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InboundDocumentResponse"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Forbidden"
          },
          "404": {
            "content": {},
            "description": "Resource Not Found"
          },
          "409": {
            "content": {},
            "description": "Conflict"
          },
          "413": {
            "content": {},
            "description": "Request Entity Too Large"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged": []
          }
        ],
        "summary": "Historical Documents",
        "tags": [
          "Historical Clinical Data"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged OAuth access token.",
          "name": "two-legged"
        },
        "x-codegen-request-body-name": "document"
      },
      "servers": [
        {
          "url": "https://connect2.pointclickcare.com/api"
        }
      ]
    },
    "/public/preview1/orgs/{orgUuid}/historical-immunizations": {
      "post": {
        "description": "Push historical immunizations for a patient for a defined care period to PointClickCare.<br/><br/><strong>NOTE:</strong> You must call the POST <a href='document?operation=com.pointclickcare.docs.apidocs.api.historical.careperiod.operationdefinition.PostCarePeriodOpDef'>/care-periods</a> endpoint to obtain a <em>carePeriodId</em> before you can call this API to push immunizations for a certain care period.",
        "operationId": "postHistoricalImmunizations",
        "parameters": [
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InboundImmunization"
              }
            }
          },
          "description": "historicalImmunization to be saved",
          "required": false
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InboundImmunizationResponse"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Forbidden"
          },
          "404": {
            "content": {},
            "description": "Resource Not Found"
          },
          "409": {
            "content": {},
            "description": "Conflict"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged": []
          }
        ],
        "summary": "Historical Immunizations",
        "tags": [
          "Historical Clinical Data"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged OAuth access token.",
          "name": "two-legged"
        },
        "x-codegen-request-body-name": "historicalImmunizations"
      },
      "servers": [
        {
          "url": "https://connect2.pointclickcare.com/api"
        }
      ]
    },
    "/public/preview1/orgs/{orgUuid}/historical-medications": {
      "post": {
        "description": "Push historical medications for a patient for a defined care period to PointClickCare.<br />NOTE: You must call the POST <a href='document?operation=com.pointclickcare.docs.apidocs.api.historical.careperiod.operationdefinition.PostCarePeriodOpDef'>/care-periods</a> endpoint to obtain a <i>carePeriodId</i> before you can call this API to push medications for a certain care period.",
        "operationId": "postHistoricalMedications",
        "parameters": [
          {
            "description": "The value determines if the medication needs to be force queued.",
            "in": "query",
            "name": "forceQueue",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The value that determines if the medication needs to not be queued.",
            "in": "query",
            "name": "skipQueue",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HistoricalMedication"
              }
            }
          },
          "description": "Historical Medications",
          "required": false
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoricalMedicationResponse"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "404": {
            "content": {},
            "description": "Resource Not Found"
          },
          "409": {
            "content": {},
            "description": "Conflict"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged": []
          }
        ],
        "summary": "Historical Medications",
        "tags": [
          "Historical Clinical Data"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged OAuth access token.",
          "name": "two-legged"
        },
        "x-codegen-request-body-name": "medication"
      },
      "servers": [
        {
          "url": "https://connect2.pointclickcare.com/api"
        }
      ]
    },
    "/public/preview1/orgs/{orgUuid}/historical-observations": {
      "post": {
        "description": "<p>Push historical observations (including vitals signs) for a patient for a defined care period to PointClickCare.</p><p>NOTE: You must call the POST <a href='document?operation=com.pointclickcare.docs.apidocs.api.historical.careperiod.operationdefinition.PostCarePeriodOpDef'>/care-periods</a> endpoint to obtain a <i>carePeriodId</i> before you can call this API to post historical observations for a patient and care period.</p>",
        "operationId": "postHistoricalObservations",
        "parameters": [
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostHistoricalObservations"
              }
            }
          },
          "description": "Historical Clinical Data",
          "required": false
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostHistoricalObservationsResponse"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Forbidden"
          },
          "404": {
            "content": {},
            "description": "Resource Not Found"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged": []
          }
        ],
        "summary": "Historical Observations",
        "tags": [
          "Historical Clinical Data"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged OAuth access token.",
          "name": "two-legged"
        },
        "x-codegen-request-body-name": "document"
      },
      "servers": [
        {
          "url": "https://connect2.pointclickcare.com/api"
        }
      ]
    },
    "/public/preview1/orgs/{orgUuid}/historical-social-history": {
      "post": {
        "description": "Push social history for a patient for a defined care period to PointClickCare.<br><br><b>NOTE:</b> You must call the POST <a href='document?operation=com.pointclickcare.docs.apidocs.api.historical.careperiod.operationdefinition.PostCarePeriodOpDef'>/care-periods</a> endpoint to obtain a <em>carePeriodId</em> before you can call this API to push social history for a certain care period.",
        "operationId": "postHistoricalSocialHistory",
        "parameters": [
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HistoricalSocial"
              }
            }
          },
          "description": "Social History",
          "required": false
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoricalSocialResponse"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "404": {
            "content": {},
            "description": "Resource Not Found"
          },
          "409": {
            "content": {},
            "description": "Conflict"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged": []
          }
        ],
        "summary": "Historical Social History",
        "tags": [
          "Historical Clinical Data"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged OAuth access token.",
          "name": "two-legged"
        },
        "x-codegen-request-body-name": "social"
      },
      "servers": [
        {
          "url": "https://connect2.pointclickcare.com/api"
        }
      ]
    },
    "/public/preview1/orgs/{orgUuid}/immunizations": {
      "get": {
        "description": "Retrieve a list of immunization and vaccine records for a patient.</br></br>In PointClickCare, an immunization record is added when a patient's consent is obtained for the immunization, if the patient is eligible for the immunization. The immunization record is then updated when the immunization is administered. For certain types of immunizations, the immunization record is also updated with the results information for the immunization after it has been administered.",
        "operationId": "getImmunizations",
        "parameters": [
          {
            "description": "PointClickCare's unique identifier for a patient within the organization.</br></br>When a patient is admitted to a facility within an organization, they are assigned a patientId which is unique to their stay within that facility. If the same patient were to get admitted to another facility within the same organization in the future, they would be assigned a new patientId. The patientId however is unique at the organization level. That is, no two patients across different facilities within the organization will have the same patientId.",
            "in": "query",
            "name": "patientId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Part of pagination control. Skip (page - 1) * pageSize records from the beginning of the list before returning the rest. Default is 1.",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Part of pagination control. How many records to return in response to this request. Default is 50. Maximum value allowed is 200.",
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Represents if an immunization was administered or not. Field can be set to 'true', 'false' or left blank.",
            "in": "query",
            "name": "given",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "createdDateTime=ge (where ge is greater than or equal to) Represents the start of the date range during which the immunization record for a particular immunization was created. The date and time should be expressed in UTC in the following format: YYYY-MM-DDTHH:MM:SS.sssZ. For example if createdDateTime=ge2015-08-12T05:23:45.000Z the range will include any time after and including 2015-08-12T05:23:45.000Z. If the 'createdDateTime' parameter is not passed, all records will be returned till the current date. <br><br>createdDateTime=le (where le is less than or equal to) Represents the end of a range of dates during which the immunization record for a particular immunization was created. The date and time should be expressed in UTC in the following format: YYYY-MM-DDTHH:MM:SS.sssZ. For example if createdDateTime=le2015-08-12T05:23:45.000Z the range will include any time prior to and including 2015-08-12T05:23:45.000Z. If the 'createdDateTime' parameter is not passed, all records will be returned till the current date.",
            "in": "query",
            "name": "createdDateTime",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "administrationDateTime=ge (where ge is greater than or equal to) Represents the start of the date range during which immunizations were administered to a patient. The date and time should be expressed in UTC in the following format: YYYY-MM-DDTHH:MM:SS.sssZ. For example if administrationDateTime=ge2015-08-12T05:23:45.000Z the range will include any time after and including 2015-08-12T05:23:45.000Z. If the 'administrationDateTime' parameter is not passed, all records will be returned till the current date.<br><br>administrationDateTime=le (where le is less than or equal to) Represents the end of a range of dates during which immunizations were administered to a patient. The date and time should be expressed in the following format: YYYY-MM-DDTHH:MM:SS.sssZ. For example if administrationDateTime=le2015-08-12T05:23:45.000Z the range will include any time prior to and including 2015-08-12T05:23:45.000Z. If the 'administrationDateTime' parameter is not passed, all records will be returned till the current date.",
            "in": "query",
            "name": "administrationDateTime",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicImmunizationListResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Forbidden"
          },
          "404": {
            "content": {},
            "description": "Resource Not Found"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged-or-three-legged": [
              "user/immunization.read"
            ]
          }
        ],
        "summary": "Immunizations",
        "tags": [
          "Immunizations"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged-or-three-legged OAuth access token.",
          "name": "two-legged-or-three-legged"
        }
      }
    },
    "/public/preview1/orgs/{orgUuid}/incidents/{incidentId}": {
      "get": {
        "description": "<p>Retrieve details of a specific incident report recorded for a patient.</p>",
        "operationId": "getIncident",
        "parameters": [
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "PointClickCare's unique identifier for an incident report.",
            "in": "path",
            "name": "incidentId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Incident"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Forbidden"
          },
          "404": {
            "content": {},
            "description": "Resource Not Found"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged-or-three-legged": [
              "user/riskManagement.read"
            ]
          }
        ],
        "summary": "Get Incident Details",
        "tags": [
          "Sandbox APIs"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged-or-three-legged OAuth access token.",
          "name": "two-legged-or-three-legged"
        }
      }
    },
    "/public/preview1/orgs/{orgUuid}/journal-entries-summary": {
      "servers": [
        {
          "url": "https://connect2.pointclickcare.com/api"
        }
      ],
      "get": {
        "description": "Retrieves a snapshot of summarized account receivable transactions for the current period for a facility after month-end closing.",
        "operationId": "getJournalEntriesSummary",
        "summary": "Journal Entries Summary",
        "tags": [
          "Sandbox APIs"
        ],
        "security": [
          {
            "two-legged": []
          }
        ],
        "x-authorization": {
          "description": "This API requires a two-legged OAuth access token.",
          "name": "two-legged"
        },
        "parameters": [
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "PointClickCare's unique identifier for a facility within the organization.",
            "in": "query",
            "name": "facId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Part of pagination control. Skip (page - 1) * pageSize records from the beginning of the list before returning the rest. Default is 1.",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Part of pagination control. How many records to return in response to this request. Default is 50. Maximum value allowed is 200.",
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JournalEntriesSummaryList"
                }
              }
            },
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource Not Found"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Too Many Concurrent Requests"
          }
        }
      }
    },
    "/public/preview1/orgs/{orgUuid}/lab-results": {
      "post": {
        "description": "Create a new laboratory results report for a given patient in PointClickCare.",
        "operationId": "postLabResultReport",
        "parameters": [
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LabResultReport"
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "labResultReportAttachment": {
                    "type": "string",
                    "format": "binary",
                    "description": "Users are expected to upload a(n) document (The max file size is 2MB) file with supported file types as: PDF format."
                  }
                }
              }
            }
          },
          "description": "Part 1: JSON, Part Name: labResultReportData <br>Part 2: MultipartFile, Part Name: labResultReportAttachment</br>",
          "required": false
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostLabResultResponse"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "404": {
            "content": {},
            "description": "Resource Not Found"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "two-legged": []
          }
        ],
        "summary": "Lab Result Report",
        "tags": [
          "Sandbox APIs"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged OAuth access token.",
          "name": "two-legged"
        },
        "x-codegen-request-body-name": "labResultReport"
      },
      "servers": [
        {
          "url": "https://connect2.pointclickcare.com/api"
        }
      ]
    },
    "/public/preview1/orgs/{orgUuid}/radiology-results": {
      "post": {
        "description": "Create a new radiology results report for a given patient in PointClickCare.",
        "operationId": "postRadiologyResultReport",
        "parameters": [
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "The type of media being sent through the request. Expected content-type header is \"multipart/form-data\"",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RadiologyResultReport"
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "radiologyResultReportAttachment": {
                    "type": "string",
                    "format": "binary",
                    "description": "Users have the option to upload a(n) document (The max file size is 2MB) file with supported file types as: PDF format(s)."
                  }
                }
              }
            }
          },
          "description": "Part 1 (required): JSON, Part Name: radiologyResultReportData<br>Part 2 (optional): MultipartFile, Part Name: radiologyResultReportAttachment</br>",
          "required": false
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostRadiologyResultResponse"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "404": {
            "content": {},
            "description": "Resource Not Found"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "two-legged": []
          }
        ],
        "summary": "Radiology Result Report",
        "tags": [
          "Sandbox APIs"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged OAuth access token.",
          "name": "two-legged"
        },
        "x-codegen-request-body-name": "radiologyResultReport"
      },
      "servers": [
        {
          "url": "https://connect2.pointclickcare.com/api"
        }
      ]
    },
    "/public/preview1/orgs/{orgUuid}/medications": {
      "get": {
        "description": "Retrieve all medications for a given patient within a certain facility.",
        "operationId": "getPatientMedications",
        "parameters": [
          {
            "description": "PointClickCare's unique identifier for a patient within the organization.</br></br>When a patient is admitted to a facility within an organization, they are assigned a patientId which is unique to their stay within that facility. If the same patient were to get admitted to another facility within the same organization in the future, they would be assigned a new patientId. The patientId however is unique at the organization level. That is, no two patients across different facilities within the organization will have the same patientId.",
            "in": "query",
            "name": "patientId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "PointClickCare's unique identifier for a facility within the organization.",
            "in": "query",
            "name": "facId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Include orders of any combination of the following statuses: \"active\", \"pending\", \"discontinued\", \"completed\", \"initial\"</br></br> *\"initial\" status cannot be requested together with any other status. All \"initial\" medications will be returned - paging parameters are ignored for this request.<br /><br /> The following orders will be returned for the provided statuses: <ul> <li> not provided <ul> <li>active</li> </ul> </li> <li> active <ul> <li>active</li> <li>on hold</li> </ul> </li> <li> pending <ul> <li>pending confirmation</li> <li>clinical review</li> <li>pending signature</li> </ul> </li> <li> discontinued <ul> <li>discontinued</li> </ul> </li> <li> completed <ul> <li>completed</li> </ul> </li> <li> initial <ul> <li>queued</li> </ul> </li> </ul>",
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "If set to true, limits the returned discontinued and completed orders to the last 30 days from current date. Active and pending orders are still all returned.",
            "in": "query",
            "name": "limitNonActiveOrders",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Part of pagination control. Skip (page - 1) * pageSize records from the beginning of the list before returning the rest. Default is 1.",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Part of pagination control. How many records to return in response to this request. Default is 50. Maximum value allowed is 200.",
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A comma separated value, which determines whether to include specified optional fields. Optional field parameters available: drugclass,importeddata,physiciandetails.",
            "in": "query",
            "name": "includeOptionalFields",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MedicationList"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Forbidden"
          },
          "404": {
            "content": {},
            "description": "Resource Not Found"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged-or-three-legged": [
              "user/medication.read"
            ]
          }
        ],
        "summary": "Patient Medications",
        "tags": [
          "Medications"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged-or-three-legged OAuth access token.",
          "name": "two-legged-or-three-legged"
        }
      }
    },
    "/public/preview1/orgs/{orgUuid}/nutrition-orders": {
      "get": {
        "description": "Returns the list of Active and On Hold Nutrition Orders for a specified patient. The list is sorted by order date in desending order. Struck-out, discontinue or complete orders are not included in the response.",
        "operationId": "getNutritionOrders",
        "parameters": [
          {
            "description": "PointClickCare's unique identifier for a patient within the organization.</br></br>When a patient is admitted to a facility within an organization, they are assigned a patientId which is unique to their stay within that facility. If the same patient were to get admitted to another facility within the same organization in the future, they would be assigned a new patientId. The patientId however is unique at the organization level. That is, no two patients across different facilities within the organization will have the same patientId.",
            "in": "query",
            "name": "patientId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Represents the order status of the nutrition order. If no specific status is passed both 'active' and 'on hold' nutrition orders will be returned.",
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Represents the order date/time of the nutrition order. The date and time should be expressed in UTC in the following format: YYYY-MM-DDTHH:MM:SS.sssZ. For example, if orderDateTime=ge2015-08-12T05:23:45.000Z the range will include any time after and including 2015-08-12T05:23:45.000Z. If the 'orderDateTime' parameter is not passed, all records will be returned till the current date.",
            "in": "query",
            "name": "orderDateTime",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NutritionOrderList"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Forbidden"
          },
          "404": {
            "content": {},
            "description": "Resource Not Found"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged-or-three-legged": [
              "user/nutritionOrder.read"
            ]
          }
        ],
        "summary": "Nutrition Orders",
        "tags": [
          "Nutrition Orders"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged-or-three-legged OAuth access token.",
          "name": "two-legged-or-three-legged"
        }
      }
    },
    "/public/preview1/orgs/{orgUuid}/observation-baselines": {
      "get": {
        "description": "Retrieve the observation baselines recorded for a given patient.",
        "operationId": "getObservationBaselines",
        "parameters": [
          {
            "description": "PointClickCare's unique identifier for a patient within the organization.</br></br>When a patient is admitted to a facility within an organization, they are assigned a patientId which is unique to their stay within that facility. If the same patient were to get admitted to another facility within the same organization in the future, they would be assigned a new patientId. The patientId however is unique at the organization level. That is, no two patients across different facilities within the organization will have the same patientId.",
            "in": "query",
            "name": "patientId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Represents the type of observation. Acceptable values are: heartrate, bloodPressure, bloodSugar, oxygenSaturation, weight, height, painLevel, temperature, respirations. Multiple observation types can be specified using a list of comma separated values. By default, all types are included.",
            "in": "query",
            "name": "type",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObservationBaselinesList"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Forbidden"
          },
          "404": {
            "content": {},
            "description": "Resource Not Found"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged-or-three-legged": [
              "user/observationBaselines.read"
            ]
          }
        ],
        "summary": "Observation Baselines",
        "tags": [
          "Observations"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged-or-three-legged OAuth access token.",
          "name": "two-legged-or-three-legged"
        }
      }
    },
    "/public/preview1/orgs/{orgUuid}/observations": {
      "get": {
        "description": "Retrieve the historical observations records for a given patient.",
        "operationId": "getObservations",
        "parameters": [
          {
            "description": "PointClickCare's unique identifier for a patient within the organization.</br></br>When a patient is admitted to a facility within an organization, they are assigned a patientId which is unique to their stay within that facility. If the same patient were to get admitted to another facility within the same organization in the future, they would be assigned a new patientId. The patientId however is unique at the organization level. That is, no two patients across different facilities within the organization will have the same patientId.",
            "in": "query",
            "name": "patientId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Represents the start of the date range for which the observations will be returned for a patient. The date and time should be expressed in UTC in the following format: YYYY-MM-DDTHH:MM:SS.sssZ. If startDate and endDate are not specified, then the latest observations will be returned. If only startDate is not specified, January 1, 1970 UTC will be used as the start date. If the  \"latest\"  parameter is set to true, it will take precedence over startDate and endDate and the latest observations will be returned.",
            "in": "query",
            "name": "startDate",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Represents the end of the date range for which the observations will be returned for a patient. The date and time should be expressed in UTC in the following format: YYYY-MM-DDTHH:MM:SS.sssZ. If startDate and endDate are not specified, then the latest observations will be returned. If only endDate is not specified, the current date and time (the time the request is made) will be used as the endDate. If the \"latest\" parameter is set to true, it will take precedence over startDate and endDate and the latest observations will be returned.",
            "in": "query",
            "name": "endDate",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": " Indicate to only get the latest values. Accepted values: true or false. If set to true, this will take precedence over startDate and endDate and the latest observations will be returned. Value will be defaulted to be true if startDate and endDate are not specified.",
            "in": "query",
            "name": "latest",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Represents the type of observation. Acceptable values are: heartrate, bloodPressure, bloodSugar, oxygenSaturation, weight, height, painLevel, temperature, respirations. Multiple observation types can be specified using a list of comma separated values. By default, all types are included.",
            "in": "query",
            "name": "type",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Part of pagination control. Skip (page - 1) * pageSize records from the beginning of the list before returning the rest. Default is 1.",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Part of pagination control. How many records to return in response to this request. Default is 50. Maximum value allowed is 200.",
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObservationList"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Forbidden"
          },
          "404": {
            "content": {},
            "description": "Resource Not Found"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged-or-three-legged": [
              "For all observations: user/observation.read<BR> For latest observations: user/latestObservation.read"
            ]
          }
        ],
        "summary": "Observations",
        "tags": [
          "Observations"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged-or-three-legged OAuth access token.",
          "name": "two-legged-or-three-legged"
        }
      },
      "post": {
        "description": "Create an observation for a given patient in PointClickCare.",
        "operationId": "postObservations",
        "parameters": [
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ObservationPostBody"
              }
            }
          },
          "description": "Observation to be saved",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObservationBloodSugarResponse"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Forbidden"
          },
          "404": {
            "content": {},
            "description": "Resource Not Found"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged-or-three-legged": [
              "user/observation.write"
            ]
          }
        ],
        "summary": "Observations",
        "tags": [
          "Observations"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged-or-three-legged OAuth access token.",
          "name": "two-legged-or-three-legged"
        },
        "x-codegen-request-body-name": "observation"
      }
    },
    "/public/preview1/orgs/{orgUuid}/observations/{observationId}": {
      "get": {
        "description": "Get information about a specific observation for a patient.",
        "operationId": "getObservationById",
        "parameters": [
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "PointClickCare's unique identifier for an observation.",
            "in": "path",
            "name": "observationId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObservationResponseById"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Forbidden"
          },
          "404": {
            "content": {},
            "description": "Resource Not Found"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged-or-three-legged": [
              "user/observation.read"
            ]
          }
        ],
        "summary": "Observation By Id",
        "tags": [
          "Observations"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged-or-three-legged OAuth access token.",
          "name": "two-legged-or-three-legged"
        }
      }
    },
    "/public/preview1/orgs/{orgUuid}/oids": {
      "get": {
        "description": "Retrieve a list of all root OIDs for a given organization, along with child OIDs for a given list of facilities within that organization.",
        "operationId": "getOids",
        "parameters": [
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "PointClickCare's unique identifiers for facilities within the organization. Multiple identifiers are specified as comma separated values.",
            "in": "query",
            "name": "facIdList",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OidList"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "two-legged": []
          }
        ],
        "summary": "Oids",
        "tags": [
          "Oids"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged OAuth access token.",
          "name": "two-legged"
        }
      },
      "servers": [
        {
          "url": "https://connect2.pointclickcare.com/api"
        }
      ]
    },
    "/public/preview1/orgs/{orgUuid}/organization-master-patient/{ompId}": {
      "get": {
        "description": "Get information about a specific system generated identifier assigned to a resident in a multi-facility organization allowing you to uniquely identify a resident across facilities within that organization. The response includes organization master patient ID which has resident demographics information that can be reused across facilities within an organization.",
        "operationId": "getOrganizationMasterPatient",
        "parameters": [
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A system generated identifier assigned to a resident in a multi-facility organization to uniquely identify a resident across facilities within an organization.",
            "in": "path",
            "name": "ompId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Omp"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Forbidden"
          },
          "404": {
            "content": {},
            "description": "Resource Not Found"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged-or-three-legged": [
              "user/patient.read"
            ]
          }
        ],
        "summary": "Organization Master Patient",
        "tags": [
          "OrganizationMasterPatient"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged-or-three-legged OAuth access token.",
          "name": "two-legged-or-three-legged"
        }
      }
    },
    "/public/preview1/orgs/{orgUuid}/pain-management": {
      "get": {
        "description": "Retrieve historical pain management assessment questions and responses for a patient completed in the past 30 days.",
        "operationId": "getPainManagement",
        "parameters": [
          {
            "description": "PointClickCare's unique identifier for a patient within the organization.<br/><br/>When a patient is admitted to a facility within an organization, they are assigned a patientId which is unique to their stay within that facility. If the same patient were to get admitted to another facility within the same organization in the future, they would be assigned a new patientId. The patientId however is unique at the organization level. That is, no two patients across different facilities within the organization will have the same patientId.",
            "in": "query",
            "name": "patientId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Represents the start of the date range for which the pain management assessment was recorded will be returned for a patient. The date should be expressed in the following format: YYYY-MM-DD. If startDate and endDate are not specified, only the latest assessment responses will be returned from the last 30 days. startDate can be no more than 30 days before the current date.",
            "in": "query",
            "name": "startDate",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Represents the end of the date range for which the pain management assessment was recorded will be returned for a patient. The date should be expressed in the following format: YYYY-MM-DD. If startDate and endDate are not specified, only the latest assessment responses will be returned from the last 30 days.",
            "in": "query",
            "name": "endDate",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Part of pagination control. Skip (page - 1) * pageSize records from the beginning of the list before returning the rest. Default is 1.",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Part of pagination control. How many records to return in response to this request. Default is 50. Maximum value allowed is 200.",
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PainManagementList"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Forbidden"
          },
          "404": {
            "content": {},
            "description": "Resource Not Found"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged-or-three-legged": [
              "user/pointOfCare.read"
            ]
          }
        ],
        "summary": "Pain Management",
        "tags": [
          "Sandbox APIs"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged-or-three-legged OAuth access token.",
          "name": "two-legged-or-three-legged"
        }
      }
    },
    "/public/preview1/orgs/{orgUuid}/patients": {
      "get": {
        "description": "Retrieve a list of all patients within a certain facility. The response includes a list of patients including their demographics and other details. All date and time fields returned by this API are in UTC (Coordinated Universal Time). Users should convert them to the facility's local time zone. For time zone information, call the <a href=\"#tag/Facilities/operation/getFacility\">Get Facility API</a>.",
        "operationId": "getPatients",
        "parameters": [
          {
            "description": "PointClickCare's unique identifier for a facility within the organization.",
            "in": "query",
            "name": "facId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "PointClickCare's unique identifier for a bed within facility.",
            "in": "query",
            "name": "bedId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "PointClickCare's unique identifier for a unit within a facility.",
            "in": "query",
            "name": "unitId ",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "PointClickCare's unique identifier for a floor within a facility.",
            "in": "query",
            "name": "floorId ",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The unitId to filter patients by",
            "in": "query",
            "name": "unitId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The patient's status within the facility. Possible values are Current, New, and Discharged.",
            "in": "query",
            "name": "patientStatus",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "This is the start date of patient's discharged date range. The date and time should be expressed in UTC in the following format: YYYY-MM-DDTHH:MM:SS.sssZ. This dischargeDateFrom should be used with dischargeDateTo together,  if one of them is null, the date range will be ignored.The discharge date filters will work only  with the patient status of “discharged”, either alone or appended with other statuses (Current, New).",
            "in": "query",
            "name": "dischargeDateFrom",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "This is the end date of patient's discharged date range. The date and time should be expressed in UTC in the following format: YYYY-MM-DDTHH:MM:SS.sssZ. This dischargeDateTo should be used with dischargeDateFrom together,  if one of them is null, the date range will be ignored.",
            "in": "query",
            "name": "dischargeDateTo",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Patient name to look up by. Search is done against the patient first and last name.\n If the string contains a space then the first part of the string will be a search against the first name\n and the last part of the string will be a search against the last name of the patient.",
            "in": "query",
            "name": "patientName",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A list of desired fields for a patient. If provided, the result will be limited to this comma delimited\n list of fields. Possible values are admissionDate, admissionDateTime, bedDesc, bedId, birthDate, citizenship,\n deathDateTime, deceased, dischargeDate, dischargeDateTime, ethnicityDesc, facId, firstName, floorDesc, floorId,\n gender, hasPhoto, isOnLeave, languageCode, languageDesc, lastName, maritalStatus, medicaidNumber,\n medicalRecordNumber, medicareBeneficiaryIdentifier, medicareNumber, middleName, orgUuid, outpatient,\n patientExternalId, patientId, patientStatus, preferredName, prefix, religion, roomDesc, roomId,\n suffix, unitDesc, unitId, waitingList, birthPlace, occupation. All fields are returned if this parameter is not defined.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Part of pagination control. Skip (page - 1) * pageSize records from the beginning of the list before returning the rest. Default is 1.",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Part of pagination control. How many records to return in response to this request. Default is 50. Maximum value allowed is 200.",
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientList"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Forbidden"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged-or-three-legged": [
              "user/patient.read"
            ]
          }
        ],
        "summary": "List of Patients.",
        "tags": [
          "Patients"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged-or-three-legged OAuth access token.",
          "name": "two-legged-or-three-legged"
        }
      }
    },
    "/public/preview1/orgs/{orgUuid}/patients/match": {
      "post": {
        "description": "Searches if a particular patient exists in a facility using a search criteria. The API response will include patient record(s) from the facility that <b>exactly</b> matches the search criteria.",
        "operationId": "postPatientMatch",
        "parameters": [
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatientFilterExactMatchCriteria"
              }
            }
          },
          "description": "retreives an exact match for the patient.",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientMatchResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Forbidden"
          },
          "404": {
            "content": {},
            "description": "Resource Not Found"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged-or-three-legged": [
              "user/patient.read"
            ]
          }
        ],
        "summary": "Patient Match",
        "tags": [
          "Patients"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged-or-three-legged OAuth access token.",
          "name": "two-legged-or-three-legged"
        },
        "x-codegen-request-body-name": "match"
      }
    },
    "/public/preview1/orgs/{orgUuid}/patients/{patientId}": {
      "get": {
        "description": "The GET Patient API provides information about a specific patient, including their demographics and other details about the patient. All date and time fields returned by this API are in UTC (Coordinated Universal Time). Users should convert them to the facility’s local time zone. For time zone information, call the <a href=\"#tag/Facilities/operation/getFacility\">Get Facility API</a>.",
        "operationId": "getPatient",
        "parameters": [
          {
            "description": "A comma separated value, which determines whether to include specified optional fields. Optional field parameters available: patientContacts, additionalLocation, userDefinedFields, patientLegalMailingAddress.",
            "in": "query",
            "name": "includeOptionalFields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A list of fields defined by the customer. This parameter has to be passed in conjunction with includeOptionalFields=userDefinedFields. If this parameter is used, the userDefinedFields result will be limited to the comma delimited list of fields specified in the API query.<br/><br/> Note: If the customer has defined a field of 'Admission Type', the value will be returned by default if includeOptionalFields=userDefinedFields, with no comma delimited list of fields. However, if a comma delimited list of fields is specified and 'Admission Type' is still required, 'Admission Type' will need to be included in the list of fields.",
            "in": "query",
            "name": "userDefinedFields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "PointClickCare's unique identifier for a patient within the organization.</br></br>When a patient is admitted to a facility within an organization, they are assigned a patientId which is unique to their stay within that facility. If the same patient were to get admitted to another facility within the same organization in the future, they would be assigned a new patientId. The patientId however is unique at the organization level. That is, no two patients across different facilities within the organization will have the same patientId.",
            "in": "path",
            "name": "patientId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientDetails"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Forbidden"
          },
          "404": {
            "content": {},
            "description": "Resource Not Found"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged-or-three-legged": [
              "user/patient.read"
            ]
          }
        ],
        "summary": "Patient",
        "tags": [
          "Patients"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged-or-three-legged OAuth access token.",
          "name": "two-legged-or-three-legged"
        }
      },
      "patch": {
        "description": "<p>Update a patient's demographics information.</p><p>This API can only be called by applications after they have created a patient record in PointClickCare using the POST <a href=\"#operation/postPendingPatients\">/pending-patients</a> API and when a patientId has been assigned to the record. Applications will not be able to make changes to patient's demographics if they have been added or updated in PointClickCare.</p><p>Before you call this API, you must call the GET <a href=\"#operation/getPickList\">/picklist</a> API to determine race, religion, language and marital status in use by the Facility.</p>",
        "operationId": "patchPatient",
        "parameters": [
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "PointClickCare's unique identifier for the patient.",
            "in": "path",
            "name": "patientId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatientDemographic"
              }
            }
          },
          "description": "Changes to patient demographic profile to be saved",
          "required": false
        },
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "two-legged-or-three-legged": [
              "user/patient.write"
            ]
          }
        ],
        "summary": "Patch Patient",
        "tags": [
          "Patients"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged-or-three-legged OAuth access token.",
          "name": "two-legged-or-three-legged"
        },
        "x-codegen-request-body-name": "PatientDemographic"
      }
    },
    "/public/preview1/orgs/{orgUuid}/patients/{patientId}/documents": {
      "post": {
        "description": "Push miscellaneous documentation for a patient to PointClickCare.<br><br><b>NOTE:</b> Before you call this API, you must call the GET/Facility endpoint to determine if document storage is enabled for the Facility, and to obtain the document categories in use by the Facility.",
        "operationId": "postDocument",
        "parameters": [
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "PointClickCare's unique identifier for a patient within the organization.",
            "in": "path",
            "name": "patientId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MiscDocument"
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "Users are expected to upload a(n) document of max size 10MB file with any of the following formats: \n\n| Content-Type | Extension |\n|--------------|-----------|\n| text/csv, application/excel | CSV, XLS, XLSX |\n| application/mspowerpoint | PPT |\n| application/msword | DOC/DOCX |\n| application/pdf | PDF |\n| image/bmp | BMP |\n| image/gif | GIF |\n| text/html | HTM, HTML |\n| image/jpeg, image/jpg. image/pjpeg | JPEG, JPG, PJPEG |\n| image/png | PNG |\n| text/plain | RTF, TXT |\n| application/msword | WPS |\n| text/xml | XML |\n| application/zip | ZIP |\n"
                  }
                }
              },
              "encoding": {
                "file": {
                  "contentType": "text/csv, application/excel, application/mspowerpoint, application/msword, application/pdf, image/bmp, image/gif, text/html, image/jpeg, image/jpg, image/pjpeg, image/png, text/plain, application/msword, text/xml, application/zip"
                }
              }
            }
          },
          "description": "Part 1: JSON, Part Name: metadata <br>Part 2: MultipartFile, Part Name: file</br>",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MiscDocumentResponse"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Forbidden"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "two-legged-or-three-legged": [
              "At least one of the following: user/adminDocumentCategory.write user/clinicalDocumentCategory.write"
            ]
          }
        ],
        "summary": "Document",
        "tags": [
          "Document"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged-or-three-legged OAuth access token.",
          "name": "two-legged-or-three-legged"
        },
        "x-codegen-request-body-name": "metadata"
      }
    },
    "/public/preview1/orgs/{orgUuid}/patients/{patientId}/photo": {
      "get": {
        "description": "Retrieve a photo for a specific patient.",
        "operationId": "getPatientPhoto",
        "parameters": [
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "PointClickCare's unique identifier for a patient within the organization.</br></br>When a patient is admitted to a facility within an organization, they are assigned a patientId which is unique to their stay within that facility. If the same patient were to get admitted to another facility within the same organization in the future, they would be assigned a new patientId. The patientId however is unique at the organization level. That is, no two patients across different facilities within the organization will have the same patientId.",
            "in": "path",
            "name": "patientId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "image/jpg/gif/jpeg": {
                "schema": {
                  "$ref": "#/components/schemas/PatientPhoto"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Forbidden"
          },
          "404": {
            "content": {},
            "description": "Resource Not Found"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged-or-three-legged": [
              "user/patientPhoto.read"
            ]
          }
        ],
        "summary": "Patient Photo",
        "tags": [
          "Patients"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged-or-three-legged OAuth access token.",
          "name": "two-legged-or-three-legged"
        }
      }
    },
    "/public/preview1/orgs/{orgUuid}/pending-contacts": {
      "post": {
        "description": "Create a pending contact record in PointClickCare. The API response for this endpoint always includes the pending contact identifier. For requests that result in potential partial matches, or exact matches, facilities will need to take manual action on the pending contact record to create the actual contact record. For requests that do not result in partial matches or duplicates, an actual contact record will be created in PointClickCare. The response in this case will still include the pending contact identifier. To obtain the actual contactId for the contact and to query on the request whether the facility has created a contact record, use the GET Pending Contact API.",
        "operationId": "postPendingContact",
        "parameters": [
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PendingContact"
              }
            }
          },
          "description": "New pending contact to be created",
          "required": false
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PendingContactResponse"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Forbidden"
          },
          "404": {
            "content": {},
            "description": "Resource Not Found"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged-or-three-legged": [
              "user/patientContact.write"
            ]
          }
        ],
        "summary": "Pending Contact",
        "tags": [
          "Patient Contacts"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged-or-three-legged OAuth access token.",
          "name": "two-legged-or-three-legged"
        },
        "x-codegen-request-body-name": "PendingContact"
      }
    },
    "/public/preview1/orgs/{orgUuid}/pending-contacts/{pendingContactId}": {
      "get": {
        "description": "Retrieve information about a pending contact record in PointClickCare. After creating a pending contact record using the POST /pending-contacts request, use this API to retrieve the contactId for the patient's contact after the pending contact record has been approved by the facility.",
        "operationId": "getPendingContact",
        "parameters": [
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "PointClickCare's unique identifier for a pending contact within the organization.",
            "in": "path",
            "name": "pendingContactId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PendingContactStatus"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "404": {
            "content": {},
            "description": "Resource Not Found"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged-or-three-legged": [
              "user/patientContact.read"
            ]
          }
        ],
        "summary": "Pending Contact",
        "tags": [
          "Patient Contacts"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged-or-three-legged OAuth access token.",
          "name": "two-legged-or-three-legged"
        }
      }
    },
    "/public/preview1/orgs/{orgUuid}/pending-patients": {
      "post": {
        "description": "Create a pending patient record in PointClickCare. All requests to create a pending patient record should be preceded with a Patient Match Request.<br>The API response for this endpoint always includes the pending patient identifier. For all requests facilities will need to take manual action on the pending patient record to create the actual patient record. To obtain the actual patientId for the patient and to query on the request whether the facility has created a patient record, use the GET Pending Patient API or wait for the patient.pendingPatientAccepted webhook event.",
        "operationId": "postPendingPatients",
        "parameters": [
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PendingPatient"
              }
            }
          },
          "description": "New pending patient to be created",
          "required": false
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PendingPatientResponse"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Forbidden"
          },
          "404": {
            "content": {},
            "description": "Resource Not Found"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged-or-three-legged": [
              "user/patient.write"
            ]
          }
        ],
        "summary": "Pending Patients",
        "tags": [
          "Patients"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged-or-three-legged OAuth access token.",
          "name": "two-legged-or-three-legged"
        },
        "x-codegen-request-body-name": "PendingPatients"
      }
    },
    "/public/preview1/orgs/{orgUuid}/pending-patients/{pendingPatientId}": {
      "get": {
        "description": "Retrieve information about a pending patient record in PointClickCare. After creating a pending patient record using the POST /pending-patients request, use this API to retrieve the patientId for the patient after the pending patient record has been approved by the facility.",
        "operationId": "getPendingPatients",
        "parameters": [
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "PointClickCare's unique identifier for a pending patient within the organization.",
            "in": "path",
            "name": "pendingPatientId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PendingPatientStatus"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "404": {
            "content": {},
            "description": "Resource Not Found"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged-or-three-legged": [
              "user/patient.read"
            ]
          }
        ],
        "summary": "Pending Patients",
        "tags": [
          "Patients"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged-or-three-legged OAuth access token.",
          "name": "two-legged-or-three-legged"
        }
      }
    },
    "/public/preview1/orgs/{orgUuid}/pick-lists": {
      "get": {
        "description": "Retrieves a list of pick lists from the facility within an organization.",
        "operationId": "getPickLists",
        "parameters": [
          {
            "description": "PointClickCare's unique identifier for a facility within the organization.",
            "in": "query",
            "name": "facId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Part of pagination control. Skip (page - 1) * pageSize records from the beginning of the list before returning the rest. Default is 1.",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Part of pagination control. How many records to return in response to this request. Default is 50. Maximum value allowed is 200.",
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonPickListTypes"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Forbidden"
          },
          "404": {
            "content": {},
            "description": "Resource Not Found"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged-or-three-legged": []
          }
        ],
        "summary": "Pick Lists",
        "tags": [
          "Pick Lists"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged-or-three-legged OAuth access token.",
          "name": "two-legged-or-three-legged"
        }
      }
    },
    "/public/preview1/orgs/{orgUuid}/daily-balance": {
      "get": {
        "tags": [
          "Payments"
        ],
        "summary": "DailyBalance",
        "description": "Retrieves the daily balances for all patients in a Facility. The Daily balance is calculated at 12am in the Facility's local time.",
        "operationId": "getDailyBalance",
        "parameters": [
          {
            "name": "orgUuid",
            "in": "path",
            "description": "PointClickCare's unique identifier for the organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "facId",
            "in": "query",
            "description": "PointClickCare's unique identifier for a facility within the organization.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "patientIds",
            "in": "query",
            "description": "List of PointClickCare's unique identifier for a patient within the organization. Multiple comma separated values are accepted.\n\nWhen a patient is admitted to a facility within an organization, they are assigned a patientId which is unique to their stay within that facility. If the same patient were to get admitted to another facility within the same organization in the future, they would be assigned a new patientId. The patientId however is unique at the organization level. That is, no two patients across different facilities within the organization will have the same patientId.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Part of pagination control. Skip (page - 1) * pageSize records from the beginning of the list before returning the rest. Default is 1.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Part of pagination control. How many records to return in response to this request. Default is 200.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDailyBalanceResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource Not Found"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged": []
          }
        ],
        "x-authorization": {
          "description": "This API requires a two-legged OAuth access token.",
          "name": "two-legged"
        }
      },
      "servers": [
        {
          "url": "https://connect2.pointclickcare.com/api"
        }
      ]
    },
    "/public/preview1/orgs/{orgUuid}/pick-lists/{pickListId}": {
      "get": {
        "description": "Retrieve information about a specific pick list from the facility within an organization.",
        "operationId": "getPickList",
        "parameters": [
          {
            "description": "PointClickCare's unique identifier for a facility within the organization.",
            "in": "query",
            "name": "facId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Part of pagination control. Skip (page - 1) * pageSize records from the beginning of the list before returning the rest. Default is 1.",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Part of pagination control. How many records to return in response to this request. Default is 50. Maximum value allowed is 200.",
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A unique identifier for a given pick list.",
            "in": "path",
            "name": "pickListId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonPickList"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Forbidden"
          },
          "404": {
            "content": {},
            "description": "Resource Not Found"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged-or-three-legged": []
          }
        ],
        "summary": "Pick List",
        "tags": [
          "Pick Lists"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged-or-three-legged OAuth access token.",
          "name": "two-legged-or-three-legged"
        }
      }
    },
    "/public/preview1/orgs/{orgUuid}/practitioners": {
      "get": {
        "description": "Retrieve a list of medical professionals assigned to a specific patient.",
        "operationId": "getPractitioners",
        "parameters": [
          {
            "description": "PointClickCare's unique identifier for a patient within the organization.</br></br>When a patient is admitted to a facility within an organization, they are assigned a patientId which is unique to their stay within that facility. If the same patient were to get admitted to another facility within the same organization in the future, they would be assigned a new patientId. The patientId however is unique at the organization level. That is, no two patients across different facilities within the organization will have the same patientId.",
            "in": "query",
            "name": "patientId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Part of pagination control. Skip (page - 1) * pageSize records from the beginning of the list before returning the rest. Default is 1.",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Part of pagination control. How many records to return in response to this request. Default is 50. Maximum value allowed is 200.",
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PractionerList"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Forbidden"
          },
          "404": {
            "content": {},
            "description": "Resource Not Found"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged-or-three-legged": [
              "user/practitioner.read"
            ]
          }
        ],
        "summary": "Practitioners",
        "tags": [
          "Practitioners"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged-or-three-legged OAuth access token.",
          "name": "two-legged-or-three-legged"
        }
      }
    },
    "/public/preview1/orgs/{orgUuid}/privacy-consents": {
      "get": {
        "description": "Retrieve a list of privacy consents for a patient.<br><br>Currently, the API response only returns a patient's consent to allow staff involved in their care to see and get access to all their medical records available through the Health Information Exchange.",
        "operationId": "getPrivacyConsents",
        "parameters": [
          {
            "description": "PointClickCare's unique identifier for a patient within the organization.</br></br>When a patient is admitted to a facility within an organization, they are assigned a patientId which is unique to their stay within that facility. If the same patient were to get admitted to another facility within the same organization in the future, they would be assigned a new patientId. The patientId however is unique at the organization level. That is, no two patients across different facilities within the organization will have the same patientId.",
            "in": "query",
            "name": "patientId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrivacyConsentList"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Forbidden"
          },
          "404": {
            "content": {},
            "description": "Resource Not Found"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged-or-three-legged": [
              "user/privacyConsent.read"
            ]
          }
        ],
        "summary": "Privacy Consents",
        "tags": [
          "Consents"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged-or-three-legged OAuth access token.",
          "name": "two-legged-or-three-legged"
        }
      }
    },
    "/public/preview1/orgs/{orgUuid}/private-cash-import": {
      "post": {
        "description": "Push Private Cash Import files to PointClickCare. Both Facility level and EMC level files can be posted using this API. Once the file has been pushed, the GET PrivateCashStatus API can be called to determine whether the file has been processed and a correspondent Cash Batch is visible to Customers.<br><br><b>NOTE:</b> Customer organizations work with PointClickCare to define Private Import Configurations. For a successful upload, you must ask Facility/Organization staff to provide information for the configuration designated for this API. This information includes the file format specification associated with the configuration as well as the file name format, prefix and extension. The full filename and extension should not exceed 32 characters. <br><br>A 201 response will be sent upon receiving the file, however, the actual file processing time may vary.",
        "operationId": "postPrivateCashImport",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "string",
                    "format": "binary",
                    "description": "Users are expected to upload <font color=\"#0d904f\">private-cash-import</font> file of max size <font color=\"#0d904f\">10MB</font> with pre-configured file format, according to the Private Import specifications provided.<br><br>File Name<br><br><ul><li>String - 32 characters max</li><li>Format: prefix****.extension. The prefix can be a max of 20 characters and the extension can be a max of 3 characters</li></ul>"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "orgUuid",
            "in": "path",
            "description": "PointClickCare's unique identifier for the organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "The type of media being sent through the request. Expected content-type header is \"multipart/form-data\".",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostPrivateCashImportResponse"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Forbidden"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Service Unavailable"
          }
        },
        "security": [
          {
            "two-legged-or-three-legged": [
              "user/privateCashImport.write"
            ]
          }
        ],
        "summary": "Private Cash Import",
        "tags": [
          "Payments"
        ]
      }
    },
    "/public/preview1/orgs/{orgUuid}/private-cash-import/{processId}/status": {
      "get": {
        "description": "Returns processing status of the Private Cash import file pushed to PointClickCare.",
        "operationId": "getPrivateCashImportStatus",
        "parameters": [
          {
            "name": "orgUuid",
            "in": "path",
            "description": "PointClickCare's unique identifier for the organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "processId",
            "in": "path",
            "description": "Reference ID to get status of the file under processing.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPrivateCashImportStatusResponse"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Forbidden"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Service Unavailable"
          }
        },
        "security": [
          {
            "two-legged-or-three-legged": [
              "user/privateCashImport.read"
            ]
          }
        ],
        "summary": "Private Cash Import Status",
        "tags": [
          "Payments"
        ],
        "x-authorization": {
          "description": "This API requires a 2-legged or 3-legged OAuth access token.",
          "name": "two-legged-or-three-legged"
        }
      }
    },
    "/public/preview1/orgs/{orgUuid}/progress-note-types": {
      "get": {
        "description": "Return custom defined types of ProgressNotes accepted by the facility. The API should be called before a new Progress Note is created.",
        "operationId": "getProgressNoteTypes",
        "parameters": [
          {
            "description": "PointClickCare's unique identifier for a facility within the organization.",
            "in": "query",
            "name": "facId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Part of pagination control. Skip (page - 1) * pageSize records from the beginning of the list before returning the rest. Default is 1.",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Part of pagination control. How many records to return in response to this request. Default is 50. Maximum value allowed is 200.",
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgressNoteTypes"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Forbidden"
          },
          "404": {
            "content": {},
            "description": "Not Found"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged-or-three-legged": []
          }
        ],
        "summary": "Progress NoteTypes",
        "tags": [
          "Progress Notes"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged-or-three-legged OAuth access token.",
          "name": "two-legged-or-three-legged"
        }
      }
    },
    "/public/preview1/orgs/{orgUuid}/progress-notes": {
      "get": {
        "description": "Retrieves list of all progress notes and their associated Id, for the last 30 days for a patient.",
        "operationId": "getProgressNotes",
        "parameters": [
          {
            "description": "PointClickCare's unique identifier for a patient within the organization.\r\nWhen a patient is admitted to a facility within an organization, they are assigned a patientId which is unique to their stay within that facility. If the same patient were to get admitted to another facility within the same organization in the future, they would be assigned a new patientId. The patientId however is unique at the organization level. That is, no two patients across different facilities within the organization will have the same patientId.",
            "in": "query",
            "name": "patientId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Represents the start of the date range for which the progress notes were recorded will be returned for a patient. The date should be expressed in the following format: YYYY-MM-DD. If startDate and endDate are not specified, the last 30 days of progress notes will be returned as default. If only startDate is specified, up to the next 30 days of progress notes after startDate will be returned. Maximum range is 30 days, including endDate (e.g. 2020-01-01 to 2020-01-30 is ok, but to 2020-01-31 is not).",
            "in": "query",
            "name": "startDate",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Represents the end of the date range for which the progress notes were recorded will be returned for a patient. The date should be expressed in the following format: YYYY-MM-DD. If startDate and endDate are not specified, the last 30 days of progress notes will be returned as default. If only endDate is specified, 30 days of progress notes before endDate will be returned.",
            "in": "query",
            "name": "endDate",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Part of pagination control. Skip (page - 1) * pageSize records from the beginning of the list before returning the rest. Default is 1.",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Part of pagination control. How many records to return in response to this request. Default is 50. Maximum value allowed is 200.",
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgressNoteList"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Forbidden"
          },
          "404": {
            "content": {},
            "description": "Resource Not Found"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged-or-three-legged": [
              "user/patientProgressNote.read"
            ]
          }
        ],
        "summary": "Progress Notes",
        "tags": [
          "Progress Notes"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged-or-three-legged OAuth access token.",
          "name": "two-legged-or-three-legged"
        }
      },
      "post": {
        "description": "Create a new progress note for a given patient in PointClickCare. The progress note can either be an Encounter note or can follow templates defined by the PointClickCare facility (available through the <a href=\"#operation/getProgressNoteTypes\">GET ProgressNoteTypes</a> API)<br/><br/>When using the POST Add new Encounter Note or POST Add new Progress Note APIs with three-legged authentication, it is mandatory to use the <a href=\"#operation/patchStrikeOutProgressNotesAndEncounterNotes\">PATCH Strike Out Progress Notes And Encounter Notes</a> API for removing notes submitted in error.",
        "operationId": "postProgressNote",
        "parameters": [
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProgressNote"
              }
            }
          },
          "description": "Add new Progress Note",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgressNoteResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "406": {
            "content": {},
            "description": "Not Acceptable (If the section name in the sections list do not exist or any parameters contain forbidden characters)"
          },
          "409": {
            "content": {},
            "description": "Conflict"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged-or-three-legged": [
              "user/progressNote.write"
            ]
          }
        ],
        "summary": "Add new Progress Note",
        "tags": [
          "Progress Notes"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged-or-three-legged OAuth access token.",
          "name": "two-legged-or-three-legged"
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/public/preview1/orgs/{orgUuid}/progress-encounter-notes/{progressNoteId}": {
      "patch": {
        "description": "Strikes out a Progress Note or an Encounter Note created through POST Progress Note API or POST Encounter Note API. Only the user who created the note can strike out the note.",
        "operationId": "patchStrikeOutProgressNotesAndEncounterNotes",
        "parameters": [
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Unique identification number associated with the progress note.",
            "in": "path",
            "name": "progressNoteId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchStrikeOutProgressNotesAndEncounterNotes"
              }
            }
          },
          "required": false
        },
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Cannot Strikeout Note. Progress Note in invalid status."
          },
          "404": {
            "content": {},
            "description": "There is no Progress Note with provided Progress Note ID (progressNoteId)"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "three-legged": [
              "user/progressNote.write"
            ]
          }
        ],
        "summary": "Strike Out Progress Notes And Encounter Notes",
        "tags": [
          "Progress Notes"
        ],
        "x-authorization": {
          "description": "This API requires a three-legged OAuth access token.",
          "name": "three-legged"
        },
        "servers": [
          {
            "url": "https://connect.pointclickcare.com/api"
          }
        ]
      }
    },
    "/public/preview1/orgs/{orgUuid}/progress-notes/{progressNoteId}": {
      "get": {
        "description": "Retrieve details for a specific progress note for a patient.<br/><br/><strong>NOTE:</strong> Before you call this API you must call the GET <a href=\"#operation/getProgressNotes\">/progress-notes</a> endpoint to obtain the <em>progressNoteId</em>.",
        "operationId": "getProgressNoteDetails",
        "parameters": [
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Unique identification number associated with the progress note.",
            "in": "path",
            "name": "progressNoteId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgressNoteDetails"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Forbidden"
          },
          "404": {
            "content": {},
            "description": "Resource Not Found"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged-or-three-legged": [
              "user/patientProgressNote.read"
            ]
          }
        ],
        "summary": "Progress Note Details",
        "tags": [
          "Progress Notes"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged-or-three-legged OAuth access token.",
          "name": "two-legged-or-three-legged"
        }
      }
    },
    "/public/preview1/orgs/{orgUuid}/progress-notes/{progressNoteId}/addendums": {
      "post": {
        "description": "Post new Addendum. The addendum will be added to the 'Addendum' section of a Practitioner Note.</br>\r\n\r\nIf the call is being made on behalf of a PCC User, they must have WRITE access to Progress Notes and be able to access the Patient the Progress Note belongs to.",
        "operationId": "postAddendum",
        "parameters": [
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Progress Note ID where Addendum should be added.</br>\r\n Please note: POST Addendum will only work when a progressNoteId is created via POST Progress Notes API where isEncounterNote = true or via POST Encounter Notes API.",
            "in": "path",
            "name": "progressNoteId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProgressNoteAddendum"
              }
            }
          },
          "description": "Post Addendum",
          "required": false
        },
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "404": {
            "content": {},
            "description": "There is no Progress Note with provided Progress Note ID (progressNoteId)"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged-or-three-legged": [
              "user/progressNoteAddendum.write"
            ]
          }
        ],
        "summary": "Post Addendum",
        "tags": [
          "Progress Notes"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged-or-three-legged OAuth access token.",
          "name": "two-legged-or-three-legged"
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/public/preview1/orgs/{orgUuid}/simulation": {
      "post": {
        "description": "In your sandbox environment, you can simulate webhook events so that mock notifications are generated for your application. Simulating the events helps validate that your webhook listener can successfully receive event data without any connectivity issues.<br/>Use this API to simulate webhook notifications with mock event data from PointClickCare to your webhook listener.<br/></BR>Note: This API is available in Sandbox environment ONLY.",
        "operationId": "postSimulate",
        "parameters": [
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Simulation"
              }
            }
          },
          "description": "App to be activated",
          "required": false
        },
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "404": {
            "content": {},
            "description": "Resource Not Found"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged": []
          }
        ],
        "summary": "Simulate",
        "tags": [
          "Sandbox APIs"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged OAuth access token.",
          "name": "two-legged"
        },
        "x-codegen-request-body-name": "Simulation"
      },
      "servers": [
        {
          "url": "https://connect2.pointclickcare.com/api"
        }
      ]
    },
    "/public/preview1/orgs/{orgUuid}/therapy-minutes": {
      "post": {
        "description": "Push therapy minutes for a given patient to PointClickCare. These therapy minutes represent the recorded duration (in minutes) of each therapy session a patient undergoes.",
        "operationId": "postTherapyMinutes",
        "parameters": [
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TherapyMinutes"
              }
            }
          },
          "description": "Therapy minutes to be pushed",
          "required": false
        },
        "responses": {
          "204": {
            "content": {},
            "description": "No Content"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "404": {
            "content": {},
            "description": "Resource Not Found"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged-or-three-legged": []
          }
        ],
        "summary": "Therapy Minutes",
        "tags": [
          "Sandbox APIs"
        ],
        "x-authorization": {
          "description": "This API requires a 2-legged or 3-legged OAuth access token.",
          "name": "two-legged-or-three-legged"
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/public/preview1/orgs/{orgUuid}/supplement-orders": {
      "get": {
        "description": "Returns the list of Active and On Hold Supplement Orders for a specified patient. The list is sorted by order date in desending order. Struck-out, discontinue or complete orders are not included in the response.",
        "operationId": "getSupplementOrders",
        "parameters": [
          {
            "description": "PointClickCare's unique identifier for a patient within the organization.</br></br>When a patient is admitted to a facility within an organization, they are assigned a patientId which is unique to their stay within that facility. If the same patient were to get admitted to another facility within the same organization in the future, they would be assigned a new patientId. The patientId however is unique at the organization level. That is, no two patients across different facilities within the organization will have the same patientId.",
            "in": "query",
            "name": "patientId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Represents the order status of the nutrition order. If no specific status is passed both 'active' and 'on hold' nutrition orders will be returned.",
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Part of pagination control. Skip (page - 1) * pageSize records from the beginning of the list before returning the rest. Default is 1.",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Part of pagination control. How many records to return in response to this request. Default is 50. Maximum value allowed is 200.",
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SupplementOrderList"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "403": {
            "content": {},
            "description": "Forbidden"
          },
          "404": {
            "content": {},
            "description": "Resource Not Found"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged-or-three-legged": [
              "user/nutritionOrder.read"
            ]
          }
        ],
        "summary": "Supplement Orders",
        "tags": [
          "Nutrition Orders"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged-or-three-legged OAuth access token.",
          "name": "two-legged-or-three-legged"
        }
      }
    },
    "/public/preview1/orgs/{orgUuid}/userinfo": {
      "get": {
        "description": "Get information about the PointClickCare user that is logged in.",
        "operationId": "getUserInfo",
        "parameters": [
          {
            "description": "PointClickCare's unique identifier for the organization.",
            "in": "path",
            "name": "orgUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "three-legged": []
          }
        ],
        "summary": "User Info",
        "tags": [
          "Users"
        ],
        "x-authorization": {
          "description": "This API requires a three-legged OAuth access token.",
          "name": "three-legged"
        }
      },
      "servers": [
        {
          "url": "https://connect.pointclickcare.com/api"
        }
      ]
    },
    "/public/preview1/webhook-subscriptions": {
      "get": {
        "description": "Retrieve details for webhook subscription requests for your application.",
        "operationId": "getWebhookSubscriptions",
        "parameters": [
          {
            "description": "The current status of the webhook subscription. Possible values are 'PENDING', 'APPROVED', 'CANCELLED', 'REJECTED' and 'RETIRED'. If no value is specified for status, webhook subscription that is currently APPROVED is returned.",
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The application's name for which you wish to retrieve the webhook subscription details.",
            "in": "query",
            "name": "applicationName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "If set, allows to filter webhook subscription requests created on or after the specified date. Expected format is YYYY-MM-DD.",
            "in": "query",
            "name": "subscriptionDate",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Part of pagination control. Skip (page - 1) * pageSize records from the beginning of the list before returning the rest. Default is 1.",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Part of pagination control. How many records to return in response to this request. Default is 50. Maximum value allowed is 200.",
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicGetWebhookSubscriptionList"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "404": {
            "content": {},
            "description": "Resource Not Found"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged": []
          }
        ],
        "summary": "Webhook Subscriptions",
        "tags": [
          "Webhooks"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged OAuth access token.",
          "name": "two-legged"
        }
      },
      "post": {
        "description": "Subscribe or modify the subscription for your app to PointClickCare webhook events.<br><br><b>Please note:</b> Your Webhook Subscription request will need to be approved by your Partnership Manager in order for the changes to be made effective. Upon submitting your POST Webhook Subscription request, please contact your partnership manager and provide them with the \"webhookSubscriptionId\".",
        "operationId": "postWebhookSubscriptions",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostWebhookSubscription"
              }
            }
          },
          "description": "Subscribe or modify the subscription for your app to PointClickCare webhook events",
          "required": false
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostWebhookSubscriptionResponse"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {},
            "description": "Bad Request"
          },
          "401": {
            "content": {},
            "description": "Unauthorized"
          },
          "404": {
            "content": {},
            "description": "Resource Not Found"
          },
          "429": {
            "content": {},
            "description": "Too Many Requests"
          },
          "500": {
            "content": {},
            "description": "Internal Server Error"
          },
          "503": {
            "content": {},
            "description": "Too Many Concurrent Requests"
          }
        },
        "security": [
          {
            "two-legged": []
          }
        ],
        "summary": "Webhook Subscriptions",
        "tags": [
          "Webhooks"
        ],
        "x-authorization": {
          "description": "This API requires a two-legged OAuth access token.",
          "name": "two-legged"
        },
        "x-codegen-request-body-name": "Subscription"
      },
      "servers": [
        {
          "url": "https://connect2.pointclickcare.com/api"
        }
      ]
    }
  },
  "components": {
    "schemas": {
      "ADTRecordDetails": {
        "description": "patient's ADT records.",
        "example": {
          "accessingEntityId": "1A404804-F55E-4D1B-88D0-7706D757574A",
          "actionCode": "DD",
          "actionType": "Discharge Date",
          "additionalBedDesc": "1A",
          "additionalBedId": 1392,
          "additionalFloorDesc": "13rd",
          "additionalFloorId": 110,
          "additionalRoomDesc": "1311",
          "additionalRoomId": 1351,
          "additionalUnitDesc": "1 Blue 3",
          "additionalUnitId": 1567,
          "adtRecordId": 114441,
          "bedDesc": "A",
          "bedId": 392,
          "destination": "Hospice",
          "destinationType": "01",
          "dischargeStatus": "Discharge to Private Residence",
          "dischargeStatusCode": "01",
          "effectiveDateTime": "2017-01-03T08:00:19.000Z",
          "enteredBy": "John Doe",
          "enteredByPositionId": 957385,
          "enteredDate": "2017-01-02T08:00:19.000Z",
          "floorDesc": "3rd",
          "floorId": 10,
          "isCancelledRecord": false,
          "modifiedDateTime": "2017-01-11T08:00:19.000Z",
          "outpatient": false,
          "patientId": 534547,
          "payerCode": "A5",
          "payerName": "Private",
          "qhsWaiver": false,
          "roomDesc": "311",
          "roomId": 351,
          "skilledCare": true,
          "skilledEffectiveFromDate": "2017-10-31",
          "skilledEffectiveToDate": "2018-11-01",
          "standardActionType": "Discharge",
          "stopBillingDate": "2019-12-31T00:00:00.000Z",
          "unitDesc": "Blue 3",
          "unitId": 567
        },
        "properties": {
          "accessingEntityId": {
            "description": "PointClickCare's unique identifier for an external organization with a signed data sharing agreement.<br><br>Note: Currently limited to hospitals participating in data exchange with PointClickCare.",
            "type": "string"
          },
          "actionCode": {
            "description": "Represents the short code associated to the action type for the ADT record. PointClickCare allows facilities to configure a value for the action code up to 5 characters long.",
            "type": "string"
          },
          "actionType": {
            "description": "Represents the action type associated to the ADT record. The action types are configurable at a facility level in PointClickCare. This means that the value of this field may vary from facility to facility. Each facility defined action type is mapped to a standard action type however.",
            "type": "string"
          },
          "additionalBedDesc": {
            "description": "The patient's additional bed details.",
            "type": "string"
          },
          "additionalBedId": {
            "description": "PointClickCare's unique identifier for a bed within a facility.",
            "format": "int32",
            "type": "integer"
          },
          "additionalFloorDesc": {
            "description": "The patient's additional floor details.",
            "type": "string"
          },
          "additionalFloorId": {
            "description": "PointClickCare's unique identifier for a floor within a facility.",
            "format": "int32",
            "type": "integer"
          },
          "additionalRoomDesc": {
            "description": "The patient's additional room details.",
            "type": "string"
          },
          "additionalRoomId": {
            "description": "PointClickCare's unique identifier for a room within a facility.",
            "format": "int32",
            "type": "integer"
          },
          "additionalUnitDesc": {
            "description": "The patient's additional unit details.",
            "type": "string"
          },
          "additionalUnitId": {
            "description": "PointClickCare's unique identifier for a unit within a facility.",
            "format": "int32",
            "type": "integer"
          },
          "admissionSource": {
            "description": "Represents the source of admission (physician referral, transfer), if available. The values that a user can select for source of admission are configurable at a facility level in PointClickCare.",
            "type": "string"
          },
          "admissionSourceCode": {
            "description": "Represents a short description code for the source of admission. When configuring the values for the admission source, facilities have the option to include a short code/short description for the admission source as well.",
            "type": "string"
          },
          "admissionType": {
            "description": "Represents the type of admission (for e.g. Emergency, Elective, Urgent) associated with the admission action, if available. The values that a user can select for admission type are configurable at a facility level in PointClickCare.",
            "type": "string"
          },
          "admissionTypeCode": {
            "description": "Represents a short description code for the type of admission. When configuring the values for the admission type, facilities have the option to include a short code/short description for the admission type as well.",
            "type": "string"
          },
          "adtRecordId": {
            "description": "PointClickCare's unique identifier for the patient's ADT record within the organization.",
            "format": "int32",
            "type": "integer"
          },
          "bedDesc": {
            "description": "The patient's current bed details.",
            "type": "string"
          },
          "bedId": {
            "description": "PointClickCare's unique identifier for a bed within a facility.",
            "format": "int32",
            "type": "integer"
          },
          "destination": {
            "description": "Represents the name of the care setting or facility where the patient is going to, if available. This field is only returned for ADT records where the Standard Action Type is one of 'Internal Transfer', 'Discharge' or 'Leave'.",
            "type": "string"
          },
          "destinationType": {
            "description": "Represents the type of the care setting or facility where the patient is going to, if available. For e.g. Funeral home, Home. This field is only returned for ADT records where the Standard Action Type is one of 'Death', 'Discharge' or 'Leave'.",
            "type": "string"
          },
          "dischargeStatus": {
            "description": "Represents the status of discharge, if available. For e.g. Discharged/Transferred to another hospital or Discharged/Transferred to a Long Term Care hospital. The values that a user can select for discharge status are configurable at a facility level in PointClickCare.",
            "type": "string"
          },
          "dischargeStatusCode": {
            "description": "Represents the code associated with the status of discharge, if available.",
            "type": "string"
          },
          "effectiveDateTime": {
            "description": "Represents the date when the ADT record became effective. PointClickCare allows users to modify historical ADT records for a patient. As a result, users are able to modify the effective time for the ADT record. However, effective date for an existing ADT record cannot be modified. Users can also delete an existing ADT record. The date and time should be expressed in UTC in the following format: YYYY-MM-DDTHH:MM:SS.sssZ.",
            "format": "date-time",
            "type": "string"
          },
          "enteredBy": {
            "description": "The user who entered the ADT. ",
            "type": "string"
          },
          "enteredByPositionId": {
            "description": "PointClickCare's unique identifier position of the user who entered the ADT.",
            "format": "int32",
            "type": "integer"
          },
          "enteredDate": {
            "description": "The date and time the ADT was created. It is expressed in UTC in the following format: YYYY-MM-DDTHH:MM:SS.sssZ.",
            "format": "date-time",
            "type": "string"
          },
          "floorDesc": {
            "description": "The patient's current floor details.",
            "type": "string"
          },
          "floorId": {
            "description": "PointClickCare's unique identifier for a floor within a facility.",
            "format": "int32",
            "type": "integer"
          },
          "modifiedDateTime": {
            "description": "Represents the date when the ADT record was last updated in PointClickCare. PointClickCare allows users to modify historical ADT records for a patient, as well as add future dated ADT records. The date and time should be expressed in UTC in the following format: YYYY-MM-DDTHH:MM:SS.sssZ.",
            "format": "date-time",
            "type": "string"
          },
          "origin": {
            "description": "Represents the name of the care setting or facility where the patient came from, if available. This field is only returned for ADT records where the Standard Action Type is one of 'Return From Leave', 'Admission' or 'Room Reserve'.",
            "type": "string"
          },
          "originType": {
            "description": "Represents the type of care setting or facility where the patient came from, if available. For e.g. Acute care hospital, Hospice or Rehab hospital. This field is only applicable for ADT records where the Standard Action Type is one of 'Return From Leave', 'Admission' or 'Room Reserve'.",
            "type": "string"
          },
          "outpatient": {
            "description": "Represents whether if the patient is an outpatient. Possible responses are 'true' or 'false'.",
            "type": "boolean"
          },
          "outpatientStatus": {
            "description": "Represents the outpatient status for the patient for the ADT Record. Possible values are 'active' or 'inactive'. The field is only returned if the patient is an outpatient.",
            "type": "string"
          },
          "patientId": {
            "description": "PointClickCare's unique identifier for a patient within the organization.</br></br>When a patient is admitted to a facility within an organization, they are assigned a patientId which is unique to their stay within that facility. If the same patient were to get admitted to another facility within the same organization in the future, they would be assigned a new patientId. The patientId however is unique at the organization level. That is, no two patients across different facilities within the organization will have the same patientId.",
            "format": "int32",
            "type": "integer"
          },
          "payerCode": {
            "description": "Represents the payer code for the primary payer name. Payer code is 3-character free-form short code. PointClickCare allows facilities to configure a payer code for each payer that gets added to the system.",
            "type": "string"
          },
          "payerName": {
            "description": "Represents the patient's primary payer.",
            "type": "string"
          },
          "payerType": {
            "description": "<p>Represents the patient's primary payer's type. Possible values for this field are:</p><ul><li>managedCare</li><li>medicaid</li><li>medicareA</li><li>medicareB</li><li>medicareD</li><li>other</li><li>outpatient</li><li>private</li></ul>",
            "type": "string"
          },
          "qhsWaiver": {
            "description": "Flag represents whether the patient has the 3-day requirement waived for hospital discharge. If 'true', patient has the 3-day requirement waived for the following census events: 'Admission', 'Internal Transfer', and 'Return from Leave'.",
            "type": "boolean"
          },
          "roomDesc": {
            "description": "The patient's current room details.",
            "type": "string"
          },
          "roomId": {
            "description": "PointClickCare's unique identifier for a room within a facility.",
            "format": "int32",
            "type": "integer"
          },
          "skilledCare": {
            "description": "Indicates whether skilled care was required for the patient during the current stay at the LTPAC facility.",
            "type": "boolean"
          },
          "skilledEffectiveFromDate": {
            "description": "Indicates date from which Skilled Care was provided to the patient",
            "format": "date",
            "type": "string"
          },
          "skilledEffectiveToDate": {
            "description": "Indicates date till which Skilled Care was provided to the patient",
            "format": "date",
            "type": "string"
          },
          "standardActionType": {
            "description": "Represents the standard action type associated to the action type. PointClickCare allows facilities to define custom action types. Each custom action type is mapped to a standard action type. Possible values for this field are:<ul><li>Admission</li><li>Death</li><li>Discharge</li><li>Internal Transfer</li><li>Leave</li><li>Return from Leave</li><li>Room Reserve</li></ul>",
            "type": "string"
          },
          "stopBillingDate": {
            "description": "Represents the financial move-out date of a resident.  For example, a resident is discharged on June 10th (effective date), but they will be billed for the room until the end of the month - June 30th (stop billing Date).",
            "format": "date",
            "type": "string"
          },
          "transferReason": {
            "description": "The documented reason for transfer as captured in the patient census. If the user selects a reason for transfer type of 'Other', the text entered in the Other field is returned.",
            "type": "string"
          },
          "unitDesc": {
            "description": "The patient's current unit details.",
            "type": "string"
          },
          "unitId": {
            "description": "PointClickCare's unique identifier for a unit within a facility.",
            "format": "int32",
            "type": "integer"
          },
          "isCancelledRecord": {
            "description": "Indicates whether an ADT record event is cancelled or not.",
            "type": "boolean"
          }
        },
        "title": "ADTRecordDetails",
        "type": "object"
      },
      "ADTRecordDetailsList": {
        "description": "",
        "example": {
          "data": [
            {
              "accessingEntityId": "8D04A8D1-6097-46A9-BB58-A8A5007BE59C",
              "actionCode": "TI",
              "actionType": "Transfer In",
              "additionalBedDesc": "1A",
              "additionalBedId": 16466,
              "additionalFloorDesc": "1Floor 1",
              "additionalFloorId": 11,
              "additionalRoomDesc": "1V302",
              "additionalRoomId": 15624,
              "additionalUnitDesc": "1West",
              "additionalUnitId": 121999,
              "adtRecordId": 669776,
              "bedDesc": "A",
              "bedId": 6466,
              "effectiveDateTime": "2018-10-31T08:00:19.000Z",
              "enteredBy": "Mary Smith",
              "enteredByPositionId": 793867,
              "enteredDate": "2017-10-30T08:00:19.000Z",
              "floorDesc": "Floor 1",
              "floorId": 1,
              "isCancelledRecord": false,
              "modifiedDateTime": "2017-11-01T08:00:19.000Z",
              "origin": "Chuck Hospital",
              "originType": "Acute Care Hospital",
              "outpatient": false,
              "patientId": 475694,
              "payerCode": "MCA",
              "payerName": "Medicare A",
              "payerType": "medicareA",
              "qhsWaiver": false,
              "roomDesc": "V302",
              "roomId": 5624,
              "skilledCare": true,
              "skilledEffectiveFromDate": "2017-10-31",
              "skilledEffectiveToDate": "2018-11-01",
              "standardActionType": "Return from Leave",
              "unitDesc": "West",
              "unitId": 21999
            },
            {
              "actionCode": "TO",
              "actionType": "Transfer Out",
              "additionalBedDesc": "1A",
              "additionalBedId": 16466,
              "additionalFloorDesc": "1Floor 1",
              "additionalFloorId": 11,
              "additionalRoomDesc": "1V302",
              "additionalRoomId": 15624,
              "additionalUnitDesc": "1West",
              "additionalUnitId": 121999,
              "adtRecordId": 667416,
              "bedDesc": "A",
              "bedId": 6466,
              "destination": "Angelina",
              "destinationType": "Acute Care Hospital",
              "effectiveDateTime": "2017-10-30T08:00:19.000Z",
              "enteredBy": "John Doe",
              "enteredByPositionId": 56784,
              "enteredDate": "2017-10-28T08:00:19.000Z",
              "floorDesc": "Floor 1",
              "floorId": 1,
              "isCancelledRecord": false,
              "transferReason": "Abnormal X-ray",
              "modifiedDateTime": "2017-10-31T08:00:19.000Z",
              "outpatient": false,
              "patientId": 270234,
              "payerCode": "MCA",
              "payerName": "Medicare A",
              "payerType": "medicareA",
              "roomDesc": "V302",
              "roomId": 5624,
              "standardActionType": "Leave",
              "stopBillingDate": "2017-10-30T00:00:00.000Z",
              "unitDesc": "West",
              "unitId": 21999
            },
            {
              "actionCode": "AA",
              "actionType": "Admission",
              "additionalBedDesc": "1A",
              "additionalBedId": 16466,
              "additionalFloorDesc": "1Floor 1",
              "additionalFloorId": 11,
              "additionalRoomDesc": "1V302",
              "additionalRoomId": 15624,
              "additionalUnitDesc": "1West",
              "additionalUnitId": 121999,
              "admissionSource": "Transfer from a Hospital",
              "admissionSourceCode": "4",
              "admissionType": "Elective",
              "admissionTypeCode": "3",
              "adtRecordId": 662632,
              "bedDesc": "A",
              "bedId": 6466,
              "effectiveDateTime": "2017-09-06T08:00:19.000Z",
              "enteredBy": "Alex Jones",
              "enteredByPositionId": 35579,
              "enteredDate": "2017-09-06T08:00:19.000Z",
              "floorDesc": "Scrubbed_1",
              "floorId": 1,
              "isCancelledRecord": true,
              "modifiedDateTime": "2017-09-06T08:00:19.000Z",
              "origin": "Angelina",
              "originType": "Acute Care Hospital",
              "outpatient": false,
              "patientId": 779023,
              "payerCode": "MCA",
              "payerName": "Medicare A",
              "payerType": "medicareA",
              "qhsWaiver": false,
              "roomDesc": "V302",
              "roomId": 5624,
              "standardActionType": "Admission",
              "unitDesc": "West",
              "unitId": 21999
            },
            {
              "adtRecordId": 663090,
              "dischargeStatus": "Discharged to home or self care",
              "dischargeStatusCode": "01",
              "effectiveDateTime": "2017-06-02T08:00:19.000Z",
              "enteredBy": "Dee Brown",
              "enteredDate": "2017-06-02T08:00:19.000Z",
              "isCancelledRecord": false,
              "transferReason": "Other reason",
              "modifiedDateTime": "2017-09-06T08:00:19.000Z",
              "outpatient": true,
              "outpatientStatus": "inactive",
              "patientId": 1589003,
              "payerCode": "MBO",
              "payerName": "Medicare B Outpatient",
              "payerType": "outpatient",
              "stopBillingDate": "2017-06-30T00:00:00.000Z"
            },
            {
              "admissionSource": "Physician Referral",
              "admissionSourceCode": "1",
              "admissionType": "Elective",
              "admissionTypeCode": "3",
              "adtRecordId": 622608,
              "effectiveDateTime": "2017-09-06T08:00:19.000Z",
              "enteredBy": "Kim Johnson",
              "enteredByPositionId": 345672,
              "enteredDate": "2017-09-01T08:00:19.000Z",
              "isCancelledRecord": true,
              "modifiedDateTime": "2017-09-06T08:00:19.000Z",
              "outpatient": true,
              "outpatientStatus": "active",
              "patientId": 6789035,
              "payerCode": "MBO",
              "payerName": "Medicare B Outpatient",
              "payerType": "outpatient"
            },
            {
              "actionCode": "DD",
              "actionType": "Discharge",
              "adtRecordId": 581663,
              "destination": "Rozella",
              "destinationType": "Private Home/ Residential",
              "dischargeStatus": "Disharged to Private Residence",
              "dischargeStatusCode": "01",
              "effectiveDateTime": "2017-01-13T08:00:19.000Z",
              "enteredBy": "Wayne Wilson",
              "enteredDate": "2017-01-14T08:00:19.000Z",
              "isCancelledRecord": false,
              "transferReason": "Abnormal X-ray",
              "modifiedDateTime": "2017-01-13T08:00:19.000Z",
              "outpatient": false,
              "patientId": 234796,
              "standardActionType": "Discharge",
              "stopBillingDate": "2017-01-15T00:00:00.000Z"
            },
            {
              "accessingEntityId": "D090EA4C-5D02-41A5-8358-087087D6F9CE",
              "actionCode": "AA",
              "actionType": "Admission",
              "admissionSource": "Physician Referral",
              "admissionSourceCode": "1",
              "admissionType": "Elective",
              "admissionTypeCode": "3",
              "adtRecordId": 568639,
              "bedDesc": "B",
              "bedId": 6481,
              "effectiveDateTime": "2016-12-10T08:00:19.000Z",
              "enteredBy": "Rick Miller",
              "enteredByPositionId": 3336876,
              "enteredDate": "2016-12-10T08:00:19.000Z",
              "floorDesc": "Floor 2",
              "floorId": 1,
              "isCancelledRecord": true,
              "modifiedDateTime": "2017-01-13T08:00:19.000Z",
              "origin": "Cordie Hospital",
              "originType": "Acute Care Hospital",
              "outpatient": false,
              "patientId": 789364,
              "payerCode": "MCA",
              "payerName": "Medicare A",
              "payerType": "medicareA",
              "qhsWaiver": false,
              "roomDesc": "V312",
              "roomId": 5643,
              "standardActionType": "Admission",
              "unitDesc": "West",
              "unitId": 21999
            }
          ],
          "paging": {
            "hasMore": false,
            "page": 1,
            "pageSize": 50
          }
        },
        "properties": {
          "data": {
            "description": "List of patient's ADT records.",
            "items": {
              "$ref": "#/components/schemas/ADTRecordDetails"
            },
            "type": "array"
          },
          "paging": {
            "$ref": "#/components/schemas/PagingResponseByPage"
          }
        },
        "title": "ADTRecordDetailsList",
        "type": "object"
      },
      "AdlList": {
        "description": "Patient ADLs.",
        "example": {
          "data": [
            {
              "mdsQuestionKey": "G0110A1",
              "questionDescription": "BED MOBILITY: SELF-PERFORMANCE - How resident moves to and from lying position, turns side to side, and positions body while in bed or alternate sleep furniture",
              "response": {
                "description": "INDEPENDENT - No help or staff oversight at any time",
                "recordedBy": "PCC-test",
                "recordedDate": "2016-07-01T12:11:00.000Z",
                "value": 0
              }
            },
            {
              "mdsQuestionKey": "G0110A1",
              "questionDescription": "BED MOBILITY: SELF-PERFORMANCE - How resident moves to and from lying position, turns side to side, and positions body while in bed or alternate sleep furniture",
              "response": {
                "description": "Supervision: oversight, encouragement, cueing",
                "recordedBy": "PCC-test",
                "recordedDate": "2016-07-05T14:15:00.000Z",
                "value": 1
              }
            }
          ],
          "paging": {
            "hasMore": false,
            "page": 1,
            "pageSize": 50
          }
        },
        "properties": {
          "data": {
            "description": "List of all ADL assessment questions and responses for a patient recorded in PointClickCare.",
            "items": {
              "$ref": "#/components/schemas/Outbound"
            },
            "type": "array"
          },
          "paging": {
            "$ref": "#/components/schemas/PagingResponseByPage"
          }
        },
        "title": "AdlList",
        "type": "object"
      },
      "AdlScore": {
        "description": " ADL scores for a patient recorded in PointClickCare.",
        "example": {
          "adlScore": 9,
          "adlScoreDate": "2020-11-20",
          "modifiedBy": "pcc-demo",
          "modifiedDateTime": "2020-11-30T19:06:19.204Z"
        },
        "properties": {
          "adlScore": {
            "description": "Daily value of the ADL score.",
            "format": "int32",
            "type": "integer"
          },
          "adlScoreDate": {
            "description": "The date when the daily ADL score was generated in PointClickCare. The date is expressed in the following format: YYYY-MM-DD.",
            "format": "date",
            "type": "string"
          },
          "modifiedBy": {
            "description": "The user who edited the ADL score at the facility.",
            "type": "string"
          },
          "modifiedDateTime": {
            "description": "The date when the ADL score was manually edited by a user at the facility. PointClickCare allows users to modify the daily ADL score for a patient. The date and time is expressed in the following format: YYYY-MM-DDTHH:MM:SS.sssZ.",
            "format": "date-time",
            "type": "string"
          }
        },
        "title": "AdlScore",
        "type": "object"
      },
      "AdlScoreList": {
        "description": "ADL Scores",
        "example": {
          "data": [
            {
              "adlScore": 9,
              "adlScoreDate": "2020-11-20",
              "modifiedBy": "pcc-demo",
              "modifiedDateTime": "2020-11-30T19:06:19.144Z"
            },
            {
              "adlScore": 10,
              "adlScoreDate": "2020-11-10"
            }
          ],
          "paging": {
            "hasMore": false,
            "page": 1,
            "pageSize": 50
          }
        },
        "properties": {
          "data": {
            "description": "List of ADL scores for a patient recorded in PointClickCare.",
            "items": {
              "$ref": "#/components/schemas/AdlScore"
            },
            "type": "array"
          },
          "paging": {
            "$ref": "#/components/schemas/PagingResponseByPage"
          }
        },
        "title": "AdlScoreList",
        "type": "object"
      },
      "AdministeredAmount": {
        "description": "Represents the amount administered for the immunization, if recorded.",
        "example": {
          "unit": "mg",
          "value": 10.5
        },
        "properties": {
          "unit": {
            "description": "Represents the unit of the immunization that was administered to the patient, if recorded.",
            "type": "string"
          },
          "value": {
            "description": "Represents the amount of the immunization administered to the patient, if recorded.",
            "format": "double",
            "type": "number"
          }
        },
        "title": "AdministeredAmount",
        "type": "object"
      },
      "Administration": {
        "description": "Last medication administration details for the schedule.",
        "example": {
          "administeredDateTime": "2020-11-30T19:06:19.141Z"
        },
        "properties": {
          "administeredDateTime": {
            "description": "Last medication administration date",
            "type": "string",
            "format": "date-time"
          }
        },
        "title": "Administration",
        "type": "object"
      },
      "AdministrationRoutePostCoding": {
        "description": "Administration routes, can accept up to 3 entries.",
        "example": {
          "code": "by_mouth",
          "display": "by mouth",
          "system": "https://pointclickcare.com/system/administration-route"
        },
        "properties": {
          "code": {
            "description": "Specific code for the route of administration being conveyed.<br>The codes and display associated with the PointClickCare system are listed below:<br><table><th>Code</th><th>Display</th><tr><td>alternating_nostrils</td><td>Alternating nostrils</td></tr><tr><td>buccally</td><td>buccally</td></tr><tr><td>by_mouth</td><td>by mouth</td></tr><tr><td>dental</td><td>dental</td></tr><tr><td>enterally</td><td>enterally</td></tr><tr><td>hemodialysis</td><td>hemodialysis</td></tr><tr><td>in_both_ears</td><td>in both ears</td></tr><tr><td>in_both_eyes</td><td>in both eyes</td></tr><tr><td>in_both_nostrils</td><td>in both nostrils</td></tr><tr><td>in_each_nostril</td><td>in each nostril</td></tr><tr><td>in_left_ear</td><td>in left ear</td></tr><tr><td>in_left_eye</td><td>in left eye</td></tr><tr><td>in_left_nostril</td><td>in left nostril</td></tr><tr><td>in_nostril</td><td>in nostril</td></tr><tr><td>in_right_ear</td><td>in right ear</td></tr><tr><td>in_right_eye</td><td>in right eye</td></tr><tr><td>in_right_nostril</td><td>in right nostril</td></tr><tr><td>in_the_cheek</td><td>in the cheek</td></tr><tr><td>in_the_peritoneal_cavity</td><td>in the peritoneal cavity</td></tr><tr><td>in_the_urethra</td><td>in the urethra</td></tr><tr><td>in_vitro</td><td>in vitro</td></tr><tr><td>inhale_orally</td><td>inhale orally</td></tr><tr><td>inhale_orally_via_nebulizer</td><td>inhale orally via nebulizer</td></tr><tr><td>intra-arterially</td><td>intra-arterially</td></tr><tr><td>intra-articularly</td><td>intra-articularly</td></tr><tr><td>intracavernosal</td><td>intracavernosal</td></tr><tr><td>intradermally</td><td>intradermally</td></tr><tr><td>intramuscularly</td><td>intramuscularly</td></tr><tr><td>intraocularly</td><td>intraocularly</td></tr><tr><td>intraspinal</td><td>intraspinal</td></tr><tr><td>intrathecally</td><td>intrathecally</td></tr><tr><td>intrauterine</td><td>intrauterine</td></tr><tr><td>intravenously</td><td>intravenously</td></tr><tr><td>intravesical</td><td>intravesical</td></tr><tr><td>miscellaneous</td><td>miscellaneous</td></tr><tr><td>mucous_membrane</td><td>mucous membrane</td></tr><tr><td>orally</td><td>orally</td></tr><tr><td>perfusion</td><td>perfusion</td></tr><tr><td>rectally</td><td>rectally</td></tr><tr><td>subcutaneously</td><td>subcutaneously</td></tr><tr><td>sublingually</td><td>sublingually</td></tr><tr><td>topically</td><td>topically</td></tr><tr><td>transdermally</td><td>transdermally</td></tr><tr><td>translingually</td><td>translingually</td></tr><tr><td>vaginally</td><td>vaginally</td></tr><tr><td>via_dh-tube</td><td>via DH-Tube</td></tr><tr><td>via_epidural_injection</td><td>via epidural injection</td></tr><tr><td>via_g-tube</td><td>via G-Tube</td></tr><tr><td>via_graft_or_port</td><td>via graft or port</td></tr><tr><td>via_implant</td><td>via implant</td></tr><tr><td>via_irrigation</td><td>via irrigation</td></tr><tr><td>via_j-tube</td><td>via J-Tube</td></tr><tr><td>via_mask</td><td>via mask</td></tr><tr><td>via_nd-tube</td><td>via ND-Tube</td></tr><tr><td>via_ng-tube</td><td>via NG-Tube</td></tr><tr><td>via_nj-tube</td><td>via NJ-Tube</td></tr><tr><td>via_peg-tube</td><td>via PEG-Tube</td></tr><tr><td>via_trach</td><td>via trach</td></tr><tr><td>via_vent</td><td>via vent</td></tr><tr><td>within_the_pleura</td><td>within the pleura</td></tr></table>",
            "type": "string"
          },
          "display": {
            "description": "Text description of the route of administration.",
            "type": "string"
          },
          "system": {
            "description": "Type of coding system being used e.g. 'PointClickCare' or SNOMED. Can be a URL.<br>If both SNOMED and PointClickCare codes are passed, only the PointClickCare codes will be saved.<br>Supported systems are: <ul><li>PointClickCare: <b>https://pointclickcare.com/system/administration-route</b><br></li><br><li>SNOMED: <b>http://snomed.info/sct</b> The codes associated with the SNOMED system can be found at http://browser.ihtsdotools.org/?</li></ul>",
            "type": "string"
          }
        },
        "title": "AdministrationRoutePostCoding",
        "type": "object"
      },
      "AdministrativeOrder": {
        "description": "Administrative Orders on the Order.",
        "example": {
          "adminOrderId": 0,
          "confirmedBy": "Firstname Lastname",
          "createdBy": "Firstname Lastname",
          "effectiveDate": "2019-05-10T04:00:00.000Z",
          "inEffectiveDate": "2019-05-14T04:00:00.000Z",
          "orderVerified": "N",
          "orderedBy": "Lastname, Firstname",
          "physOrderId": 0,
          "relationship": "Hold"
        },
        "properties": {
          "adminOrderId": {
            "description": "Administrative Order ID",
            "format": "int32",
            "type": "integer"
          },
          "confirmedBy": {
            "description": "The person who confirmed the Administrative Order",
            "type": "string"
          },
          "createdBy": {
            "description": "The person who created the Administrative Order",
            "type": "string"
          },
          "effectiveDate": {
            "description": "Effective Date of the Administrative Order",
            "format": "date-time",
            "type": "string"
          },
          "inEffectiveDate": {
            "description": "In Effective Date of the Administrative Order",
            "format": "date-time",
            "type": "string"
          },
          "orderVerified": {
            "description": "'Y' if the Administrative Order been verified",
            "type": "string"
          },
          "orderedBy": {
            "description": "The person who ordered the Administrative Order",
            "type": "string"
          },
          "physOrderId": {
            "description": "Physician Order ID",
            "format": "int32",
            "type": "integer"
          },
          "relationship": {
            "description": "The type of Administrative Order. Ie. Hold, Resume, etc.",
            "type": "string"
          }
        },
        "title": "AdministrativeOrder",
        "type": "object"
      },
      "AdvanceDirectiveConsents": {
        "description": "advance directives consents.",
        "example": {
          "advanceDirectivesConsentId": 1652241,
          "communicationMethod": "Phone",
          "consentStatus": "Current and Verified",
          "description": "Antibiotic Therapy & Resuscitation",
          "directives": [
            "Antibiotic Therapy",
            "Resuscitation"
          ],
          "orderDate": "2017-09-07T04:00:00.000Z",
          "orderedBy": "Kimmel, Rachel",
          "orderedById": 74847,
          "patientId": 3017135,
          "status": "active"
        },
        "properties": {
          "advanceDirectivesConsentId": {
            "description": "PointClickCare’s unique identifier for the advance directives consents.",
            "format": "int32",
            "type": "integer"
          },
          "communicationMethod": {
            "description": "Represents the method used to communicate the consent order for the patient.  <br/>Possible values are ‘Phone’, ‘Verbal’, ‘Prescriber written’ and 'Prescriber entered'.",
            "type": "string"
          },
          "consentStatus": {
            "description": "Represents the validity for the consent. Possible values are 'Current and Verified', 'Supported By Healthcare Will', 'Verified With Family Only', 'Verified By Medical Record Only' and 'Supported By Durable Power of Attorney for Healthcare'.",
            "type": "string"
          },
          "description": {
            "description": "Represents the description for the advance directive order.",
            "type": "string"
          },
          "directives": {
            "description": "Represents all the individual advance directives included in the consent order, if available. PointClickCare allows a consent order to be created without selecting any directives in the consent order.<br/>Possible values for directives are:<ul><li>Antibiotic Therapy</li><li>Cardiopulmonary Resuscitation</li><li>Intravenous Infusion</li><li>Intubation</li><li>Life Support</li><li>Other Directive</li><li>Resuscitation</li></ul>",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "discontinuedBy": {
            "description": "Represents the PointClickCare user who discontinued the consent. This is typically the practitioner or medical professional assigned to the patient.",
            "type": "string"
          },
          "discontinuedById": {
            "description": "Unique identifier for the practitioner or medical professional that ordered the consent to be discontinued.",
            "format": "int32",
            "type": "integer"
          },
          "discontinuedDate": {
            "description": "Represents the date when the consent was discontinued. <br/>The date is expressed in UTC in the following format:YYYY-MM-DDTHH:MM:SS.sssZ.",
            "format": "date-time",
            "type": "string"
          },
          "orderDate": {
            "description": "Represents the date when the consent was ordered. <br/>The date is expressed in UTC in the following format:YYYY-MM-DDTHH:MM:SS.sssZ.",
            "format": "date-time",
            "type": "string"
          },
          "orderedBy": {
            "description": "Represents the PointClickCare user who ordered the consent. This is typically the practitioner or medical professional assigned to the patient.",
            "type": "string"
          },
          "orderedById": {
            "description": "Unique identifier for the practitioner or medical professional that ordered the consent.",
            "format": "int32",
            "type": "integer"
          },
          "patientId": {
            "description": "PointClickCare's unique identifier for a patient within the organization.</br></br>When a patient is admitted to a facility within an organization, they are assigned a patientId which is unique to their stay within that facility. If the same patient were to get admitted to another facility within the same organization in the future, they would be assigned a new patientId. The patientId however is unique at the organization level. That is, no two patients across different facilities within the organization will have the same patientId.",
            "format": "int32",
            "type": "integer"
          },
          "revisionDate": {
            "description": "Represents the date when the consent was last updated. The date is expressed in UTC in the following format:YYYY-MM-DDTHH:MM:SS.sssZ.",
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "description": "Represents the status of the consent order for the patient. Possible values are \"active\", \"discontinued\" and \"pending\".  <br/>When a consent order is created for a patient and it is not signed, it is in the 'pending' state. After it has been signed, it becomes 'active'. If the advance directive is discontinued, it is in the 'discontinued' state.",
            "type": "string"
          }
        },
        "title": "AdvanceDirectiveConsents",
        "type": "object"
      },
      "AdvanceDirectiveConsentsList": {
        "description": "List of advance directives consents.",
        "example": {
          "data": [
            {
              "advanceDirectivesConsentId": 1652241,
              "communicationMethod": "Phone",
              "consentStatus": "Current and Verified",
              "description": "Antibiotic Therapy & Resuscitation",
              "directives": [
                "Antibiotic Therapy",
                "Resuscitation"
              ],
              "orderDate": "2017-09-07T04:00:00.000Z",
              "orderedBy": "Kimmel, Rachel",
              "orderedById": 74847,
              "patientId": 3017135,
              "status": "active"
            },
            {
              "advanceDirectivesConsentId": 874859,
              "communicationMethod": "Verbal",
              "consentStatus": "Supported By Healthcare Will",
              "description": "Intubation & Life Support",
              "directives": [
                "Intubation",
                "Life Support"
              ],
              "orderDate": "2017-09-10T04:00:00.000Z",
              "orderedBy": "Peterman, Herminia",
              "orderedById": 45689,
              "patientId": 3017135,
              "status": "pending"
            },
            {
              "advanceDirectivesConsentId": 874860,
              "communicationMethod": "Verbal",
              "consentStatus": "Verified With Family Only",
              "description": "Intravenous Infusion & Other Directive",
              "directives": [
                "Intravenous Infusion",
                "Other Directive"
              ],
              "discontinuedBy": "Kimmel, Rachel",
              "discontinuedById": 74847,
              "discontinuedDate": "2017-09-07T04:00:00.000Z",
              "orderDate": "2017-09-06T04:00:00.000Z",
              "orderedBy": "Peterman, Herminia",
              "orderedById": 45689,
              "patientId": 3017135,
              "revisionDate": "2017-09-07T04:00:00.000Z",
              "status": "discontinued"
            }
          ],
          "paging": {
            "hasMore": false,
            "page": 1,
            "pageSize": 50
          }
        },
        "properties": {
          "data": {
            "description": "List of advance directives consents.",
            "items": {
              "$ref": "#/components/schemas/AdvanceDirectiveConsents"
            },
            "type": "array"
          },
          "paging": {
            "$ref": "#/components/schemas/PagingResponseByPage"
          }
        },
        "title": "AdvanceDirectiveConsentsList",
        "type": "object"
      },
      "AllergyIntolerance": {
        "description": "allergies.",
        "example": {
          "allergen": "Penicillin G",
          "allergyIntoleranceId": 99873,
          "category": "Drug",
          "clinicalStatus": "active",
          "createdBy": "mikti",
          "onsetDate": "2015-01-11",
          "patientId": 10101,
          "reactionNote": "Patient develops a rash.",
          "reactionSubType": "Bronchospasm",
          "reactionType": "Anaphylaxis",
          "severity": "mild",
          "type": "Allergy"
        },
        "properties": {
          "allergen": {
            "description": "Represents the allergen.",
            "type": "string"
          },
          "allergenCode": {
            "description": "Represents the applicable standard code of the allergen.",
            "$ref": "#/components/schemas/SwitcherooCodeableConcept"
          },
          "allergyIntoleranceId": {
            "description": "The unique identifier for the allergy.",
            "format": "int32",
            "type": "integer"
          },
          "category": {
            "description": "Represents the category the allergy falls under. Acceptable values are 'Drug', 'Food', 'Environmental', 'Substance' and 'Other'.",
            "type": "string"
          },
          "clinicalStatus": {
            "description": "Represents the allergy status. Possible values are 'active', 'priorHistory' and 'resolved'.",
            "type": "string"
          },
          "createdBy": {
            "description": "Represents the user that created the allergy.",
            "type": "string"
          },
          "createdDate": {
            "description": "The recorded date the allergy and intolerance record was created. The date and time are expressed in UTC in the following format YYYY-MM-DDTHH:MM:SS.sssZ.",
            "format": "date-time",
            "type": "string"
          },
          "onsetDate": {
            "description": "Represents the date when the allergy was identified. The date is expressed as YYYY-MM-DD.",
            "format": "date",
            "type": "string"
          },
          "patientId": {
            "description": "PointClickCare's unique identifier for a patient within the organization.</br></br>When a patient is admitted to a facility within an organization, they are assigned a patientId which is unique to their stay within that facility. If the same patient were to get admitted to another facility within the same organization in the future, they would be assigned a new patientId. The patientId however is unique at the organization level. That is, no two patients across different facilities within the organization will have the same patientId.",
            "format": "int32",
            "type": "integer"
          },
          "reaction": {
            "description": "Represents each reaction.",
            "items": {
              "$ref": "#/components/schemas/AllergenCode"
            },
            "type": "array"
          },
          "reactionNote": {
            "description": "Free text notes associated to the allergy entered by the user. Notes can be added at the time of adding an allergy or after an allergy has been added.",
            "type": "string"
          },
          "reactionSubType": {
            "description": "Represents the reaction sub type. Each reaction type can have its own sub type. <br/>Reaction sub type for 'Anaphylaxis'<ul><li>Bronchospasm</li><li>Hypotension</li><li>Laryngeal edema</li></ul><br/>Reaction sub type for 'Cutaneous reactions'<ul><li>Contact sensitivity</li><li>Erythema multiforme</li><li>Erythema nodosum</li><li>Exfoliative dermatitis</li><li>Fixed drug eruption</li><li>Maculopapular (morbilliform) rash</li><li>Pruritus</li><li>Stevens-Johnson syndrome</li><li>Toxic epidermal necrolysis</li><li>Urticaria and angioedema</li><li>Vasculitis</li></ul><br/>Reaction sub type for 'Hepatic reactions'<ul><li>Cholestatic reactions</li><li>Hepatocellular damage</li></ul><br/>Reaction sub type for 'Photosensitivity reactions'<ul><li>Destruction of formed elements of blood</li><li>Hemolytic anemia</li><li>Neutropenia</li><li>Thrombocytopenia</li></ul><br/>Reaction sub type for 'Pulmonary reactions'<ul><li>Edema</li><li>Fibrosis</li><li>Interstitial or alveolar pneumonitis</li></ul><br/>Reaction sub type for 'Renal reactions'<ul><li>Glomerulonephritis</li><li>Interstitial nephritis</li><li>Nephrotic syndrome</li></ul>",
            "type": "string"
          },
          "reactionSubTypeCode": {
            "description": "Represents the applicable standard code of the reaction sub type.",
            "$ref": "#/components/schemas/SwitcherooCodeableConcept"
          },
          "reactionType": {
            "description": "Represents the reaction type. Acceptable values are 'Anaphylaxis', 'Cutaneous reactions', 'Drug Fever', 'Hepatic reactions', 'Lymphadenopathy', 'Nausea', 'Photosensitivity reactions', 'Pulmonary reactions', 'Renal reactions', 'Serum sickness', 'Systemic vasculitis'.",
            "type": "string"
          },
          "reactionTypeCode": {
            "description": "Represents the applicable standard code of the reaction type.",
            "$ref": "#/components/schemas/SwitcherooCodeableConcept"
          },
          "resolvedDate": {
            "description": "Represents the date when the allergy was resolved. The date is expressed as YYYY-MM-DD.",
            "format": "date",
            "type": "string"
          },
          "revisionBy": {
            "description": "The recorded client/user name who last revised the allergy and intolerance record.",
            "type": "string"
          },
          "revisionDate": {
            "description": "The recorded date the allergy and intolerance record was last revised. The date and time are expressed in UTC in the following format YYYY-MM-DDTHH:MM:SS.sssZ.",
            "format": "date-time",
            "type": "string"
          },
          "severity": {
            "description": "Represents the severity of the allergy for the patient. Acceptable values are 'Mild', 'Moderate', 'Severe' and 'Unknown'. 'Unknown' is returned if no value for 'Severity' is selected when entering the allergy through the PointClickCare application.",
            "type": "string"
          },
          "type": {
            "description": "Represents the allergy type. Possible values are 'Allergy', 'Intolerance' and 'Propensity to Adverse Reactions' or 'Unknown'. 'Type' was not always a required field in the PointClickCare application when adding an allergy. There may be existing older records where this value was not set. In those cases, a value of 'Unknown' will be returned.",
            "type": "string"
          },
          "uscdiV1Category": {
            "description": "uscdiV1Category may not be enabled.",
            "type": "string"
          }
        },
        "title": "AllergyIntolerance",
        "type": "object"
      },
      "AllergyIntoleranceList": {
        "description": "List of allergies.",
        "example": {
          "data": [
            {
              "allergen": "Abametapir",
              "allergenCode": {
                "codings": [
                  {
                    "system": "http://www.nlm.nih.gov/research/umls/rxnorm",
                    "version": "05102020",
                    "code": "11253",
                    "display": "vitamin D"
                  }
                ]
              },
              "allergyIntoleranceId": 99873,
              "category": "Drug",
              "clinicalStatus": "active",
              "createdBy": "mikti",
              "createdDate": "2016-02-01T04:45:15.000Z",
              "onsetDate": "2015-01-11",
              "patientId": 10101,
              "reactionNote": "Patient develops a rash.",
              "reaction": {
                "manifestations": [
                  {
                    "systemName": "SNOMED CT",
                    "systemNameSpace": "2.16.840.1.113883.2.20.3.210",
                    "code": "49054059",
                    "displayName": "Anaphylactic reaction"
                  }
                ]
              },
              "reactionSubType": "Bronchospasm",
              "reactionSubTypeCode": {
                "codings": [
                  {
                    "system": "http://snomed.info/sct",
                    "version": "http://snomed.info/sct/731000124108/version/20200901",
                    "code": "4386001",
                    "display": "Bronchospasm"
                  }
                ]
              },
              "reactionType": "Anaphylaxis",
              "reactionTypeCode": {
                "codings": [
                  {
                    "system": "http://snomed.info/sct",
                    "version": "http://snomed.info/sct/731000124108/version/20200901",
                    "code": "39579001",
                    "display": "Anaphylactic reaction"
                  }
                ]
              },
              "revisionBy": "mikti",
              "revisionDate": "2016-02-01T04:45:15.000Z",
              "severity": "mild",
              "type": "Allergy"
            },
            {
              "allergen": "Cashew nuts",
              "allergyIntoleranceId": 833245,
              "category": "Food",
              "clinicalStatus": "resolved",
              "createdBy": "mikti",
              "createdDate": "2013-02-01T04:45:15.000Z",
              "onsetDate": "2014-04-12",
              "patientId": 10101,
              "reactionNote": "Patient uses an epipen.",
              "reactionType": "Nausea",
              "reactionTypeCode": {
                "codings": [
                  {
                    "system": "http://snomed.info/sct",
                    "version": "http://snomed.info/sct/731000124108/version/20200901",
                    "code": "422587007",
                    "display": "Nausea"
                  }
                ]
              },
              "resolvedDate": "2015-09-01",
              "revisionBy": "mikti",
              "revisionDate": "2017-03-01T04:45:15.000Z",
              "severity": "mild",
              "type": "Allergy"
            }
          ],
          "paging": {
            "hasMore": false,
            "page": 1,
            "pageSize": 50
          }
        },
        "properties": {
          "data": {
            "description": "List of allergies.",
            "items": {
              "$ref": "#/components/schemas/AllergyIntolerance"
            },
            "type": "array"
          },
          "outliers": {
            "description": "Represents if the patient has no known allergies or whether if the allergies for the patient are yet to be determined. Possible values are 'No Known Allergies' or 'To Be Determined'.",
            "type": "string"
          },
          "paging": {
            "$ref": "#/components/schemas/PagingResponseByPage"
          }
        },
        "title": "AllergyIntoleranceList",
        "type": "object"
      },
      "Amenity": {
        "description": "",
        "example": {
          "description": "Jr. Suite (Living area with closet)",
          "id": 12580
        },
        "properties": {
          "description": {
            "description": "A description of the amenity within a facility.",
            "type": "string"
          },
          "id": {
            "description": "PointClickCare's unique identifier for the amenity.",
            "format": "int32",
            "type": "integer"
          }
        },
        "title": "Amenity",
        "type": "object"
      },
      "AppFacility": {
        "description": "all the facilities in which the application is activated. If the scope is 'Corporate', this array will be empty, but the application has been activated in all facilities. If the scope is 'Facility' but no facilityInfo is returned, the application is ready to be activated in facilities but has not been yet.",
        "example": {
          "activationDate": "2020-11-30",
          "facId": 101
        },
        "properties": {
          "activationDate": {
            "description": "Date when application was enabled in the facility.",
            "format": "date-time",
            "type": "string"
          },
          "facId": {
            "description": "Facility in which the application is activated.",
            "format": "int32",
            "type": "integer"
          }
        },
        "title": "AppFacility",
        "type": "object"
      },
      "AssessmentDetail": {
        "description": "Assessment",
        "example": {
          "assessmentId": 96912,
          "assessmentRefDate": "2018-05-28T19:57:33.023Z",
          "assessmentScore": 17,
          "assessmentStatus": "In Progress",
          "createdBy": "lwyatte",
          "facId": 1,
          "lockedDate": "2018-11-28T19:57:33.023Z",
          "orgUuid": "12345678-AAAA-4444-AAAA-000010000001",
          "patientId": 5577276,
          "sections": [
            {
              "assessmentQuestionGroups": [
                {
                  "assessmentResponses": [
                    {
                      "questionKey": "Cust_1_1",
                      "questionNumber": "1",
                      "questionText": "Please describe the resident interaction",
                      "responses": [
                        {
                          "responseValue": "Resident was pleasant and attentive"
                        }
                      ]
                    },
                    {
                      "questionKey": "Cust_1_2",
                      "questionNumber": "2",
                      "questionText": "Please select the date",
                      "responses": [
                        {
                          "responseValue": "2019-01-02"
                        }
                      ]
                    },
                    {
                      "questionKey": "Cust_1_3",
                      "questionNumber": "3",
                      "questionText": "Please select the date and time",
                      "responses": [
                        {
                          "responseValue": "2019-01-03T02:03:00.000Z"
                        }
                      ]
                    },
                    {
                      "questionKey": "Cust_1_4",
                      "questionNumber": "4",
                      "questionText": "Please make a choice from the vertical radio buttons",
                      "responses": [
                        {
                          "responseText": "Option b",
                          "responseValue": "b"
                        }
                      ]
                    },
                    {
                      "questionKey": "Cust_1_5",
                      "questionNumber": "5",
                      "questionText": "Please make a choice from the horizontal radio buttons",
                      "responses": [
                        {
                          "responseText": "Option a",
                          "responseValue": "a"
                        }
                      ]
                    },
                    {
                      "questionKey": "Cust_1_6",
                      "questionNumber": "6",
                      "questionText": "Please choose one or more options from the vertical checkboxes",
                      "responses": [
                        {
                          "responseText": "Option b",
                          "responseValue": "b"
                        }
                      ]
                    },
                    {
                      "questionKey": "Cust_1_7",
                      "questionNumber": "7",
                      "questionText": "Please choose one or more options from the horizontal checkboxes",
                      "responses": [
                        {
                          "responseText": "Option a",
                          "responseValue": "a"
                        },
                        {
                          "responseText": "Option b",
                          "responseValue": "b"
                        },
                        {
                          "responseText": "Option c",
                          "responseValue": "c"
                        },
                        {
                          "responseText": "Option d",
                          "responseValue": "d"
                        }
                      ]
                    },
                    {
                      "questionKey": "Cust_1_8",
                      "questionNumber": "8",
                      "questionText": "Please check the checkbox if true",
                      "responses": [
                        {
                          "responseValue": "1"
                        }
                      ]
                    },
                    {
                      "questionKey": "Cust_1_9",
                      "questionNumber": "9",
                      "questionText": "Please enter a positive integer",
                      "responses": [
                        {
                          "responseValue": "3"
                        }
                      ]
                    },
                    {
                      "questionKey": "Cust_1_10",
                      "questionNumber": "10",
                      "questionText": "Please enter a positive decimal number",
                      "responses": [
                        {
                          "responseValue": "60.5"
                        }
                      ]
                    },
                    {
                      "questionKey": "Cust_1_11",
                      "questionNumber": "11",
                      "questionText": "Please make a choice from the numbered options",
                      "responses": [
                        {
                          "responseText": "Setup Help only",
                          "responseValue": "1"
                        }
                      ]
                    },
                    {
                      "questionKey": "Cust_1_12",
                      "questionNumber": "12",
                      "questionText": "Please make a choice from the drop-down list box",
                      "responses": [
                        {
                          "responseText": "Mild",
                          "responseValue": "1"
                        }
                      ]
                    },
                    {
                      "questionKey": "Cust_1_13",
                      "questionNumber": "13",
                      "questionText": "Please make a choice using the search box",
                      "responses": [
                        {
                          "responseText": "English",
                          "responseValue": "en"
                        }
                      ]
                    }
                  ],
                  "groupNumber": "1",
                  "groupTitle": "Common Controls"
                }
              ],
              "completedBy": "lwyatte",
              "completedDate": "2018-05-28T22:51:33.000Z",
              "sectionCode": "Cust",
              "sectionStatus": "Signed"
            }
          ],
          "struckOutDate": "2018-11-29T14:15:20.000Z",
          "struckOutReason": "Wrong chart",
          "templateId": 55
        },
        "properties": {
          "assessmentId": {
            "description": "The identification number associated with the assessment.",
            "format": "int32",
            "type": "integer"
          },
          "assessmentRefDate": {
            "description": "Represents the date the assessment is created with the associated assessment identification number. The date and time are expressed in UTC in the following format YYYY-MM-DDTHH:MM:SS.sssZ.",
            "format": "date-time",
            "type": "string"
          },
          "assessmentScore": {
            "description": "The calculated measurement of all question key responses within the assessment to determine the care level progress or decline on a client.<br><br>Note: This field may be blank if not applicable for the specified assessment.",
            "format": "double",
            "type": "number"
          },
          "assessmentStatus": {
            "description": "The possible status associated with the assessment to determine documentation progress or completion.</br></br>Types:<ul><li>Complete</li><li>Errors</li><li>In Progress</li><li>Inactivated</li><li>Incomplete</li><li>Modified</li></ul>",
            "type": "string"
          },
          "createdBy": {
            "description": "The recorded client/user name associated with the creation of the assessment.",
            "type": "string"
          },
          "facId": {
            "description": "PointClickCare's unique identifier for a facility within the organization.",
            "format": "int32",
            "type": "integer"
          },
          "lockedDate": {
            "description": "The recorded locked date of the assessment. The assessment is no longer editable by the user. The date and time are expressed in UTC in the following format YYYY-MM-DDTHH:MM:SS.sssZ.",
            "format": "date-time",
            "type": "string"
          },
          "orgUuid": {
            "description": "PointClickCare's unique identifier for the organization.",
            "type": "string"
          },
          "patientId": {
            "description": "PointClickCare's unique identifier for a patient within the organization.<br/><br/>When a patient is admitted to a facility within an organization, they are assigned a patientId which is unique to their stay within that facility. If the same patient were to get admitted to another facility within the same organization in the future, they would be assigned a new patientId. The patientId however is unique at the organization level. That is, no two patients across different facilities within the organization will have the same patientId.",
            "format": "int32",
            "type": "integer"
          },
          "sections": {
            "description": "List of divided areas of the assessment set by the user.",
            "items": {
              "$ref": "#/components/schemas/AssessmentDetailSection"
            },
            "type": "array"
          },
          "struckOutDate": {
            "description": "The recorded date the assessment was struck out. The date and time are expressed in UTC in the following format YYYY-MM-DDTHH:MM:SS.sssZ.",
            "format": "date-time",
            "type": "string"
          },
          "struckOutReason": {
            "description": "Represents the reason why an assessment was struck out. Assessments may be struck out when they are incorrectly documented.",
            "type": "string"
          },
          "templateId": {
            "description": "Represents the unique template id number associated with an assessment.",
            "format": "int32",
            "type": "integer"
          }
        },
        "title": "AssessmentDetail",
        "type": "object"
      },
      "AssessmentDetailQuestionGroup": {
        "description": "Designated groupings associated with specified questions of the assessment .",
        "example": {
          "assessmentResponses": [
            {
              "questionKey": "Cust_1_1",
              "questionNumber": "1",
              "questionText": "Please describe the resident interaction",
              "responses": [
                {
                  "responseValue": "Resident was pleasant and attentive"
                }
              ]
            },
            {
              "questionKey": "Cust_1_2",
              "questionNumber": "2",
              "questionText": "Please select the date",
              "responses": [
                {
                  "responseValue": "2019-01-02"
                }
              ]
            },
            {
              "questionKey": "Cust_1_3",
              "questionNumber": "3",
              "questionText": "Please select the date and time",
              "responses": [
                {
                  "responseValue": "2019-01-03T02:03:00.000Z"
                }
              ]
            },
            {
              "questionKey": "Cust_1_4",
              "questionNumber": "4",
              "questionText": "Please make a choice from the vertical radio buttons",
              "responses": [
                {
                  "responseText": "Option b",
                  "responseValue": "b"
                }
              ]
            },
            {
              "questionKey": "Cust_1_5",
              "questionNumber": "5",
              "questionText": "Please make a choice from the horizontal radio buttons",
              "responses": [
                {
                  "responseText": "Option a",
                  "responseValue": "a"
                }
              ]
            },
            {
              "questionKey": "Cust_1_6",
              "questionNumber": "6",
              "questionText": "Please choose one or more options from the vertical checkboxes",
              "responses": [
                {
                  "responseText": "Option b",
                  "responseValue": "b"
                }
              ]
            },
            {
              "questionKey": "Cust_1_7",
              "questionNumber": "7",
              "questionText": "Please choose one or more options from the horizontal checkboxes",
              "responses": [
                {
                  "responseText": "Option a",
                  "responseValue": "a"
                },
                {
                  "responseText": "Option b",
                  "responseValue": "b"
                },
                {
                  "responseText": "Option c",
                  "responseValue": "c"
                },
                {
                  "responseText": "Option d",
                  "responseValue": "d"
                }
              ]
            },
            {
              "questionKey": "Cust_1_8",
              "questionNumber": "8",
              "questionText": "Please check the checkbox if true",
              "responses": [
                {
                  "responseValue": "1"
                }
              ]
            },
            {
              "questionKey": "Cust_1_9",
              "questionNumber": "9",
              "questionText": "Please enter a positive integer",
              "responses": [
                {
                  "responseValue": "3"
                }
              ]
            },
            {
              "questionKey": "Cust_1_10",
              "questionNumber": "10",
              "questionText": "Please enter a positive decimal number",
              "responses": [
                {
                  "responseValue": "60.5"
                }
              ]
            },
            {
              "questionKey": "Cust_1_11",
              "questionNumber": "11",
              "questionText": "Please make a choice from the numbered options",
              "responses": [
                {
                  "responseText": "Setup Help only",
                  "responseValue": "1"
                }
              ]
            },
            {
              "questionKey": "Cust_1_12",
              "questionNumber": "12",
              "questionText": "Please make a choice from the drop-down list box",
              "responses": [
                {
                  "responseText": "Mild",
                  "responseValue": "1"
                }
              ]
            },
            {
              "questionKey": "Cust_1_13",
              "questionNumber": "13",
              "questionText": "Please make a choice using the search box",
              "responses": [
                {
                  "responseText": "English",
                  "responseValue": "en"
                }
              ]
            }
          ],
          "groupNumber": "1",
          "groupTitle": "Common Controls"
        },
        "properties": {
          "assessmentResponses": {
            "description": "List of responses from the patient.<br/><br/>Note: For MDS Assessments, response control types are unsupported.",
            "items": {
              "$ref": "#/components/schemas/AssessmentDetailResponse"
            },
            "type": "array"
          },
          "groupNumber": {
            "description": "The designated letter or number that is associated with the question group.",
            "type": "string"
          },
          "groupTitle": {
            "description": "The title associated with the question group of specified questions of the assessment.",
            "type": "string"
          }
        },
        "title": "AssessmentDetailQuestionGroup",
        "type": "object"
      },
      "AssessmentDetailResponse": {
        "description": "Responses from the patient.<br/><br/>Note: For MDS Assessments, response control types are unsupported.",
        "example": {
          "questionKey": "Cust_1_1",
          "questionNumber": "1",
          "questionText": "Please describe the resident interaction",
          "responses": [
            {
              "responseValue": "Resident was pleasant and attentive"
            }
          ]
        },
        "properties": {
          "questionKey": {
            "description": "The identifier associated with the specified question within the question group of the assessment.",
            "type": "string"
          },
          "questionNumber": {
            "description": "The letter or number associated with a specific question.",
            "type": "string"
          },
          "questionText": {
            "description": "The text description of the question.",
            "type": "string"
          },
          "responses": {
            "description": "List of response(s) entered for that question.",
            "items": {
              "$ref": "#/components/schemas/AssessmentDetailResponseValue"
            },
            "type": "array"
          }
        },
        "title": "AssessmentDetailResponse",
        "type": "object"
      },
      "AssessmentDetailResponseValue": {
        "description": "Response(s) entered for that question.",
        "example": {
          "responseValue": "Resident turned over on request."
        },
        "properties": {
          "responseText": {
            "description": "The text displayed for the response entered for that question, if different from responseValue.<br/><br/>Question types with responseText<br/><ul><li>rad</li><li>radh</li><li>mcs</li><li>mcsh</li><li>hck</li><li>cmb</li><li>pop</li></ul>",
            "type": "string"
          },
          "responseValue": {
            "description": "The value of the response entered for that question.<br/><br/>Response value legend:<br/><table><tr><th>questionType</th><th>Description</th></tr><tr><td>txt</td><td>The value entered in the field.</td></tr><tr><td>dte</td><td>The date format is YYYY-MM-DD.</td></tr><tr><td>dttm</td><td>The date and time are expressed in UTC in the following format: YYYY-MM-DDTHH:MM:SS.sssZ.</td></tr><tr><td>rad</td><td>The value associated to the field.</td></tr><tr><td>radh</td><td>The value associated to the field.</td></tr><tr><td>chk</td><td>The value associated to the field.<ul style='list-style-type:none;'>0 - Option not selected.</li><li>1 - Option Selected.</li></ul></td></tr><tr><td>mcs</td><td>The value associated to the field.</td></tr><tr><td>mcsh</td><td>The value associated to the field.</td></tr><tr><td>num</td><td>The value associated to the field. Returns positive integers only.</td></tr><tr><td>numde</td><td>The value associated to the field. Returns positive integers with decimals only.</td></tr><tr><td>hck</td><td>The user defined value associated to the field.</td></tr><tr><td>cmb</td><td>The user defined value associated to the field.</td></tr><tr><td>pop</td><td>The user defined value associated to the field. Returns two user defined input boxes.\r\n<ol><li>User defined code:1,2.3, ar,en,dc</li><li>User defined text definition.</li></ol></td></tr></table>",
            "type": "string"
          }
        },
        "title": "AssessmentDetailResponseValue",
        "type": "object"
      },
      "AssessmentDetailSection": {
        "description": "Divided areas of the assessment set by the user.",
        "example": {
          "assessmentQuestionGroups": [
            {
              "assessmentResponses": [
                {
                  "questionKey": "Cust_1_1",
                  "questionNumber": "1",
                  "questionText": "Please describe the resident interaction",
                  "responses": [
                    {
                      "responseValue": "Resident was pleasant and attentive"
                    }
                  ]
                },
                {
                  "questionKey": "Cust_1_2",
                  "questionNumber": "2",
                  "questionText": "Please select the date",
                  "responses": [
                    {
                      "responseValue": "2019-01-02"
                    }
                  ]
                },
                {
                  "questionKey": "Cust_1_3",
                  "questionNumber": "3",
                  "questionText": "Please select the date and time",
                  "responses": [
                    {
                      "responseValue": "2019-01-03T02:03:00.000Z"
                    }
                  ]
                },
                {
                  "questionKey": "Cust_1_4",
                  "questionNumber": "4",
                  "questionText": "Please make a choice from the vertical radio buttons",
                  "responses": [
                    {
                      "responseText": "Option b",
                      "responseValue": "b"
                    }
                  ]
                },
                {
                  "questionKey": "Cust_1_5",
                  "questionNumber": "5",
                  "questionText": "Please make a choice from the horizontal radio buttons",
                  "responses": [
                    {
                      "responseText": "Option a",
                      "responseValue": "a"
                    }
                  ]
                },
                {
                  "questionKey": "Cust_1_6",
                  "questionNumber": "6",
                  "questionText": "Please choose one or more options from the vertical checkboxes",
                  "responses": [
                    {
                      "responseText": "Option b",
                      "responseValue": "b"
                    }
                  ]
                },
                {
                  "questionKey": "Cust_1_7",
                  "questionNumber": "7",
                  "questionText": "Please choose one or more options from the horizontal checkboxes",
                  "responses": [
                    {
                      "responseText": "Option a",
                      "responseValue": "a"
                    },
                    {
                      "responseText": "Option b",
                      "responseValue": "b"
                    },
                    {
                      "responseText": "Option c",
                      "responseValue": "c"
                    },
                    {
                      "responseText": "Option d",
                      "responseValue": "d"
                    }
                  ]
                },
                {
                  "questionKey": "Cust_1_8",
                  "questionNumber": "8",
                  "questionText": "Please check the checkbox if true",
                  "responses": [
                    {
                      "responseValue": "1"
                    }
                  ]
                },
                {
                  "questionKey": "Cust_1_9",
                  "questionNumber": "9",
                  "questionText": "Please enter a positive integer",
                  "responses": [
                    {
                      "responseValue": "3"
                    }
                  ]
                },
                {
                  "questionKey": "Cust_1_10",
                  "questionNumber": "10",
                  "questionText": "Please enter a positive decimal number",
                  "responses": [
                    {
                      "responseValue": "60.5"
                    }
                  ]
                },
                {
                  "questionKey": "Cust_1_11",
                  "questionNumber": "11",
                  "questionText": "Please make a choice from the numbered options",
                  "responses": [
                    {
                      "responseText": "Setup Help only",
                      "responseValue": "1"
                    }
                  ]
                },
                {
                  "questionKey": "Cust_1_12",
                  "questionNumber": "12",
                  "questionText": "Please make a choice from the drop-down list box",
                  "responses": [
                    {
                      "responseText": "Mild",
                      "responseValue": "1"
                    }
                  ]
                },
                {
                  "questionKey": "Cust_1_13",
                  "questionNumber": "13",
                  "questionText": "Please make a choice using the search box",
                  "responses": [
                    {
                      "responseText": "English",
                      "responseValue": "en"
                    }
                  ]
                }
              ],
              "groupNumber": "1",
              "groupTitle": "Common Controls"
            }
          ],
          "completedBy": "lwyatte",
          "completedDate": "2018-05-28T22:51:33.000Z",
          "sectionCode": "Cust",
          "sectionStatus": "Signed"
        },
        "properties": {
          "assessmentQuestionGroups": {
            "description": "List of designated groupings associated with specified questions of the assessment .",
            "items": {
              "$ref": "#/components/schemas/AssessmentDetailQuestionGroup"
            },
            "type": "array"
          },
          "completedBy": {
            "description": "The recorded client/user name associated with the completion of documentation of the assessment.",
            "type": "string"
          },
          "completedDate": {
            "description": "Represents the date the documentation was completed for the specified section of the assessment. The date and time are expressed in UTC in the following format YYYY-MM-DDTHH:MM:SS.sssZ.",
            "format": "date-time",
            "type": "string"
          },
          "sectionCode": {
            "description": "The identification number associated with the selected section of the assessment.",
            "type": "string"
          },
          "sectionStatus": {
            "description": "The status of the specified section of the assessment.</br></br>Types:<ul><li>Errors</li><li>In Progress</li><li>Not Applicable</li><li>Signed</li><li>Unedited</li></ul>",
            "type": "string"
          }
        },
        "title": "AssessmentDetailSection",
        "type": "object"
      },
      "AssessmentList": {
        "description": "List of Assessments",
        "example": {
          "data": [
            {
              "assessmentDescription": "Custom Assessment",
              "assessmentId": 1234,
              "assessmentRefDate": "2018-04-27T18:57:33.000Z",
              "assessmentScore": 100,
              "assessmentStatus": "Complete",
              "assessmentTypeDescription": "Discharge",
              "createdBy": "lwyatte",
              "facId": 1,
              "orgUuid": "12345678-AAAA-4444-AAAA-000010000001",
              "templateId": 123,
              "templateVersion": 1
            },
            {
              "assessmentDescription": "System Assessment",
              "assessmentId": 5678,
              "assessmentRefDate": "2018-05-28T18:57:33.000Z",
              "assessmentScore": 100,
              "assessmentStatus": "Complete",
              "assessmentTypeDescription": "Admissions",
              "createdBy": "lwyatte",
              "facId": 1,
              "orgUuid": "12345678-AAAA-4444-AAAA-000010000001",
              "systemTemplateId": 3,
              "templateId": 1,
              "templateVersion": 2.3
            }
          ],
          "paging": {
            "hasMore": true,
            "page": 1,
            "pageSize": 2
          }
        },
        "properties": {
          "data": {
            "description": "List of assessments recorded for the patient.",
            "items": {
              "$ref": "#/components/schemas/AssessmentSummary"
            },
            "type": "array"
          },
          "paging": {
            "$ref": "#/components/schemas/PagingResponseByPage"
          }
        },
        "title": "AssessmentList",
        "type": "object"
      },
      "AssessmentSummary": {
        "description": "Assessments recorded for the patient.",
        "example": {
          "assessmentDescription": "Custom Assessment",
          "assessmentId": 1234,
          "assessmentRefDate": "2018-04-27T18:57:33.000Z",
          "assessmentScore": 100,
          "assessmentStatus": "Complete",
          "assessmentTypeDescription": "Discharge",
          "createdBy": "lwyatte",
          "facId": 1,
          "orgUuid": "12345678-AAAA-4444-AAAA-000010000001",
          "templateId": 123,
          "templateVersion": 1
        },
        "properties": {
          "assessmentDescription": {
            "description": "The title of the assessment defined by the end user.",
            "type": "string"
          },
          "assessmentId": {
            "description": "The identification number associated with the assessment.",
            "format": "int32",
            "type": "integer"
          },
          "assessmentRefDate": {
            "description": "The date the assessment is created with the associated assessment identification number. The date and time are expressed in UTC in the following format YYYY-MM-DDTHH:MM:SS.sssZ.",
            "format": "date-time",
            "type": "string"
          },
          "assessmentScore": {
            "description": "The calculated measurement of all question key responses within the assessment to determine the care level progress or decline on a client.<br><br>Note: This field may be blank if not applicable for the specified assessment.",
            "format": "double",
            "type": "number"
          },
          "assessmentStatus": {
            "description": "The overall assessment status to determine documentation progress or completion.</br></br>Types:<ul><li>Complete</li><li>Errors</li><li>In Progress</li><li>Inactivated</li><li>Incomplete</li><li>Modified</li></ul>",
            "type": "string"
          },
          "assessmentTypeDescription": {
            "description": "The possible types associated to the assessment, by the user, to determine assessment completion frequency.</br></br>Types:<ul><li>Admissions</li><li>Comprehensive</li><li>Discharge</li><li>Full Assessment</li><li>Inactivation</li><li>Other</li><li>Quarterly</li><li>Reentry</li></ul>",
            "type": "string"
          },
          "createdBy": {
            "description": "The recorded client/user name associated with the creation of the assessment.",
            "type": "string"
          },
          "facId": {
            "description": "PointClickCare's unique identifier for a facility within the organization.",
            "format": "int32",
            "type": "integer"
          },
          "orgUuid": {
            "description": "PointClickCare's unique identifier for the organization.",
            "type": "string"
          },
          "systemTemplateId": {
            "description": "Unique template identifier for system-defined assessment.",
            "format": "int32",
            "type": "integer"
          },
          "templateId": {
            "description": "Unique template identifier associated with custom assessment.",
            "format": "int32",
            "type": "integer"
          },
          "templateVersion": {
            "description": "Identifies the template version of all assessments, this includes both system-defined and custom assessments.",
            "format": "double",
            "type": "number"
          }
        },
        "title": "AssessmentSummary",
        "type": "object"
      },
      "Bed": {
        "description": "",
        "example": {
          "description": "A",
          "id": 1,
          "isCompanionBed": true,
          "isMedicaidCertified": false,
          "isMedicareCertified": true,
          "isOccupied": true
        },
        "properties": {
          "description": {
            "description": "PointClickCare's description for a bed within a facility.",
            "type": "string"
          },
          "id": {
            "description": "PointClickCare's unique identifier for a bed within a facility.",
            "format": "int32",
            "type": "integer"
          },
          "isCompanionBed": {
            "description": "Indicate if the bed has been paid by (or expected to be paid by) the resident occupying the primary bed in the same room.Return TRUE if the bed is not occupied and the occupant from the primary bed is expected to pay for this bed OR the occupant does not require to pay for the bed for facility which has enforced room weight.Otherwise FALSE.",
            "type": "boolean"
          },
          "isMedicaidCertified": {
            "description": "Indicate if the bed has been certified with Medicaid.Return TRUE if the bed is medicaid certified.Otherwise FALSE.",
            "type": "boolean"
          },
          "isMedicareCertified": {
            "description": "Indicate if the bed has been certified with Medicare.Return TRUE if the bed is medicare certified.Otherwise FALSE.",
            "type": "boolean"
          },
          "isOccupied": {
            "description": "Indicate if the bed has been occupied.Return TRUE if the bed is occupied.Otherwise FALSE.",
            "type": "boolean"
          }
        },
        "title": "Bed",
        "type": "object"
      },
      "BedsAvailability": {
        "description": "Available Beds.",
        "example": {
          "admissionDate": "2018-07-30",
          "availableBeds": 100,
          "facId": 50,
          "medicaidCertifiedBeds": 50,
          "medicareCertifiedBeds": 30,
          "otherBeds": 20
        },
        "properties": {
          "admissionDate": {
            "description": "The date on which admission is planned or sought.",
            "format": "date",
            "type": "string"
          },
          "availableBeds": {
            "description": "Number of available beds.",
            "format": "int32",
            "type": "integer"
          },
          "facId": {
            "description": "PointClickCare's unique identifier for a facility within the organization.",
            "format": "int32",
            "type": "integer"
          },
          "medicaidCertifiedBeds": {
            "description": "Number of Medicaid Certified Beds among the available beds.",
            "format": "int32",
            "type": "integer"
          },
          "medicareCertifiedBeds": {
            "description": "Number of Medicare Certified Beds among the available beds.",
            "format": "int32",
            "type": "integer"
          },
          "otherBeds": {
            "description": "Number of other Beds among the available beds, which are neither Medicare Certified, nor Medicaid Certified.",
            "format": "int32",
            "type": "integer"
          }
        },
        "title": "BedsAvailability",
        "type": "object"
      },
      "CensusActionCodePickListItem": {
        "description": "",
        "example": {
          "actionCode": "AA",
          "actionType": "Actual Admit",
          "id": 1,
          "standardActionType": "Admission"
        },
        "properties": {
          "actionCode": {
            "description": "Represents the short code associated to the action type for the ADT record. PointClickCare allows facilities to configure a value for the action code up to 5 characters long.",
            "type": "string"
          },
          "actionType": {
            "description": "Represents the action type associated to the ADT record. The action types are configurable at a facility level in PointClickCare. This means that the value of this field may vary from facility to facility. Each facility defined action type is however mapped to a standard action type.",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the pick list value for action.",
            "format": "int32",
            "type": "integer"
          },
          "standardActionType": {
            "description": "Represents the standard action type associated to the action type. PointClickCare allows facilities to define custom action types. Each custom action type is mapped to a standard action type. Possible values for this field are:<ul><li>Admission</li><li>Death</li><li>Discharge</li><li>Internal Transfer</li><li>Leave</li><li>Return From Leave</li><li>Room Reserve</li></ul>",
            "type": "string"
          }
        },
        "title": "CensusActionCodePickListItem",
        "type": "object"
      },
      "ChildOid": {
        "description": "Child OIDs.",
        "example": {
          "facilityname": "FACILITY_1",
          "facId": 1,
          "facilityOid": "2.16.840.1.113883.3.6448.5.2597352509.4.1",
          "patientIdOid": "2.16.840.1.113883.3.6448.5.2597352509.4.1.20",
          "medicalRecordNumberOid": "2.16.840.1.113883.3.6448.5.2597352509.4.1.21"
        },
        "properties": {
          "facilityName": {
            "description": "The name of the facility.",
            "type": "string"
          },
          "facId": {
            "description": "PointClickCare's unique identifier for a facility within the organization.",
            "type": "integer"
          },
          "facilityOid": {
            "description": "The unique oid for the facility.",
            "type": "string"
          },
          "patientIdOid": {
            "description": "The patient id oid for the facility oid.",
            "type": "string"
          },
          "medicalRecordNumberOid": {
            "description": "The medical record number oid for the facility oid.",
            "type": "string"
          }
        },
        "title": "ChildOid",
        "type": "object"
      },
      "CitizenshipPickListItem": {
        "description": "",
        "example": {
          "description": "Canadian",
          "id": 1
        },
        "properties": {
          "description": {
            "description": "Description of the pick list value for citizenship.",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the pick list value for citizenship.",
            "format": "int32",
            "type": "integer"
          }
        },
        "title": "CitizenshipPickListItem",
        "type": "object"
      },
      "CodeableDoseUOM": {
        "description": "Dose unit of measure codeable concept",
        "properties": {
          "coding": {
            "description": "List of dose unit of measure codeable concept array, representing system, code and display",
            "items": {
              "$ref": "#/components/schemas/CodeableDoseCoding",
              "type": "array"
            }
          }
        },
        "title": "CodeableDoseUOM",
        "type": "object"
      },
      "CodeableDoseCoding": {
        "description": "List of dose unit of measure codeable concept array, representing system, code and display",
        "properties": {
          "system": {
            "description": "Represents the coding system for the dose unit of measure codeable concept. Possible  values are URL. Supported systems are:<ul> <li>PointClickCare: https://pointclickcare.com/system/unit-of-measure</li> <li>NCIT: https://ncit.nci.nih.gov</li> <li>UCUM: https://ucum.org/ucum</li></ul>",
            "type": "string"
          },
          "code": {
            "description": "Specific code for the dose unit of measure codeable concept.",
            "type": "string"
          },
          "display": {
            "description": "Text description of dose unit of measure codeable concept.",
            "type": "string"
          }
        },
        "title": "CodeableDoseUOM",
        "type": "object"
      },
      "CommonAssessmentTemplate": {
        "description": "Assessment Template",
        "example": {
          "assessmentDescription": "Custom Assessment",
          "facId": 1,
          "orgUuid": "12345678-AAAA-4444-AAAA-000010000001",
          "sections": [
            {
              "assessmentQuestionGroups": [
                {
                  "groupNumber": "A1",
                  "groupText": "Group 1",
                  "groupTitle": "Mental Status Evaluation",
                  "questions": [
                    {
                      "questionKey": "Cust_1_A1_1",
                      "questionNumber": "1",
                      "questionText": "BED MOBILITY - How resident moves to and from lying position",
                      "questionTitle": "Resident Mobility",
                      "questionType": "mcs",
                      "required": false,
                      "responseOptions": [
                        {
                          "responseText": "Very Mobile",
                          "responseValue": "1"
                        },
                        {
                          "responseText": "Somewhat Mobile",
                          "responseValue": "2"
                        }
                      ]
                    },
                    {
                      "length": 100,
                      "questionKey": "Cust_1_A1_2",
                      "questionNumber": "2",
                      "questionText": "Verbal Descriptor Scale",
                      "questionTitle": "Resident Verbal",
                      "questionType": "txt",
                      "range": "text,sp(100)",
                      "required": true
                    }
                  ]
                }
              ],
              "sectionCode": "Cust_1",
              "sectionDescription": "DIAGNOSIS",
              "sectionSequence": 1
            },
            {
              "assessmentQuestionGroups": [
                {
                  "groupNumber": "Ba",
                  "groupText": "Group 1",
                  "groupTitle": "ACTIVITY PARTICIPATION",
                  "questions": [
                    {
                      "questionKey": "Cust_2_Ba_1",
                      "questionNumber": "1",
                      "questionText": "Participation Times",
                      "questionTitle": "Participation Times",
                      "questionType": "chk",
                      "required": true,
                      "responseOptions": [
                        {
                          "responseText": "Morning",
                          "responseValue": "1"
                        },
                        {
                          "responseText": "Afternoon",
                          "responseValue": "2"
                        }
                      ]
                    },
                    {
                      "questionKey": "Cust_2_Ba_2",
                      "questionNumber": "2",
                      "questionText": "Time Involved in Activities",
                      "questionTitle": "Activities",
                      "questionType": "rad",
                      "required": true,
                      "responseOptions": [
                        {
                          "responseText": "Most - more than 2/3 of the time",
                          "responseValue": "1"
                        },
                        {
                          "responseText": "Some - from 1/3 to 2/3 of the time",
                          "responseValue": "2"
                        }
                      ]
                    }
                  ]
                }
              ],
              "sectionCode": "Cust_2",
              "sectionDescription": "DEMOGRAPHIC",
              "sectionSequence": 1
            }
          ],
          "templateId": 1,
          "templateVersion": 1
        },
        "properties": {
          "assessmentDescription": {
            "description": "The description of the assessment template.",
            "type": "string"
          },
          "facId": {
            "description": "PointClickCare's unique identifier for a facility within the organization.",
            "format": "int32",
            "type": "integer"
          },
          "orgUuid": {
            "description": "PointClickCare's unique identifier for the organization.",
            "type": "string"
          },
          "sections": {
            "description": "List of divided areas of the assessment set by the user.",
            "items": {
              "$ref": "#/components/schemas/CommonAssessmentTemplateSection"
            },
            "type": "array"
          },
          "templateId": {
            "description": "The unique template id number associated with an assessment template.",
            "format": "int32",
            "type": "integer"
          },
          "templateVersion": {
            "description": "The specific version of the assessment template.",
            "format": "double",
            "type": "number"
          }
        },
        "title": "CommonAssessmentTemplate",
        "type": "object"
      },
      "CommonAssessmentTemplateQuestion": {
        "description": "questions either selected through the standard question library or custom question entered by the user.",
        "example": {
          "questionKey": "Cust_1_A1_1",
          "questionNumber": "1",
          "questionText": "BED MOBILITY - How resident moves to and from lying position",
          "questionTitle": "Resident Mobility",
          "questionType": "mcs",
          "required": false,
          "responseOptions": [
            {
              "responseText": "Very Mobile",
              "responseValue": "1"
            },
            {
              "responseText": "Somewhat Mobile",
              "responseValue": "2"
            }
          ]
        },
        "properties": {
          "length": {
            "description": "The maximum length of a response for this question.",
            "format": "int32",
            "type": "integer"
          },
          "questionKey": {
            "description": "The identifier associated with the specified question within the question group of the assessment.",
            "type": "string"
          },
          "questionNumber": {
            "description": "The letter or number associated with a specific question.",
            "type": "string"
          },
          "questionText": {
            "description": "The user defined text associated with the specific question.",
            "type": "string"
          },
          "questionTitle": {
            "description": "The title associated with the question.",
            "type": "string"
          },
          "questionType": {
            "description": "The type of question being returned. <br/><br/>Question type can be any of the following:<br/><table><tr><th>questionType</th><th>Description</th></tr><tr><td>txt</td><td>Text Box Question.</td></tr><tr><td>dte</td><td>Question with Date Controls.</td></tr><tr><td>dttm</td><td>Question with Date/Time Controls</td></tr><tr><td>rad</td><td>Multiple Choice Question with Vertical Radio Buttons.</td></tr><tr><td>radh</td><td>Multiple Choice Question with Horizontal Radio Buttons.</td></tr><tr><td>chk</td><td>Yes/No Question with a Check Box.<tr><td>mcs</td><td>Multiple Select Question with Vertical Checkboxes.</td></tr><tr><td>mcsh</td><td>Multiple Select Question with Horizontal Checkboxes.</td></tr><tr><td>num</td><td>Question with positive integer values only.</td></tr><tr><td>numde</td><td>Question with positive integer values with decimals only.</td></tr><tr><td>hck</td><td>Multiple Choice Question with Numbered response. Used in conjunction with a legend that would have a numeric value and associated description of the choices. .</td></tr><tr><td>cmb</td><td>Multiple Choice Question with user defined list box.</td></tr><tr><td>pop</td><td>Question with search functions.</td></tr></table>",
            "type": "string"
          },
          "range": {
            "description": "The range associated to the assessment template.",
            "type": "string"
          },
          "required": {
            "description": "A flag designating if a response is required for this question.",
            "type": "boolean"
          },
          "responseOptions": {
            "description": "List of possible responses for this question.",
            "items": {
              "$ref": "#/components/schemas/CommonAssessmentTemplateResponseOption"
            },
            "type": "array"
          }
        },
        "title": "CommonAssessmentTemplateQuestion",
        "type": "object"
      },
      "CommonAssessmentTemplateQuestionGroup": {
        "description": "designated groupings for assessment questions as assigned by the user.",
        "example": {
          "groupNumber": "A",
          "groupTitle": "Signs & Symptoms Identified"
        },
        "properties": {
          "groupNumber": {
            "description": "The designated letter or number that is associated with the question group.",
            "type": "string"
          },
          "groupText": {
            "description": "Optional text describing the question group, may be left blank by the user.",
            "type": "string"
          },
          "groupTitle": {
            "description": "The title associated with the question group as assigned by the user.",
            "type": "string"
          },
          "questions": {
            "description": "List of questions either selected through the standard question library or custom question entered by the user.",
            "items": {
              "$ref": "#/components/schemas/CommonAssessmentTemplateQuestion"
            },
            "type": "array"
          }
        },
        "title": "CommonAssessmentTemplateQuestionGroup",
        "type": "object"
      },
      "CommonAssessmentTemplateResponseOption": {
        "description": "possible responses for this question.",
        "example": {
          "responseText": "Very Mobile",
          "responseValue": "1"
        },
        "properties": {
          "responseText": {
            "description": "The text associated to the response options.",
            "type": "string"
          },
          "responseValue": {
            "description": "The value associated to the response option.",
            "type": "string"
          }
        },
        "title": "CommonAssessmentTemplateResponseOption",
        "type": "object"
      },
      "CommonAssessmentTemplateSection": {
        "description": "divided areas of the assessment set by the user.",
        "example": {
          "assessmentQuestionGroups": [
            {
              "groupNumber": "Ba",
              "groupText": "Group 1",
              "groupTitle": "ACTIVITY PARTICIPATION",
              "questions": [
                {
                  "questionKey": "Cust_2_Ba_1",
                  "questionNumber": "1",
                  "questionText": "Participation Times",
                  "questionTitle": "Participation Times",
                  "questionType": "chk",
                  "required": true,
                  "responseOptions": [
                    {
                      "responseText": "Morning",
                      "responseValue": "1"
                    },
                    {
                      "responseText": "Afternoon",
                      "responseValue": "2"
                    }
                  ]
                },
                {
                  "questionKey": "Cust_2_Ba_2",
                  "questionNumber": "2",
                  "questionText": "Time Involved in Activities",
                  "questionTitle": "Activities",
                  "questionType": "rad",
                  "required": true,
                  "responseOptions": [
                    {
                      "responseText": "Most - more than 2/3 of the time",
                      "responseValue": "1"
                    },
                    {
                      "responseText": "Some - from 1/3 to 2/3 of the time",
                      "responseValue": "2"
                    }
                  ]
                }
              ]
            }
          ],
          "sectionCode": "Cust_2",
          "sectionDescription": "DEMOGRAPHIC",
          "sectionSequence": 1
        },
        "properties": {
          "assessmentQuestionGroups": {
            "description": "List of designated groupings for assessment questions as assigned by the user.",
            "items": {
              "$ref": "#/components/schemas/CommonAssessmentTemplateQuestionGroup"
            },
            "type": "array"
          },
          "sectionCode": {
            "description": "User defined identification number associated with the selected section of the assessment.",
            "type": "string"
          },
          "sectionDescription": {
            "description": "The title of the selected section of the assessment.<br><br>Note: sectionDescription is an optional field and can be blank.",
            "type": "string"
          },
          "sectionSequence": {
            "description": "The viewing order of the selected section of the assessment.<br><br>Note: sectionSequence is blank for an assessment template containing a single section.",
            "format": "int32",
            "type": "integer"
          }
        },
        "title": "CommonAssessmentTemplateSection",
        "type": "object"
      },
      "CommonPickList": {
        "description": "Pick List Information",
        "example": {
          "elements": [
            {
              "description": "Skilled Stay",
              "id": 1,
              "metadata": {
                "type": "Stay"
              }
            },
            {
              "description": "ST",
              "id": 2,
              "metadata": {
                "type": "Therapy"
              }
            }
          ],
          "facId": 1,
          "name": "Authorization Type",
          "orgUuid": "12345678-AAAA-4444-AAAA-000010000001",
          "paging": {
            "hasMore": false,
            "page": 1,
            "pageSize": 50
          },
          "pickListId": 1
        },
        "properties": {
          "elements": {
            "description": "List of values configured for the pick list by the facility. Values that can be selected for a pick list are configurable at a facility level in PointClickCare.",
            "items": {
              "$ref": "#/components/schemas/CommonPickListItem"
            },
            "type": "array"
          },
          "facId": {
            "description": "PointClickCare's unique identifier for a facility within the organization.",
            "format": "int32",
            "type": "integer"
          },
          "name": {
            "description": "The name of the facility configured pick list.",
            "type": "string"
          },
          "orgUuid": {
            "description": "PointClickCare's unique identifier for the organization.",
            "type": "string"
          },
          "paging": {
            "$ref": "#/components/schemas/PagingResponseByPage"
          },
          "pickListId": {
            "description": "A unique identifier for a given pick list.",
            "format": "int32",
            "type": "integer"
          }
        },
        "title": "CommonPickList",
        "type": "object"
      },
      "CommonPickListItem": {
        "description": "Values configured for the pick list by the facility. Values that can be selected for a pick list are configurable at a facility level in PointClickCare.",
        "example": {
          "description": "Auth type 1",
          "id": 1,
          "metadata": {
            "type": "type"
          }
        },
        "properties": {
          "description": {
            "description": "The value for the given pick list element.",
            "type": "string"
          },
          "id": {
            "description": "Identifier for the given pick list element.",
            "format": "int32",
            "type": "integer"
          },
          "metadata": {
            "$ref": "#/components/schemas/CommonPickListItemMetadata"
          }
        },
        "title": "CommonPickListItem",
        "type": "object"
      },
      "CommonPickListItemMetadata": {
        "description": "The additional data for a particular pick list element.",
        "example": {
          "type": "type"
        },
        "properties": {
          "allowAsPrimary": {
            "description": "A boolean value which represents if the primary physicians are allowed as Medical Professionals.This is only available for following pick lists:<ul><li>Medical Professional Type</li><ul>",
            "type": "boolean"
          },
          "allowToServicePlan": {
            "description": "A boolean value which represents if its allowed to add care plan.This is only available for following pick lists: <ul><li>Department</li><ul>",
            "type": "boolean"
          },
          "averageCareHoursPerShift": {
            "description": "The average number of hours for a staff per shift.This is only available for following pick lists:<ul><li>Staff Position</li><ul>",
            "type": "string"
          },
          "displayDocumentationAdmin": {
            "description": "A boolean value which represents if it's allowed to upload Admin Documentation.This is only available for following pick lists:<ul><li>Upload Category</li><ul>",
            "type": "boolean"
          },
          "displayDocumentationAdminCollections": {
            "description": "A boolean value which represents if it's allowed to upload Admin Collections Documentation.This is only available for following pick lists:<ul><li>Upload Category</li><ul>",
            "type": "boolean"
          },
          "displayDocumentationCRM": {
            "description": "A boolean value which represents if it's allowed to upload CRM Documentation.This is only available for following pick lists:<ul><li>Upload Category</li><ul>",
            "type": "boolean"
          },
          "displayDocumentationClinical": {
            "description": "A boolean value which represents if it's allowed to upload Clinical Documentation.This is only available for following pick lists:<ul><li>Upload Category</li><ul>",
            "type": "boolean"
          },
          "displayDocumentationIRM": {
            "description": "A boolean value which represents if it's allowed to upload IRM Documentation.This is only available for following pick lists:<ul><li>Upload Category</li><ul>",
            "type": "boolean"
          },
          "externalFacilityType": {
            "description": "The Type of the external facility.This is only available for following pick lists:<ul><li>To/From Type</li><ul>",
            "type": "string"
          },
          "includeInRates": {
            "description": "A boolean value which represents if the rates are included.This is only available for following pick lists:<ul><li>To/From Type</li><ul>",
            "type": "boolean"
          },
          "isGuarantor": {
            "description": "A boolean value which indicates whether the Contact Type is configured as the responsible party for billing at the facility.This is only available for following pick lists:<ul><li>Contact Type</li><ul>",
            "type": "boolean"
          },
          "isSurveyContact": {
            "description": "A boolean value which indicates whether the Contact Type is configured as the Customer Experience Survey Contact.This is only available for following pick lists:<ul><li>Contact Type</li><ul>",
            "type": "boolean"
          },
          "isoCode": {
            "description": "The ISO Code representing the selected language.This is only available for following pick lists:<ul><li>Language</li><ul>",
            "type": "string"
          },
          "mds30Item": {
            "description": "The MDS 3.0 representation of the given Picklist.This is only available for following pick lists:<ul><li>Ethnicity</li><li>Race</li><li>Marital Status</li><ul>",
            "type": "string"
          },
          "messageMappingCode": {
            "description": "The code used to represent the mapping for the messaging.This is only available for following pick lists:<ul><li>Ethnicity</li><li>Race</li><li>Marital Status</li><li>Religion</li><ul>",
            "type": "string"
          },
          "requiredOnClientEntryForm": {
            "description": "A boolean value which represents if its required on entry form.This is only available for following pick lists:<ul><li>External Facility Type</li><ul>",
            "type": "boolean"
          },
          "requiresUserNationalProviderId": {
            "description": "A boolean value which represents if the NPI number is required.This is only available for following pick lists:<ul><li>Medical Professional Type</li><ul>",
            "type": "boolean"
          },
          "shortDescription": {
            "description": "The code representing the staff position.This is only available for following pick lists:<ul><li>Staff Position</li><ul>",
            "type": "string"
          },
          "showOnAdmissionRecord": {
            "description": "A string value which represents if its allowed to show updates on patient record.This is only available for following pick lists:<ul><li>External Facility Type</li><ul>",
            "type": "string"
          },
          "showOnCensus": {
            "description": "A boolean value which represents if its showed on census.This is only available for following pick lists:<ul><li>External Facility Type</li><ul>",
            "type": "boolean"
          },
          "showOnClientEntryForm": {
            "description": "A boolean value which represents if its allowed to show updates on patient record.This is only available for following pick lists:<ul><li>External Facility Type</li><ul>",
            "type": "boolean"
          },
          "showOnPhysicianOrder": {
            "description": "A boolean value which represents if its showed on physician order.This is only available for following pick lists:<ul><li>External Facility Type</li><ul>",
            "type": "boolean"
          },
          "standardContactType": {
            "description": "The type of contact being added.This is only available for following pick lists:<ul><li>Contact Type</li><ul>",
            "type": "string"
          },
          "type": {
            "description": "The type of Authorization.This is only available for following pick lists: <ul><li>Authorization Type</li><ul>",
            "type": "string"
          },
          "uniqueRelation": {
            "description": "A boolean value which represents if its a unique professional relationship.This is only available for following pick lists:<ul><li>Professional Relation</li><ul>",
            "type": "boolean"
          },
          "retired": {
            "description": "A boolean value to show if the item has been retired.  This is only available for following pick lists: <ul><li>Progress Notes</li><li>Order Types</li><ul>",
            "type": "boolean"
          }
        },
        "title": "CommonPickListItemMetadata",
        "type": "object"
      },
      "CommonPickListType": {
        "description": "Facility configured values.<br/><br/>PointClickCare provides the ability for facilities to create custom pick lists for common sets of reference data. They are used to show a list of items on the UI controls that the user can 'pick' from when entering data. For example, a facility is able to customize a marital status pick list such that when creating a patient the user may only pick from a list of approved values. The pick list values themselves are free-form text fields and at this time are not locale specific and case sensitivity is not important. There is no meaning associated with the ordering of the pick list values.",
        "example": {
          "description": "List of citizenship options for a facility within an organization.",
          "facId": 1,
          "name": "Citizenship",
          "orgUuid": "12345678-AAAA-4444-AAAA-000010000004",
          "pickListId": 1
        },
        "properties": {
          "description": {
            "description": "Additional information for the facility configured pick list.",
            "type": "string"
          },
          "facId": {
            "description": "PointClickCare's unique identifier for a facility within the organization.",
            "format": "int32",
            "type": "integer"
          },
          "name": {
            "description": "The name of the facility configured pick list.",
            "type": "string"
          },
          "orgUuid": {
            "description": "PointClickCare's unique identifier for the organization.",
            "type": "string"
          },
          "pickListId": {
            "description": "A unique identifier for a given pick list.",
            "format": "int32",
            "type": "integer"
          }
        },
        "title": "CommonPickListType",
        "type": "object"
      },
      "CommonPickListTypes": {
        "description": "List of pick lists",
        "example": {
          "data": [
            {
              "description": "List of citizenship options for a facility within an organization.",
              "facId": 1,
              "name": "Citizenship",
              "orgUuid": "12345678-AAAA-4444-AAAA-000010000004",
              "pickListId": 1
            },
            {
              "description": "List of authorization request status options for a facility within an organization.",
              "facId": 1,
              "name": "Authorization Request Status",
              "orgUuid": "12345678-AAAA-4444-AAAA-000010000004",
              "pickListId": 2
            },
            {
              "description": "List of contact relationship options for a facility within an organization.",
              "facId": 1,
              "name": "Contact Relationships",
              "orgUuid": "12345678-AAAA-4444-AAAA-000010000004",
              "pickListId": 3
            },
            {
              "description": "List of education options for a facility within an organization.",
              "facId": 1,
              "name": "Education",
              "orgUuid": "12345678-AAAA-4444-AAAA-000010000004",
              "pickListId": 4
            },
            {
              "description": "List of facility reporting group options for a facility within an organization.",
              "facId": 1,
              "name": "Facility Reporting Group",
              "orgUuid": "12345678-AAAA-4444-AAAA-000010000004",
              "pickListId": 5
            },
            {
              "description": "List of religion options for a facility within an organization.",
              "facId": 1,
              "name": "Religion",
              "orgUuid": "12345678-AAAA-4444-AAAA-000010000004",
              "pickListId": 6
            },
            {
              "description": "List of prefix options for a facility within an organization.",
              "facId": 1,
              "name": "Prefix",
              "orgUuid": "12345678-AAAA-4444-AAAA-000010000004",
              "pickListId": 7
            },
            {
              "description": "List of suffix options for a facility within an organization.",
              "facId": 1,
              "name": "Suffix",
              "orgUuid": "12345678-AAAA-4444-AAAA-000010000004",
              "pickListId": 8
            },
            {
              "description": "List of insurance contact types for a facility within an organization.",
              "facId": 1,
              "name": "Insurance Contact Type",
              "orgUuid": "12345678-AAAA-4444-AAAA-000010000004",
              "pickListId": 9
            },
            {
              "description": "List of insurance plan types for a facility within an organization.",
              "facId": 1,
              "name": "Insurance Plan Type",
              "orgUuid": "12345678-AAAA-4444-AAAA-000010000004",
              "pickListId": 10
            },
            {
              "description": "List of professional contact types for a facility within an organization.",
              "facId": 1,
              "name": "Professional Contact Type",
              "orgUuid": "12345678-AAAA-4444-AAAA-000010000004",
              "pickListId": 11
            },
            {
              "description": "List of non-billable services for a facility within an organization.",
              "facId": 1,
              "name": "Non-Billable Services",
              "orgUuid": "12345678-AAAA-4444-AAAA-000010000004",
              "pickListId": 12
            },
            {
              "description": "List of authorization types for a facility within an organization.",
              "facId": 1,
              "name": "Authorization Type",
              "orgUuid": "12345678-AAAA-4444-AAAA-000010000004",
              "pickListId": 13
            },
            {
              "description": "List of cash receipt types for a facility within an organization.",
              "facId": 1,
              "name": "Cash Receipt Type",
              "orgUuid": "12345678-AAAA-4444-AAAA-000010000004",
              "pickListId": 14
            },
            {
              "description": "List of contact types for a facility within an organization.",
              "facId": 1,
              "name": "Contact Type",
              "orgUuid": "12345678-AAAA-4444-AAAA-000010000004",
              "pickListId": 15
            },
            {
              "description": "List of department options for a facility within an organization.",
              "facId": 1,
              "name": "Department",
              "orgUuid": "12345678-AAAA-4444-AAAA-000010000004",
              "pickListId": 16
            },
            {
              "description": "List of ethnicities for a facility within an organization.",
              "facId": 1,
              "name": "Ethnicity",
              "orgUuid": "12345678-AAAA-4444-AAAA-000010000004",
              "pickListId": 17
            },
            {
              "description": "List of external facility types for a facility within an organization.",
              "facId": 1,
              "name": "External Facility Type",
              "orgUuid": "12345678-AAAA-4444-AAAA-000010000004",
              "pickListId": 18
            },
            {
              "description": "List of languages for a facility within an organization.",
              "facId": 1,
              "name": "Language",
              "orgUuid": "12345678-AAAA-4444-AAAA-000010000004",
              "pickListId": 19
            },
            {
              "description": "List of marital statuses for a facility within an organization.",
              "facId": 1,
              "name": "Marital Status",
              "orgUuid": "12345678-AAAA-4444-AAAA-000010000004",
              "pickListId": 20
            },
            {
              "description": "List of medical professional types for a facility within an organization.",
              "facId": 1,
              "name": "Medical Professional Type",
              "orgUuid": "12345678-AAAA-4444-AAAA-000010000004",
              "pickListId": 21
            },
            {
              "description": "List of professional relation options for a facility within an organization.",
              "facId": 1,
              "name": "Professional Relation",
              "orgUuid": "12345678-AAAA-4444-AAAA-000010000004",
              "pickListId": 22
            },
            {
              "description": "List of race options for a facility within an organization.",
              "facId": 1,
              "name": "Race",
              "orgUuid": "12345678-AAAA-4444-AAAA-000010000004",
              "pickListId": 23
            },
            {
              "description": "List of staff position options for a facility within an organization.",
              "facId": 1,
              "name": "Staff Position",
              "orgUuid": "12345678-AAAA-4444-AAAA-000010000004",
              "pickListId": 24
            },
            {
              "description": "List of to/from types for a facility within an organization.",
              "facId": 1,
              "name": "To/From Type",
              "orgUuid": "12345678-AAAA-4444-AAAA-000010000004",
              "pickListId": 25
            },
            {
              "description": "List of disposition options for a facility within an organization.",
              "facId": 1,
              "name": "Disposition",
              "orgUuid": "12345678-AAAA-4444-AAAA-000010000004",
              "pickListId": 26
            },
            {
              "description": "List of upload categories options for a facility within an organization.",
              "facId": 1,
              "name": "Upload Category",
              "orgUuid": "12345678-AAAA-4444-AAAA-000010000004",
              "pickListId": 27
            }
          ],
          "paging": {
            "hasMore": false,
            "page": 1,
            "pageSize": 50
          }
        },
        "properties": {
          "data": {
            "description": "List of facility configured values.<br/><br/>PointClickCare provides the ability for facilities to create custom pick lists for common sets of reference data. They are used to show a list of items on the UI controls that the user can 'pick' from when entering data. For example, a facility is able to customize a marital status pick list such that when creating a patient the user may only pick from a list of approved values. The pick list values themselves are free-form text fields and at this time are not locale specific and case sensitivity is not important. There is no meaning associated with the ordering of the pick list values.",
            "items": {
              "$ref": "#/components/schemas/CommonPickListType"
            },
            "type": "array"
          },
          "paging": {
            "$ref": "#/components/schemas/PagingResponseByPage"
          }
        },
        "title": "CommonPickListTypes",
        "type": "object"
      },
      "Condition": {
        "description": "Retrieve all conditions (problems and diagnosis) for a patient in PointClickCare.",
        "example": {
          "classificationDescription": "During Stay",
          "clinicalStatus": "RESOLVED",
          "comments": "No comments.",
          "conditionId": 503,
          "createdBy": "user1",
          "createdDate": "2016-02-10T03:25:15.000Z",
          "icd10": "H61.23",
          "icd10Description": "IMPACTED CERUMEN, BILATERAL",
          "onsetDate": "2016-03-01",
          "principalDiagnosis": false,
          "rankDescription": "Secondary",
          "resolvedDate": "2016-07-01",
          "revisionBy": "user1",
          "revisionDate": "2016-02-10T03:25:15.000Z",
          "therapy": true
        },
        "properties": {
          "classificationDescription": {
            "description": "Represents the classification for the condition. Classifications are configurable at the facility level in PointClickCare.",
            "type": "string"
          },
          "clinicalStatus": {
            "description": "Represents the clinical status of the condition. Possible values are 'ACTIVE' or 'RESOLVED'.",
            "type": "string"
          },
          "comments": {
            "description": "Free text notes associated to the condition entered by the user. Notes can be added at the time of adding a condition or after a condition record has been added. Line breaks are represented by \\n, carriage returns by \\r and a combination of both is represented by \\r\\n. Backslashes in the text must be represented as \\\\\\\\.",
            "type": "string"
          },
          "conditionId": {
            "description": "Unique identifier for the patient's condition.",
            "format": "int32",
            "type": "integer"
          },
          "conditionCode": {
            "description": "Represents the applicable standard code of a patient's condition.",
            "$ref": "#/components/schemas/ConditionSwitcherooCodeableConcept"
          },
          "createdBy": {
            "description": "Represents the PointClickCare user that created the condition record.",
            "type": "string"
          },
          "createdDate": {
            "description": "The recorded date the condition record was created. The date and time are expressed in UTC in the following format YYYY-MM-DDTHH:MM:SS.sssZ.",
            "format": "date-time",
            "type": "string"
          },
          "icd10": {
            "description": "Represents the ICD10 code for the condition.",
            "type": "string"
          },
          "icd10Description": {
            "description": "Represents the ICD10 code description.",
            "type": "string"
          },
          "onsetDate": {
            "description": "Represents the date when the condition began. The date format is YYYY-MM-DD.",
            "format": "date",
            "type": "string"
          },
          "principalDiagnosis": {
            "description": "If there is mapping in the PointClickCare System for the Principal diagnosis we will return a true response for the Principal Diagnosis and all others will return false",
            "type": "boolean"
          },
          "rankDescription": {
            "description": "Represents the rank assigned to the condition. In PointClickCare, a patient can have only one active primary condition at a time. The ranks assigned to conditions can be created and are configurable at the facility level.",
            "type": "string"
          },
          "resolvedDate": {
            "description": "Represents the date when the condition was resolved. The date format is YYYY-MM-DD.",
            "format": "date",
            "type": "string"
          },
          "revisionBy": {
            "description": "The recorded client/user name who last revised the condition record.",
            "type": "string"
          },
          "revisionDate": {
            "description": "The recorded date the condition record was last revised. The date and time are expressed in UTC in the following format YYYY-MM-DDTHH:MM:SS.sssZ.",
            "format": "date-time",
            "type": "string"
          },
          "therapy": {
            "description": "Represents if the condition is a therapy diagnosis. This field is disabled by default in PointClickCare. Facilities may choose to enable this field. If this field is disabled, this value is not returned. If this field is enabled, possible values that can be returned are 'true' or 'false'.",
            "type": "boolean"
          }
        },
        "title": "Condition",
        "type": "object"
      },
      "ConditionListResponse": {
        "description": "List of conditions.",
        "properties": {
          "data": {
            "description": "List of retrieve all conditions (problems and diagnosis) for a patient in PointClickCare.",
            "items": {
              "$ref": "#/components/schemas/Condition"
            },
            "type": "array"
          },
          "paging": {
            "$ref": "#/components/schemas/PagingResponseByPage"
          }
        },
        "title": "ConditionListResponse",
        "type": "object"
      },
      "ConditionListResponseCanada": {
        "description": "List of conditions Canada.",
        "properties": {
          "data": {
            "description": "List of retrieve all conditions (problems and diagnosis) for a patient in PointClickCare.",
            "items": {
              "$ref": "#/components/schemas/Condition"
            },
            "type": "array"
          },
          "paging": {
            "$ref": "#/components/schemas/PagingResponseByPage"
          }
        },
        "title": "ConditionListResponseCanada",
        "type": "object"
      },
      "ContactRelationshipsPickListItem": {
        "description": "",
        "example": {
          "description": "Child",
          "id": 1
        },
        "properties": {
          "description": {
            "description": "Description of the pick list value for Contact Relationships.",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the pick list value for Contact Relationships.",
            "format": "int32",
            "type": "integer"
          }
        },
        "title": "ContactRelationshipsPickListItem",
        "type": "object"
      },
      "ContactTypesPickListItem": {
        "description": "",
        "example": {
          "description": "A/R Guarantor",
          "guarantor": true,
          "id": 1,
          "isSurveyContact": false,
          "standardContactType": "Agent"
        },
        "properties": {
          "description": {
            "description": "Description of the pick list value for Contact Types.",
            "type": "string"
          },
          "guarantor": {
            "description": "Indicates whether the Contact Type is configured as the responsible party for billing at the facility.",
            "type": "boolean"
          },
          "id": {
            "description": "Unique identifier for the pick list value for Contact Types.",
            "format": "int32",
            "type": "integer"
          },
          "isSurveyContact": {
            "description": "Indicates whether the Contact Type is configured as the Customer Experience Survey Contact.",
            "type": "boolean"
          },
          "standardContactType": {
            "description": "The Standard Contact Type value for Contact Types.",
            "type": "string"
          }
        },
        "title": "ContactTypesPickListItem",
        "type": "object"
      },
      "CoveragePublic": {
        "description": "patientâs payers.",
        "example": {
          "accountDescription": "Hidden Info",
          "accountNumber": "ACCOUNT_54",
          "insuredParty": {
            "address": {
              "addressLine1": "123 Street",
              "addressLine2": "addressLine2",
              "addressLine3": "addressLine3",
              "city": "Montgomery",
              "country": "US",
              "county": "County 1",
              "postalCode": "35201-1234",
              "state": "AL"
            },
            "birthDate": "1940-11-30",
            "firstName": "Ann",
            "gender": "F",
            "lastName": "Smith",
            "middleName": "Lyn",
            "relationship": "Mother",
            "socialBeneficiaryIdentifier": "000456"
          },
          "issuer": {
            "contactName": "John Doe",
            "group": "17171717",
            "groupName": "Medipan",
            "issuerAddress": {
              "addressLine1": "123 Street",
              "addressLine2": "addressLine2",
              "addressLine3": "addressLine3",
              "city": "Montgomery",
              "country": "US",
              "county": "County 1",
              "postalCode": "35201-1234",
              "state": "AL"
            },
            "issuerId": 1234,
            "issuerName": "Issuer Company 1",
            "phone": "444-888-8888",
            "planEffectiveDate": "2016-08-22",
            "planExpirationDate": "2017-08-22",
            "planNumber": "123834",
            "providerNumber": "456789"
          },
          "payPlanType": "Private",
          "payPlanTypeCode": "01",
          "payerCode": "PP",
          "payerCode2": "OH",
          "payerId": 100009,
          "payerName": "Medicare A",
          "payerRank": "Primary",
          "payerType": "Medicare A",
          "pps": true
        },
        "properties": {
          "accountDescription": {
            "description": "Represents the description for the payer’s account.",
            "type": "string"
          },
          "accountNumber": {
            "description": "Represents the account number for the payer.",
            "type": "string"
          },
          "issuer": {
            "$ref": "#/components/schemas/IssuerPublic"
          },
          "insuredParty": {
            "$ref": "#/components/schemas/InsuredPartyPublic"
          },
          "payPlanType": {
            "description": "Represents the description for the pay plan type for the payer, if available. This is only specific to Omni integrated facilities.",
            "type": "string"
          },
          "payPlanTypeCode": {
            "description": "Represents the pay plan type code for the payer, if available. This is only specific to Omni integrated facilities.",
            "type": "string"
          },
          "payerCode": {
            "description": "Represents the payer code associated to the payer. PointClickCare allows up till 3 characters for this field.",
            "type": "string"
          },
          "payerCode2": {
            "description": "Represents the second payer code associated to the payer, if available. This optional field allows the PointClickCare facilities to expand the payer code. For example, if they have multiple locations that use the same payer and they want to use the payer code to identify further.",
            "type": "string"
          },
          "payerId": {
            "description": "PointClickCare’s unique identifier for the payer. The identifier is unique at the organization level.",
            "format": "int32",
            "type": "integer"
          },
          "payerName": {
            "description": "Represents the name of the patient’s payer.",
            "type": "string"
          },
          "payerRank": {
            "description": "Represents the payer’s rank in the payer tree. Possible values are:<br><ul><li>Primary</li><li>Secondary</li><li>Third</li><li>Forth</li><li>Fifth</li><li>Informational</li></ul>",
            "type": "string"
          },
          "payerType": {
            "description": "Represents the payer type for the payer. Possible values are:<br> <ul><li>managedCare</li><li>medicaid</li><li>medicareA</li><li>medicareB</li><li>medicareD</li><li>other</li><li>outpatient</li><li>private</li></ul>",
            "type": "string"
          },
          "pps": {
            "description": "Represents if the payer follows Prospective Payment System (PPS) rules. Possible values are ‘true’ or ‘false’.",
            "type": "boolean"
          }
        },
        "title": "CoveragePublic",
        "type": "object"
      },
      "CoverageSequencePublic": {
        "description": "List of payers.",
        "example": {
          "coverageId": 663861,
          "effectiveFromDateTime": "2017-09-07T04:15:00.000Z",
          "effectiveToDateTime": "2018-01-23T01:17:46.384Z",
          "patientId": 606739,
          "payers": [
            {
              "accountDescription": "GL Account",
              "accountNumber": "110-3322-3322",
              "insuredParty": {
                "address": {
                  "addressLine1": "501 Gifford Place",
                  "addressLine2": "addressLine2",
                  "addressLine3": "addressLine3",
                  "city": "Chowchilla",
                  "country": "United States",
                  "county": "Madera",
                  "postalCode": "93610",
                  "state": "CA"
                },
                "birthDate": "1934-08-30",
                "firstName": "Laronda",
                "gender": "F",
                "lastName": "Irvin",
                "middleName": "Mitch",
                "relationship": "Self",
                "socialBeneficiaryIdentifier": "000-34-1222"
              },
              "issuer": {
                "contactName": "John Doe",
                "group": "17171717",
                "groupName": "Medipan",
                "issuerAddress": {
                  "addressLine1": "102 Hainsworth Place",
                  "addressLine2": "addressLine2",
                  "addressLine3": "addressLine3",
                  "city": "Fargo",
                  "country": "United States",
                  "county": "County 1",
                  "postalCode": "58108-6666",
                  "state": "ND"
                },
                "issuerId": 4015,
                "issuerName": "INSURANCE_COMPANY_4015",
                "phone": "444-888-8888",
                "planEffectiveDate": "2017-09-06",
                "planExpirationDate": "2018-01-01",
                "planNumber": "XA12338193",
                "providerNumber": "650298"
              },
              "payPlanType": "Medicare A",
              "payPlanTypeCode": "04",
              "payerCode": "MCA",
              "payerCode2": "OH",
              "payerId": 4,
              "payerName": "Medicare A",
              "payerRank": "Primary",
              "payerType": "medicareA",
              "pps": true
            },
            {
              "accountDescription": "GL Account 2",
              "accountNumber": "332-03933-2133",
              "insuredParty": {
                "address": {
                  "addressLine1": "501 Gifford Place",
                  "addressLine2": "addressLine2",
                  "addressLine3": "addressLine3",
                  "city": "Chowchilla",
                  "country": "United States",
                  "county": "Madera",
                  "postalCode": "93610",
                  "state": "CA"
                },
                "birthDate": "1934-08-30",
                "firstName": "Laronda",
                "gender": "M",
                "lastName": "Irvin",
                "middleName": "Mitch",
                "relationship": "Self",
                "socialBeneficiaryIdentifier": "000-34-1222"
              },
              "issuer": {
                "contactName": "John Doe",
                "group": "17171717",
                "groupName": "Medipan",
                "issuerAddress": {
                  "addressLine1": "945 Worth Heights",
                  "addressLine2": "addressLine2",
                  "addressLine3": "addressLine3",
                  "city": "Los Angeles",
                  "country": "United States",
                  "county": "County 1",
                  "postalCode": "90060-1111",
                  "state": "CA"
                },
                "issuerId": 1615,
                "issuerName": "INSURANCE_COMPANY_1615",
                "phone": "444-888-8888",
                "planEffectiveDate": "2017-09-06",
                "planExpirationDate": "2018-01-01",
                "planNumber": "XA12338193",
                "providerNumber": "650298"
              },
              "payPlanType": "Medicare A coins from Insurance",
              "payPlanTypeCode": "04",
              "payerCode": "MAI",
              "payerCode2": "OH",
              "payerId": 20,
              "payerName": "Medicare A coins from Insurance",
              "payerRank": "Secondary",
              "payerType": "other",
              "pps": false
            },
            {
              "accountDescription": "Hidden Info",
              "accountNumber": "ACCOUNT_54",
              "insuredParty": {
                "address": {
                  "addressLine1": "123 Street",
                  "addressLine2": "addressLine2",
                  "addressLine3": "addressLine3",
                  "city": "Montgomery",
                  "country": "US",
                  "county": "County 1",
                  "postalCode": "35201-1234",
                  "state": "AL"
                },
                "birthDate": "1940-11-30",
                "firstName": "Ann",
                "gender": "U",
                "lastName": "Smith",
                "middleName": "Lyn",
                "relationship": "Mother",
                "socialBeneficiaryIdentifier": "000456"
              },
              "issuer": {
                "contactName": "John Doe",
                "group": "17171717",
                "groupName": "Medipan",
                "issuerAddress": {
                  "addressLine1": "123 Street",
                  "addressLine2": "addressLine2",
                  "addressLine3": "addressLine3",
                  "city": "Montgomery",
                  "country": "US",
                  "county": "County 1",
                  "postalCode": "35201-1234",
                  "state": "AL"
                },
                "issuerId": 1234,
                "issuerName": "Issuer Company 1",
                "phone": "444-888-8888",
                "planEffectiveDate": "2016-08-22",
                "planExpirationDate": "2017-08-22",
                "planNumber": "123834",
                "providerNumber": "456789"
              },
              "payPlanType": "Private",
              "payPlanTypeCode": "01",
              "payerCode": "PP",
              "payerCode2": "OH",
              "payerId": 1,
              "payerName": "Private Pay (Non-Contract)",
              "payerRank": "Third",
              "payerType": "private",
              "pps": false
            },
            {
              "accountDescription": "GL Account 3",
              "accountNumber": "0392-9992-83",
              "insuredParty": {
                "address": {
                  "addressLine1": "501 Gifford Place",
                  "addressLine2": "addressLine2",
                  "addressLine3": "addressLine3",
                  "city": "Chowchilla",
                  "country": "United States",
                  "county": "Madera",
                  "postalCode": "93610",
                  "state": "CA"
                },
                "birthDate": "1934-08-30",
                "firstName": "Laronda",
                "gender": "F",
                "lastName": "Irvin",
                "middleName": "Mitch",
                "relationship": "Self",
                "socialBeneficiaryIdentifier": "000-34-1222"
              },
              "issuer": {
                "contactName": "John Doe",
                "group": "12314",
                "groupName": "MyInsuranceGroup",
                "issuerAddress": {
                  "addressLine1": "106 Sigismund Heights",
                  "addressLine2": "918 McHard Street",
                  "addressLine3": "addressLine3",
                  "city": "Lexington",
                  "country": "United States",
                  "county": "County 1",
                  "postalCode": "40512",
                  "state": "KY"
                },
                "issuerId": 1476,
                "issuerName": "INSURANCE_COMPANY_1476",
                "phone": "444-888-8888",
                "planEffectiveDate": "2017-09-06",
                "planExpirationDate": "2018-01-01",
                "planNumber": "912322312",
                "providerNumber": "650298"
              },
              "payPlanType": "Managed Care (Part B)",
              "payPlanTypeCode": "8",
              "payerCode": "MB",
              "payerCode2": "OH",
              "payerId": 622,
              "payerName": "Managed Care (Part B)",
              "payerRank": "Fourth",
              "payerType": "managedCare",
              "pps": false
            },
            {
              "accountDescription": "GL Account 4",
              "accountNumber": "93-0003-2315",
              "insuredParty": {
                "address": {
                  "addressLine1": "501 Gifford Place",
                  "addressLine2": "addressLine2",
                  "addressLine3": "addressLine3",
                  "city": "Chowchilla",
                  "country": "United States",
                  "county": "Madera",
                  "postalCode": "93610",
                  "state": "CA"
                },
                "birthDate": "1934-08-30",
                "firstName": "Laronda",
                "gender": "M",
                "lastName": "Irvin",
                "middleName": "Mitch",
                "relationship": "Self",
                "socialBeneficiaryIdentifier": "000-34-1222"
              },
              "issuer": {
                "contactName": "John Doe",
                "group": 385335,
                "groupName": "MyInsuranceGroup2",
                "issuerAddress": {
                  "addressLine1": "66 Glasgow Plaza",
                  "addressLine2": "329 Pennant Avenue",
                  "addressLine3": "addressLine3",
                  "city": "Augusta",
                  "country": "United States",
                  "county": "County 1",
                  "postalCode": "30903-1111",
                  "state": "GA"
                },
                "issuerId": 37,
                "issuerName": "INSURANCE_COMPANY_37",
                "phone": "444-888-8888",
                "planEffectiveDate": "2017-09-06",
                "planExpirationDate": "2018-01-01",
                "planNumber": "0192-1233",
                "providerNumber": "650298"
              },
              "payPlanType": "Medicare B",
              "payPlanTypeCode": "05",
              "payerCode": "MCB",
              "payerCode2": "OH",
              "payerId": 6,
              "payerName": "Medicare B",
              "payerRank": "Fifth",
              "payerType": "medicareB",
              "pps": false
            },
            {
              "accountDescription": "GL Account 5",
              "accountNumber": "38774623",
              "insuredParty": {
                "address": {
                  "addressLine1": "501 Gifford Place",
                  "addressLine2": "addressLine2",
                  "addressLine3": "addressLine3",
                  "city": "Chowchilla",
                  "country": "United States",
                  "county": "Madera",
                  "postalCode": "93610",
                  "state": "CA"
                },
                "birthDate": "1934-08-30",
                "firstName": "Laronda",
                "gender": "U",
                "lastName": "Irvin",
                "middleName": "Mitch",
                "relationship": "Self",
                "socialBeneficiaryIdentifier": "000-34-1222"
              },
              "issuer": {
                "contactName": "John Doe",
                "group": "17171717",
                "groupName": "MyInsuranceGroup2",
                "issuerAddress": {
                  "addressLine1": "106 Sigismund Heights",
                  "addressLine2": "220 Ramsden Avenue",
                  "addressLine3": "addressLine3",
                  "city": "Walnut Creek",
                  "country": "United States",
                  "county": "County 1",
                  "postalCode": "94598",
                  "state": "CA"
                },
                "issuerId": 29,
                "issuerName": "INSURANCE_COMPANY_29",
                "phone": "800-555-5186",
                "planEffectiveDate": "2017-09-06",
                "planExpirationDate": "2017-08-22",
                "planNumber": "123834",
                "providerNumber": "650298"
              },
              "payPlanType": "Kaiser Part B",
              "payPlanTypeCode": "8",
              "payerCode": "KB",
              "payerCode2": "OH",
              "payerId": 623,
              "payerName": "Kaiser Part B",
              "payerRank": "Informational",
              "payerType": "managedCare",
              "pps": false
            }
          ]
        },
        "properties": {
          "coverageId": {
            "description": "Unique identifier for the coverage record.",
            "format": "int32",
            "type": "integer"
          },
          "effectiveFromDateTime": {
            "description": "Represents the date when the coverage came into effect. The date and time format are expressed in UTC in the following format: YYYY-MM-DDTHH:MM:SS.sssZ.",
            "format": "date-time",
            "type": "string"
          },
          "effectiveToDateTime": {
            "description": "Represents the date when the coverage is effective till. The date and time format are expressed in UTC in the following format: YYYY-MM-DDTHH:MM:SS.sssZ.",
            "format": "date-time",
            "type": "string"
          },
          "patientId": {
            "description": "PointClickCare's unique identifier for a patient within the organization.</br></br>When a patient is admitted to a facility within an organization, they are assigned a patientId which is unique to their stay within that facility. If the same patient were to get admitted to another facility within the same organization in the future, they would be assigned a new patientId. The patientId however is unique at the organization level. That is, no two patients across different facilities within the organization will have the same patientId.",
            "format": "int32",
            "type": "integer"
          },
          "payers": {
            "description": "List of patient's payers.",
            "items": {
              "$ref": "#/components/schemas/CoveragePublic"
            },
            "type": "array"
          }
        },
        "title": "CoverageSequencePublic",
        "type": "object"
      },
      "CustomSchedule": {
        "description": "Assessment types with enabled custom scheduling for the given facility.",
        "example": {
          "defaultFrequency": 5,
          "templateAssessId": 41
        },
        "properties": {
          "defaultFrequency": {
            "description": "Default frequency of custom schedules.",
            "format": "int32",
            "type": "integer"
          },
          "templateAssessId": {
            "description": "Assessment template id.",
            "format": "int32",
            "type": "integer"
          }
        },
        "title": "CustomSchedule",
        "type": "object"
      },
      "DRGDPostCoding": {
        "description": "DRG codes.",
        "example": {
          "code": "885",
          "display": "Psychosis",
          "system": "CMS"
        },
        "properties": {
          "code": {
            "description": "Specific DRG for the condition.",
            "type": "string"
          },
          "display": {
            "description": "DRG description for the condition.",
            "type": "string"
          },
          "system": {
            "description": "Type of coding system being used e.g. CMS.",
            "type": "string"
          }
        },
        "title": "DRGDPostCoding",
        "type": "object"
      },
      "DRGPostCodealbleConcept": {
        "description": "Represents the CMS issued Diagnostic Related Group (DRG) for the condition, if available.",
        "example": {
          "coding": [
            {
              "code": "885",
              "display": "Psychosis",
              "system": "CMS"
            }
          ]
        },
        "properties": {
          "coding": {
            "description": "List of dRG codes.",
            "items": {
              "$ref": "#/components/schemas/DRGDPostCoding"
            },
            "type": "array"
          }
        },
        "title": "DRGPostCodealbleConcept",
        "type": "object"
      },
      "DesiredBooking": {
        "description": "Represents the desired booking details for a patient.",
        "example": {
          "dateRequested": "2018-05-03",
          "desiredLocation": 1,
          "desiredMoveDate": "2018-06-03"
        },
        "properties": {
          "dateRequested": {
            "description": "The date the request was made for the patient. The date format is YYYY-MM-DD.",
            "format": "date",
            "type": "string"
          },
          "desiredLocation": {
            "description": "PointClickCare's unique identifier for a bed in a facility. This information is returned as bedId from <a href='document?operation=com.pointclickcare.docs.apidocs.api.facility.operationDefinition.GetFacilityBedListPublicOpDef'>GET FacilityBeds API</a>.",
            "format": "int32",
            "type": "integer"
          },
          "desiredMoveDate": {
            "description": "The requested or sought move-in date for the patient. The date format is YYYY-MM-DD.",
            "format": "date",
            "type": "string"
          }
        },
        "title": "DesiredBooking",
        "type": "object"
      },
      "Destination": {
        "description": "Destination.",
        "example": {
          "accessingEntityId": "90ac9c17-d58a-4f58-8c9b-304efae6cd07",
          "destinationId": "california-state-hie-128902121-13659",
          "destinationName": "California State HIE",
          "integrationDestinationId": 987654,
          "integrationDestinationType": "ADT",
          "isConsentRequired": true,
          "isEnabled": true
        },
        "properties": {
          "accessingEntityId": {
            "description": "Represents the unique identifier for the destination in the vendor's system. This Id is unique at the vendor's system level and is a UUID.",
            "type": "string"
          },
          "destinationId": {
            "description": "Represents the unique identifier for the destination in the vendor's system. This Id is unique at the vendor's system level and is a UUID.",
            "type": "string"
          },
          "destinationName": {
            "description": "Represents the full display name of the destination.",
            "type": "string"
          },
          "integrationDestinationId": {
            "description": "Represents the unique identifier for the destination in PointClickCare's system.",
            "format": "int32",
            "type": "integer"
          },
          "integrationDestinationType": {
            "description": "The Integration Destination type of either ADT or CCD.<br />ADT: Integration engine sending admission, discharge, and transfer messages.<br />CCD: Residents clinical continuity documents.",
            "type": "string"
          },
          "isConsentRequired": {
            "description": "Represents if the Health Information Exchange requires PointClickCare facility to collect consent. If set to 'true', the consent is required to be collected from residents.",
            "type": "boolean"
          },
          "isEnabled": {
            "description": "Represent whether if the destination is marked as enabled or not.",
            "type": "boolean"
          }
        },
        "title": "Destination",
        "type": "object"
      },
      "DestinationActivation": {
        "description": "Active Destinations.",
        "example": {
          "destinationId": "california-state-hie-128902121-13659",
          "destinationName": "California State HIE",
          "facilityOID": "111.22.88.12.9.1",
          "medicalRecordNumberOID": "111.22.88.12.9.1.21",
          "patientIdOID": "111.22.88.12.9.1.20"
        },
        "properties": {
          "accessingEntityId": {
            "description": "PointClickCare's unique identifier for an external organization with a signed data sharing agreement.<br><br>Note: Currently limited to hospitals participating in data exchange with PointClickCare.",
            "format": "uuid",
            "type": "string"
          },
          "destinationId": {
            "description": "Represents the vendor's unique identifier for the integrated destination.",
            "type": "string"
          },
          "destinationName": {
            "description": "Represents the name of the integrated destination.",
            "type": "string"
          },
          "facilityOID": {
            "description": "Represents the facility's OID configured to uniquely identify the facility.",
            "type": "string"
          },
          "medicalRecordNumberOID": {
            "description": "Represents the facility's OID configured to uniquely identify the <i>medicalRecordNumber</i> for patients within the facility. medicalRecordNumber for a patient can be retrieved by calling the GET Patient API.",
            "type": "string"
          },
          "patientIdOID": {
            "description": "Represents the facility's OID configured to uniquely identify the <i>patientId</i> for patients within the facility.",
            "type": "string"
          }
        },
        "title": "DestinationActivation",
        "type": "object"
      },
      "DestinationActivationList": {
        "description": "List of Active Destinations.",
        "example": {
          "data": [
            {
              "destinationId": "california-state-hie-128902121-13659",
              "destinationName": "California State HIE",
              "facilityOID": "111.22.88.12.9.1",
              "medicalRecordNumberOID": "111.22.88.12.9.1.21",
              "patientIdOID": "111.22.88.12.9.1.20"
            },
            {
              "accessingEntityId": "ea3cf812-81dc-47a6-ac8e-c1ab4b33cd48",
              "destinationId": "florida010-state-hie-928002100-13000",
              "destinationName": "Florida State HIE",
              "facilityOID": "112.11.88.12.2.9",
              "medicalRecordNumberOID": "112.11.88.12.2.9.21",
              "patientIdOID": "112.11.88.12.2.9.20"
            }
          ],
          "paging": {
            "hasMore": false,
            "page": 1,
            "pageSize": 50
          }
        },
        "properties": {
          "data": {
            "description": "List of active Destinations.",
            "items": {
              "$ref": "#/components/schemas/DestinationActivation"
            },
            "type": "array"
          },
          "paging": {
            "$ref": "#/components/schemas/PagingResponseByPage"
          }
        },
        "title": "DestinationActivationList",
        "type": "object"
      },
      "DestinationList": {
        "description": "List of destinations.",
        "example": {
          "data": [
            {
              "accessingEntityId": "90ac9c17-d58a-4f58-8c9b-304efae6cd07",
              "destinationId": "california-state-hie-128902121-13659",
              "destinationName": "California State HIE",
              "integrationDestinationId": 987654,
              "integrationDestinationType": "ADT",
              "isConsentRequired": true,
              "isEnabled": true
            },
            {
              "accessingEntityId": "90ac9c17-d58a-4f58-8c9b-304efae6cd07",
              "destinationId": "florida010-state-hie-928002100-13000",
              "destinationName": "Florida State HIE",
              "integrationDestinationId": 876543,
              "integrationDestinationType": "CCD",
              "isConsentRequired": true,
              "isEnabled": true
            }
          ],
          "paging": {
            "hasMore": false,
            "page": 1,
            "pageSize": 50
          }
        },
        "properties": {
          "data": {
            "description": "List of destination.",
            "items": {
              "$ref": "#/components/schemas/Destination"
            },
            "type": "array"
          },
          "paging": {
            "$ref": "#/components/schemas/PagingResponseByPage"
          }
        },
        "title": "DestinationList",
        "type": "object"
      },
      "DiagnosticReportLaboratoryTest": {
        "description": " ",
        "example": {
          "identifier": {
            "code": "2345-7",
            "display": "RBC",
            "system": "http://loinc.org"
          },
          "results": [
            {
              "abnormalityCode": "B",
              "abnormalityComment": "this is a comment",
              "referenceRange": "4.10-5.60",
              "valueQuantity": {
                "unit": "x10E3/uL",
                "value": "5.27"
              }
            }
          ]
        },
        "properties": {
          "identifier": {
            "$ref": "#/components/schemas/DiagnosticReportLaboratoryTestIdentifier"
          },
          "results": {
            "description": "List of test results.<br><br>Note: Up to 20 results accepted.",
            "items": {
              "$ref": "#/components/schemas/DiagnosticReportLaboratoryTestResult"
            },
            "maxItems": 20,
            "minItems": 0,
            "type": "array"
          }
        },
        "title": "DiagnosticReportLaboratoryTest",
        "type": "object"
      },
      "DiagnosticReportLaboratoryTestIdentifier": {
        "description": "Represents the lab test/panel performed.<br><br>Note: If a testset.identifier is being sent, identifier.code, identifier.system, and identifier.display are required. \n",
        "example": {
          "code": "2345-7",
          "display": "RBC",
          "system": "http://loinc.org"
        },
        "properties": {
          "code": {
            "description": "Specific code for the laboratory test.<br><br>Note: Limit of 50 characters<br>Note: If a testset.identifier is being sent, this field is required.<br>Note: Cannot be empty string.",
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "display": {
            "description": "Text description of the laboratory tests. Note: Limit of 500 characters.<br><br>Note: If a testset.identifier is being sent, this field is required.<br>Note: Cannot be empty string.",
            "maxLength": 500,
            "minLength": 0,
            "type": "string"
          },
          "system": {
            "description": "Type of coding system being used. Can be a URL. PCC recommends LOINC for laboratory tests.<br><br>LOINC: <a href=\"http://loinc.org/\" target=\"_blank\">http://loinc.org</a><br><br>Note: Limit of 500 characters<br>Note: If a testset.identifier is being sent, this field is required.<br>Note: Cannot be empty string.",
            "maxLength": 500,
            "minLength": 0,
            "type": "string"
          }
        },
        "title": "DiagnosticReportLaboratoryTestIdentifier",
        "type": "object"
      },
      "DiagnosticReportLaboratoryTestResult": {
        "description": "test results.",
        "example": {
          "abnormalityCode": "B",
          "abnormalityComment": "this is a comment",
          "referenceRange": "4.10-5.60",
          "valueQuantity": {
            "unit": "x10E3/uL",
            "value": "5.27"
          }
        },
        "properties": {
          "abnormalityCode": {
            "description": "Flag for any abnormality observed in lab test.<br><br>Possible values supported in PointClickCare:<ul><li>BLANK- Normal</li><li>U - Significant change up</li><li>D - Significant change down</li><li>B - Better</li><li>W - Worse</li><li>I - Intermediate</li><li>MS - Moderately Susceptible</li><li>R - Resistant</li><li>S - Susceptible</li><li>VS - Very Susceptible</li><li>L - Below Low normal</li><li>H - Above High Normal</li><li>A - Abnormal - non numberic</li><li>LL - Below lower panic limits</li><li>HH - Above upper panic limits</li><li>AA - Very Abnormal - non numberic</li><li>&lt; - Below lowest instrument scale</li><li>&gt; - Above highest instrument scale</li></ul>",
            "type": "string"
          },
          "abnormalityComment": {
            "description": "Free text field to capture any additional abnormality comments associated with the lab test result. <br><br>Note: Limit of 250 characters.",
            "maxLength": 250,
            "minLength": 0,
            "type": "string"
          },
          "referenceRange": {
            "description": "Represents the reference range for the lab test. Note: Limit of 100 characters.<br><br>Note: If a result is being sent, this field is required.<br>Note: Cannot be empty string.",
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "valueQuantity": {
            "$ref": "#/components/schemas/DiagnosticReportLaboratoryValueQuantity"
          }
        },
        "title": "DiagnosticReportLaboratoryTestResult",
        "type": "object"
      },
      "DiagnosticReportLaboratoryValueQuantity": {
        "description": "Represents the unit and value for the observation.<br><br>Note: If a results.valueQuantity is being sent,  valueQuantity.value and valueQuantity.unit are required.",
        "example": {
          "unit": "mg",
          "value": "67.8"
        },
        "properties": {
          "unit": {
            "description": "Represents the unit of the value for the measured amount of the observation. Note: Limit of 60 characters.<br><br>Note: If a results.valueQuantity is being sent, this field is required.<br>Note: Cannot be empty string.",
            "maxLength": 60,
            "minLength": 0,
            "type": "string"
          },
          "value": {
            "description": "Represents the measured amount of the result of the observation. Note: Limit of 200 characters.<br><br>Note: If a results.valueQuantity is being sent, this field is required.<br>Note: Cannot be empty string.",
            "maxLength": 200,
            "minLength": 0,
            "type": "string"
          }
        },
        "title": "DiagnosticReportLaboratoryValueQuantity",
        "type": "object"
      },
      "DiagnosticReportTest": {
        "description": "test results reported.",
        "example": {
          "panelName": "Microbiology",
          "results": [
            {
              "code": "7645-3",
              "codeDescription": "Hemoglobin",
              "codeSystem": "LOINC",
              "comment": "this is a comment",
              "procedureId": "1234",
              "procedureName": "Dohle body",
              "referenceRange": "56-213",
              "resultStatus": "final",
              "valueQuantity": {
                "unitText": "mg",
                "value": "111.6"
              }
            },
            {
              "code": "7645-3",
              "codeDescription": "Hemoglobin",
              "codeSystem": "LOINC",
              "comment": "this is a comment",
              "procedureId": "683",
              "procedureName": "Dohle body",
              "referenceRange": "56-213",
              "resultStatus": "final",
              "valueQuantity": {
                "unitText": "mg",
                "value": "116"
              }
            }
          ]
        },
        "properties": {
          "panelName": {
            "description": "Represents the panel name. This field is only applicable to Laboratory reports.",
            "type": "string"
          },
          "results": {
            "description": "List of test results.",
            "items": {
              "$ref": "#/components/schemas/DiagnosticReportTestResult"
            },
            "type": "array"
          }
        },
        "title": "DiagnosticReportTest",
        "type": "object"
      },
      "DiagnosticReportTestResult": {
        "description": "test results.",
        "example": {
          "code": "7645-3",
          "codeDescription": "Hemoglobin",
          "codeSystem": "LOINC",
          "comment": "this is a comment",
          "procedureId": "1234",
          "procedureName": "Dohle body",
          "referenceRange": "56-213",
          "resultStatus": "final",
          "valueQuantity": {
            "unitText": "mg",
            "value": "111.6"
          }
        },
        "properties": {
          "code": {
            "description": "Represents the code for the observation or procedure.",
            "type": "string"
          },
          "codeDescription": {
            "description": "Represents the description of the code.",
            "type": "string"
          },
          "codeSystem": {
            "description": "Represents the code system. For Laboratory reports, LOINC is used as a the code system. For Radiology reports, CPT is used as the code system.",
            "type": "string"
          },
          "comment": {
            "description": "Notes/comments associated with the observation or procedure. Line breaks are represented by \\n, carriage returns by \\r and and a combination of both is represented by \\r\\n. Backslashes in the text must be represented as \\\\\\\\.",
            "type": "string"
          },
          "observationId": {
            "description": "Represents the unique identifier for the observation. This field is only applicable to Laboratory reports.",
            "type": "string"
          },
          "observationName": {
            "description": "Represents the observation name. This field is only applicable to Laboratory reports.",
            "type": "string"
          },
          "procedureId": {
            "description": "Represents the unique identifier for the procedure. This field is only applicable to Radiology reports.",
            "type": "string"
          },
          "procedureName": {
            "description": "Represents the procedure name. This field is only applicable to Radiology reports.",
            "type": "string"
          },
          "referenceRange": {
            "description": "Represents the reference range for the observation. This field is only applicable to Laboratory reports.",
            "type": "string"
          },
          "resultStatus": {
            "description": "Represents the status of the result for an observation or procedure. Possible values are 'Final' or 'Corrected'.",
            "type": "string"
          },
          "valueQuantity": {
            "$ref": "#/components/schemas/DiagnosticReportValueQuantity"
          }
        },
        "title": "DiagnosticReportTestResult",
        "type": "object"
      },
      "DiagnosticReportValueQuantity": {
        "description": "Represents the unit and value for the observation. This field is only applicable to Laboratory reports. ",
        "example": {
          "unitText": "mg",
          "value": "112.8"
        },
        "properties": {
          "unitText": {
            "description": "Represents the unit of the value for the measured amount of the observation. This field is only applicable to Laboratory reports.",
            "type": "string"
          },
          "value": {
            "description": "Represents the measured amount of the result of the observation. This field is only applicable to Laboratory reports.",
            "type": "string"
          }
        },
        "title": "DiagnosticReportValueQuantity",
        "type": "object"
      },
      "DocumentCategoriesItem": {
        "description": "Document Categories in use by the Facility. The list returned will be based on User permissions in PointClickCare. At least one of the following permissions is required to access this information:<ul><li>user/adminDocumentCategory.write</li><li>user/clinicalDocumentCategory.write</li></ul>",
        "example": {
          "description": "Other",
          "id": 1,
          "isCustom": true
        },
        "properties": {
          "description": {
            "description": "Description of the document category.",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the document category value.",
            "format": "int32",
            "type": "integer"
          },
          "isCustom": {
            "description": "If true, the document category was defined by the Organization. If false, the document category is system defined and common across Organizations.",
            "type": "boolean"
          }
        },
        "title": "DocumentCategoriesItem",
        "type": "object"
      },
      "Drg": {
        "description": "Array of codes for the Diagnosis-Related Group (DRG). Currently, only a single object is returned in the array.",
        "example": {
          "code": 302,
          "description": "Atherosclerosis with major complication or comorbidity",
          "system": "CMS"
        },
        "properties": {
          "code": {
            "description": "Represents the code of the Diagnosis-Related Group (DRG) in the episode.",
            "format": "int32",
            "type": "integer"
          },
          "description": {
            "description": "Represents the description of the Diagnosis-Related Group (DRG) in the episode.",
            "type": "string"
          },
          "system": {
            "description": "Represents the coding system of the Diagnosis-Related Group (DRG) in the episode. Possible values are 'CMS','ICD-10', or 'Custom'.",
            "type": "string"
          }
        },
        "title": "Drg",
        "type": "object"
      },
      "DrgList": {
        "description": "Represents the estimated Diagnosis-Related Group (DRG). The estimated DRG represents the DRG tracked by the care setting (for e.g. hospital) where the patient came from to the facility.",
        "example": {
          "coding": [
            {
              "code": 302,
              "description": "Atherosclerosis with major complication or comorbidity",
              "system": "CMS"
            }
          ]
        },
        "properties": {
          "coding": {
            "description": "List of array of codes for the Diagnosis-Related Group (DRG). Currently, only a single object is returned in the array.",
            "items": {
              "$ref": "#/components/schemas/Drg"
            },
            "type": "array"
          }
        },
        "title": "DrgList",
        "type": "object"
      },
      "DrugIdentifierPostCodeableConcept": {
        "description": "Alternative drug identification system to rxNormId and National Drug Code. Information includes coding system, medication code and text name of medication.",
        "example": {
          "coding": [
            {
              "code": "2392720.0",
              "display": "REGULAR STRENGTH TYLENOL BACK PAIN",
              "system": "https://health-products.canada.ca/dpd-bdpp/index-eng.jsp"
            }
          ]
        },
        "properties": {
          "coding": {
            "description": "List of drug identifier, can accept up to 3 entries.",
            "items": {
              "$ref": "#/components/schemas/DrugIdentifierPostCoding"
            },
            "type": "array"
          }
        },
        "title": "DrugIdentifierPostCodeableConcept",
        "type": "object"
      },
      "DrugIdentifierPostCoding": {
        "description": "Drug identifier, can accept up to 3 entries.",
        "example": {
          "code": "2392720.0",
          "display": "REGULAR STRENGTH TYLENOL BACK PAIN",
          "system": "https://health-products.canada.ca/dpd-bdpp/index-eng.jsp"
        },
        "properties": {
          "code": {
            "description": "Specific code for the medication.",
            "type": "string"
          },
          "display": {
            "description": "Text description of the medication.",
            "type": "string"
          },
          "system": {
            "description": "Type of coding system being used e.g. First DataBank or Drug Identification Number (Canada only). Can be a URL.",
            "type": "string"
          }
        },
        "title": "DrugIdentifierPostCoding",
        "type": "object"
      },
      "EncounterNote": {
        "description": "New Encounter Note Content",
        "example": {
          "effectiveDate": "2016-03-01T01:02:03.000Z",
          "externalId": "1",
          "noteType": "NoteType 1",
          "patientId": 6,
          "showOnShift": false,
          "showOn24hr": true,
          "showOnComm": false,
          "sections": [
            {
              "name": "Date of Service",
              "value": "2015-01-02"
            },
            {
              "name": "Visit Type",
              "value": "Visit Type value"
            },
            {
              "name": "Transition of Care",
              "value": "Transition of Care value"
            },
            {
              "name": "History Details",
              "value": "History Details for this progress note."
            },
            {
              "name": "Details",
              "value": "Details this progress note."
            },
            {
              "name": "Provider",
              "value": "Provider Name who provided the service."
            },
            {
              "name": "Signed Date",
              "value": "Date this progress note was signed by the provider. This is a string field and the date format is left to the calling partner."
            }
          ]
        },
        "properties": {
          "effectiveDate": {
            "description": "Date-time in UTC for Effective Date of the progress note.",
            "format": "date-time",
            "type": "string"
          },
          "externalId": {
            "description": "External ID in the calling application. If an instance with the same ID already exists - the request fails with 409 error code. This id must be unique for each vendor.",
            "maxLength": 40,
            "minLength": 1,
            "type": "string"
          },
          "noteType": {
            "description": "Progress note type to categorize the notes. Progress notes are grouped using the note type, and is used by the nurses to better view the notes. This field will not accept any XML sensitive characters such as (quotes, ampersand, angle brackets, etc.)",
            "maxLength": 75,
            "minLength": 1,
            "type": "string"
          },
          "patientId": {
            "description": "PointClickCare's unique identifier for a patient within the organization.</br></br>When a patient is admitted to a facility within an organization, they are assigned a patientId which is unique to their stay within that facility. If the same patient were to get admitted to another facility within the same organization in the future, they would be assigned a new patientId. The patientId however is unique at the organization level. That is, no two patients across different facilities within the organization will have the same patientId.",
            "format": "int32",
            "minimum": 1,
            "type": "integer"
          },
          "sections": {
            "description": "List of sections for the Progress Note.",
            "items": {
              "$ref": "#/components/schemas/ProgressNoteSection"
            },
            "maxItems": 2147483647,
            "minItems": 1,
            "type": "array"
          },
          "showOnShift": {
            "description": "Determines if the progress note will appear on the shift report. If this parameter is not included in the request body, the default value will be retrieved from the PN type config.",
            "type": "boolean"
          },
          "showOn24hr": {
            "description": "Determines if the progress note will appear on the 24hr report. If this parameter is not included in the request body, the default value will be retrieved from the PN type config.",
            "type": "boolean"
          },
          "showOnComm": {
            "description": "Determines if the progress note will appear on MD/Nursing Communications Report. If this parameter is not included in the request body, the default value will be retrieved from the PN type config.",
            "type": "boolean"
          }
        },
        "required": [
          "effectiveDate",
          "externalId",
          "noteType",
          "sections"
        ],
        "title": "EncounterNote",
        "type": "object"
      },
      "EpisodeOfCare": {
        "description": "Episodes of care.",
        "example": {
          "actualDrg": {
            "coding": [
              {
                "code": 255,
                "description": "Upper limb and toe amputation for circulatory system disorder with major complication or comorbidity",
                "system": "CMS"
              }
            ]
          },
          "duration": 30,
          "episodeOfCareId": 9,
          "estimatedDrg": {
            "coding": [
              {
                "code": 280,
                "description": "Acute myocardial infarction, disease/discharged alive with major complication or comorbidity",
                "system": "CMS"
              }
            ]
          },
          "model": 1,
          "name": "Amputation",
          "payerCode": "MCA",
          "payerName": "Medicare A",
          "payerType": "medicareA",
          "startDate": "2018-01-22",
          "status": "active",
          "type": "CMS"
        },
        "properties": {
          "actualDrg": {
            "$ref": "#/components/schemas/DrgList"
          },
          "duration": {
            "description": "Represents the duration (number of days) for the episode of care. If the value returned is '0', that indicates that the duration for the episode is unknown.",
            "format": "int32",
            "type": "integer"
          },
          "endDate": {
            "description": "Represents the end date of the episode. The date format is YYYY-MM-DD.",
            "format": "date",
            "type": "string"
          },
          "episodeOfCareId": {
            "description": "PointClickCare's unique identifier for the episode of care.",
            "format": "int32",
            "type": "integer"
          },
          "estimatedDrg": {
            "$ref": "#/components/schemas/DrgList"
          },
          "model": {
            "description": "Represents the model for the episode of care. Possible values are 0, 1, 2, 3, 4 or 5. <br> If the value returned is '0', that indicates that the model is unknown. <br> <br> BPCI Model 1: Retrospective Acute Care Hospital Stay Only <br> BPCI Model 2: Retrospective Acute & Post Acute Care Episode  <br> BPCI Model 3: Retrospective Post Acute Care Only <br> BPCI Model 4: Prospective Acute Care Hospital Stay Only <br> BPCI Model 5:  Comprehensive Care for Joint Replacement",
            "format": "int32",
            "type": "integer"
          },
          "name": {
            "description": "Represents the description for the episode.",
            "type": "string"
          },
          "payerCode": {
            "description": "Represents the payer's code of the payer associated in the episode.",
            "type": "string"
          },
          "payerName": {
            "description": "Represents the name of the payer associated in the episode.",
            "type": "string"
          },
          "payerType": {
            "description": "Represents the type of the payer associated in the episode. Possible values are:<br><ul><li>managedCare</li><li>medicaid</li><li>medicareA</li><li>medicareB</li><li>medicareD</li><li>other</li><li>outpatient</li><li>private</li></ul>",
            "type": "string"
          },
          "startDate": {
            "description": "Represents the start date of the episode. The date format is YYYY-MM-DD.",
            "format": "date",
            "type": "string"
          },
          "status": {
            "description": "Represents the status for episode of care. Possible values are \"active\" or \"resolved\".",
            "type": "string"
          },
          "type": {
            "description": "Represents the library for the episode. Possible values are 'CMS' or 'Custom'.",
            "type": "string"
          }
        },
        "title": "EpisodeOfCare",
        "type": "object"
      },
      "EpisodeOfCareList": {
        "description": "List of episodes of care.",
        "example": {
          "data": [
            {
              "actualDrg": {
                "coding": [
                  {
                    "code": 255,
                    "description": "Upper limb and toe amputation for circulatory system disorder with major complication or comorbidity",
                    "system": "CMS"
                  }
                ]
              },
              "duration": 30,
              "episodeOfCareId": 9,
              "estimatedDrg": {
                "coding": [
                  {
                    "code": 280,
                    "description": "Acute myocardial infarction, disease/discharged alive with major complication or comorbidity",
                    "system": "CMS"
                  }
                ]
              },
              "model": 1,
              "name": "Amputation",
              "payerCode": "MCA",
              "payerName": "Medicare A",
              "payerType": "medicareA",
              "startDate": "2018-01-22",
              "status": "active",
              "type": "CMS"
            },
            {
              "actualDrg": {
                "coding": [
                  {
                    "code": 280,
                    "description": "Acute myocardial infarction, disease/discharged alive with major complication or comorbidity",
                    "system": "CMS"
                  }
                ]
              },
              "duration": 60,
              "endDate": "2018-01-20",
              "episodeOfCareId": 10,
              "estimatedDrg": {
                "coding": [
                  {
                    "code": 280,
                    "description": "Acute myocardial infarction, disease/discharged alive with major complication or comorbidity",
                    "system": "CMS"
                  }
                ]
              },
              "model": 2,
              "name": "Acute myocardial infarction",
              "payerCode": "MCA",
              "payerName": "Medicare A",
              "payerType": "medicareA",
              "startDate": "2018-01-18",
              "status": "resolved",
              "type": "CMS"
            }
          ],
          "paging": {
            "hasMore": true,
            "page": 1,
            "pageSize": 2
          }
        },
        "properties": {
          "data": {
            "description": "List of episodes of care.",
            "items": {
              "$ref": "#/components/schemas/EpisodeOfCare"
            },
            "type": "array"
          },
          "paging": {
            "$ref": "#/components/schemas/PagingResponseByPage"
          }
        },
        "title": "EpisodeOfCareList",
        "type": "object"
      },
      "Error": {
        "description": "webhook related errors for the application.",
        "example": {
          "errorTimeStamp": "2018-09-26T22:40:55.567Z",
          "webhookErrorCode": "Invalid_certificate"
        },
        "properties": {
          "errorTimeStamp": {
            "description": "Date & time when error was recorded.",
            "format": "date-time",
            "type": "string"
          },
          "webhookErrorCode": {
            "description": "A code associated with a webhook transmission error. Associated details can be obtained on the Developer Portal <a href=\"https://developer.pointclickcare.com/apis/troubleshooting-webhooks\" target=\"_blank\">https://developer.pointclickcare.com/apis/troubleshooting-webhooks</a>. Please note, if this error type has occurred, the associated errorTimeStamp will keep shifting based on the latest attempt at sending the message.",
            "type": "string"
          }
        },
        "title": "Error",
        "type": "object"
      },
      "CodeableConcept": {
        "type": "object",
        "properties": {
          "coding": {
            "type": "array",
            "description": "List of representation of a concept in a given coding system.",
            "items": {
              "$ref": "#/components/schemas/Coding"
            }
          },
          "text": {
            "type": "string"
          }
        },
        "title": "CodeableConcept",
        "description": "CodeableConcept.",
        "example": {
          "coding": {
            "system": "https://fhir.infoway-inforoute.ca/NamingSystem/ca-on-patient-hcn",
            "code": 3243982726
          }
        }
      },
      "Coding": {
        "type": "object",
        "properties": {
          "system": {
            "type": "string",
            "description": "Represents the coding system used to share the concept."
          },
          "code": {
            "type": "string",
            "description": "Represents the code as per the coding system."
          }
        },
        "title": "Coding",
        "description": "Coding.",
        "example": {
          "system": "https://fhir.infoway-inforoute.ca/NamingSystem/ca-on-patient-hcn",
          "code": 3243982726
        }
      },
      "ErrorResponse": {
        "description": "List of Webhook Errors.",
        "example": {
          "data": [
            {
              "errorTimeStamp": "2018-09-26T22:40:55.567Z",
              "webhookErrorCode": "Invalid_certificate"
            }
          ]
        },
        "properties": {
          "data": {
            "description": "List of webhook related errors for the application.",
            "items": {
              "$ref": "#/components/schemas/Error"
            },
            "type": "array"
          }
        },
        "title": "ErrorResponse",
        "type": "object"
      },
      "EventConfigurationEventType": {
        "description": "events organized by the facility. <br>These fields will only be returned if the User has permissions for location, resource and eventType.",
        "example": {
          "description": "Daily reoccuring Bingo Event",
          "name": "Daily Bingo"
        },
        "properties": {
          "description": {
            "description": "Description of the event. Max of 400 characters.",
            "type": "string"
          },
          "name": {
            "description": "Name of the event e.g. 'Outing'. This field will always be available. Max of 25 characters.",
            "type": "string"
          },
          "notes": {
            "description": "Additional notes related to the event. Max of 400 characters.",
            "type": "string"
          }
        },
        "title": "EventConfigurationEventType",
        "type": "object"
      },
      "EventConfigurationListResponse": {
        "description": "List of Event Configurations",
        "example": {
          "eventType": [
            {
              "description": "Daily reoccuring Bingo Event",
              "name": "Daily Bingo"
            },
            {
              "description": "Bingo Night with Movie",
              "name": "Special Bingo"
            }
          ],
          "facId": 1,
          "location": [
            {
              "name": "Large Bingo Room",
              "notes": "Use this room when there are over 20 participants",
              "place": "Community Room - A"
            },
            {
              "name": "Small Bingo Room",
              "notes": "Use this room when there are less than 20 participants",
              "place": "Community Room - B"
            }
          ],
          "resource": [
            {
              "description": "To be used for Bingo",
              "name": "Bingo Cards"
            },
            {
              "description": "To be used for Bingo",
              "name": "Bingo Tokens"
            }
          ]
        },
        "properties": {
          "eventType": {
            "description": "List of events organized by the facility. <br>These fields will only be returned if the User has permissions for location, resource and eventType.",
            "items": {
              "$ref": "#/components/schemas/EventConfigurationEventType"
            },
            "type": "array"
          },
          "facId": {
            "description": "PointClickCare's unique identifier for a facility within the organization. This field will always be available.",
            "format": "int32",
            "type": "integer"
          },
          "location": {
            "description": "List of locations for events organized by the facility. <br>These fields will only be returned if the User has permissions for location, resource and eventType.",
            "items": {
              "$ref": "#/components/schemas/EventConfigurationLocation"
            },
            "type": "array"
          },
          "resource": {
            "description": "List of resources used at events organized by the facility. <br>These fields will only be returned if the User has permissions for location, resource and eventType.",
            "items": {
              "$ref": "#/components/schemas/EventConfigurationResource"
            },
            "type": "array"
          }
        },
        "title": "EventConfigurationListResponse",
        "type": "object"
      },
      "EventConfigurationLocation": {
        "description": "locations for events organized by the facility. <br>These fields will only be returned if the User has permissions for location, resource and eventType.",
        "example": {
          "name": "Large Bingo Room",
          "notes": "Use this room when there are over 20 participants",
          "place": "Community Room - A"
        },
        "properties": {
          "description": {
            "description": "Description of the location. Max of 400 characters.",
            "type": "string"
          },
          "name": {
            "description": "Name of location e.g. 'Off Property'. This field will always be available. Max of 25 characters.",
            "type": "string"
          },
          "notes": {
            "description": "Additional notes related to the location. Max of 400 characters.",
            "type": "string"
          },
          "place": {
            "description": "Room or name of location e.g. 'Local Park'. Max of 50 characters.",
            "type": "string"
          }
        },
        "title": "EventConfigurationLocation",
        "type": "object"
      },
      "EventConfigurationResource": {
        "description": "resources used at events organized by the facility. <br>These fields will only be returned if the User has permissions for location, resource and eventType.",
        "example": {
          "description": "To be used for Bingo",
          "name": "Bingo Cards"
        },
        "properties": {
          "description": {
            "description": "Description of the resource. Max of 400 characters.",
            "type": "string"
          },
          "name": {
            "description": "Name of resource required for the event e.g. 'Transport'. This field will always be available. Max of 25 characters.",
            "type": "string"
          },
          "notes": {
            "description": "Additional notes related to the resource. Max of 400 characters.",
            "type": "string"
          }
        },
        "title": "EventConfigurationResource",
        "type": "object"
      },
      "ExternalFacility": {
        "description": "External Facility Request",
        "type": "object",
        "properties": {
          "name": {
            "description": "Name for the external facility.",
            "type": "string"
          },
          "phoneNumber": {
            "description": "Phone number for the external facility's contact.",
            "type": "string"
          },
          "faxNumber": {
            "description": "Fax number for the external facility's contact.",
            "type": "string"
          },
          "address1": {
            "description": "Street address for the external facility.",
            "type": "string"
          },
          "address2": {
            "description": "Address line 2.",
            "type": "string"
          },
          "address3": {
            "description": "Address line 3.",
            "type": "string"
          },
          "city": {
            "description": "City for the external facility's contact.",
            "type": "string"
          },
          "county": {
            "description": "County for the external facility's contact. Must be a valid United States county name. (Eg. 'Boise')",
            "type": "string"
          },
          "country": {
            "description": "Country for the external facility's contact. Note: only 'United States' is supported.",
            "type": "string"
          },
          "postalCode": {
            "description": "Postal code for the external facility's contact.",
            "type": "string"
          },
          "state": {
            "description": "State for the external facility's contact. Must be a valid United States two character state abbreviation. (Eg. 'ID')",
            "type": "string"
          },
          "type": {
            "description": "Type for the external facility.\n- Pharmacy\n- Laboratory\n- Diagnostic Imaging\n- Hospital\n- Church\n- Funeral Home\n- Nursing Home\n",
            "type": "string"
          },
          "npi": {
            "description": "Npi for the external facility.",
            "type": "string"
          }
        },
        "required": [
          "name",
          "phoneNumber",
          "address1",
          "address2",
          "address3",
          "city",
          "county",
          "country",
          "postalCode",
          "state",
          "type"
        ],
        "title": "ExternalFacility",
        "example": {
          "name": "Fac1",
          "phoneNumber": "4561236780",
          "faxNumber": "4561236780",
          "address1": "Address line 1",
          "address2": "Address line 2",
          "address3": "Address line 3",
          "city": "Idaho City",
          "county": "Boise",
          "country": "United States",
          "postalCode": "35201-1234",
          "state": "ID",
          "type": "Pharmacy",
          "npi": "123456"
        }
      },
      "TherapyMinutes": {
        "description": "Therapy Minutes",
        "type": "object",
        "properties": {
          "patientId": {
            "description": "PointClickCare's unique identifier for a patient within the organization.When a patient is admitted to a facility within an organization, they are assigned a patientId which is unique to their stay within that facility. If the same patient were to get admitted to another facility within the same organization in the future, they would be assigned a new patientId. The patientId however is unique at the organization level. That is, no two patients across different facilities within the organization will have the same patientId. If adtRecordIds is provided, then patientId should not be provided. Otherwise, patientId should be provided.",
            "type": "integer"
          },
          "discipline": {
            "description": "Represents 2-letter code which indicates the type of therapy provided. Acceptable values are <br>PT – Physical Therapy <br> OT – Occupational Therapy <br>  ST – Speech/Audiology Pathology <br>RP – Respiratory Therapy <br>PS – Psychological Therapy <br> RT– Recreational Therapy",
            "type": "string"
          },
          "typeOfMinutes": {
            "description": "Represents a 1-letter code which indicates the context or setting of the therapy session. Acceptable values are <br>E – Evaluation <br> I – Individual <br>C – Concurrent<br> G – Group <br>O – Co-treatment minutes",
            "type": "string"
          },
          "keyDate": {
            "description": "The Key Date refers to the specific date when the therapy session took place for a patient (denoted as A0 for actual or P0 for planned). This date serves as a reference point for each set of therapy minutes recorded as actual or planned for the patient.The expected date format is YYYY-MM-DD.",
            "type": "string"
          },
          "therapyMinutes": {
            "description": "Object containing actual and planned discrete therapy minutes recorded.The therapyMinutes object should include the following keys <br> <table><th>Key</th><th>Type</th><th>Description </th><tr><td>A10 </td><td>Integer </td> <td>Actual minutes of therapy recorded 10 calendar days before the Key Date.</td></tr><tr><td>A9 </td><td>Integer </td> <td>Actual minutes of therapy recorded 9 calendar days before the Key Date.</td></tr><tr><td>A8 </td><td>Integer </td> <td>Actual minutes of therapy recorded 8 calendar days before the Key Date.</td></tr><tr><td>A7 </td><td>Integer </td> <td>Actual minutes of therapy recorded 7 calendar days before the Key Date.</td></tr><tr><td>A6 </td><td>Integer </td> <td>Actual minutes of therapy recorded 6 calendar days before the Key Date.</td></tr><tr><td>A5 </td><td>Integer </td> <td>Actual minutes of therapy recorded 5 calendar days before the Key Date.</td></tr><tr><td>A4 </td><td>Integer </td> <td>Actual minutes of therapy recorded 4 calendar days before the Key Date.</td></tr><tr><td>A3 </td><td>Integer </td> <td>Actual minutes of therapy recorded 3 calendar days before the Key Date.</td></tr><tr><td>A2 </td><td>Integer </td> <td>Actual minutes of therapy recorded 2 calendar days before the Key Date.</td></tr><tr><td>A1 </td><td>Integer </td> <td>Actual minutes of therapy recorded 1 calendar days before the Key Date.</td></tr><tr><td>A0 </td><td>Integer </td> <td>Actual minutes of therapy recorded on the Key Date. Mutually exclusive with P0.</td></tr><tr><td>P0 </td><td>Integer </td> <td>Planned minutes of therapy for the Key Date. Mutually exclusive with A0.</td></tr><tr><td>P1 </td><td>Integer </td> <td>Planned minutes of therapy for 1 calendar day after the Key Date.</td></tr><tr><td>P2 </td><td>Integer </td> <td>Planned minutes of therapy for 2 calendar day after the Key Date.</td></tr><tr><td>P3 </td><td>Integer </td> <td>Planned minutes of therapy for 3 calendar day after the Key Date.</td></tr><tr><td>P4 </td><td>Integer </td> <td>Planned minutes of therapy for 4 calendar day after the Key Date.</td></tr><tr><td>P5 </td><td>Integer </td> <td>Planned minutes of therapy for 5 calendar day after the Key Date.</td></tr><tr><td>P6 </td><td>Integer </td> <td>Planned minutes of therapy for 6 calendar day after the Key Date.</td></tr><tr><td>P7 </td><td>Integer </td> <td>Planned minutes of therapy for 7 calendar day after the Key Date.</td></tr><tr><td>P8 </td><td>Integer </td> <td>Planned minutes of therapy for 8 calendar day after the Key Date.</td></tr><tr><td>P9 </td><td>Integer </td> <td>Planned minutes of therapy for 9 calendar day after the Key Date.</td></tr><tr><td>P10 </td><td>Integer </td> <td>Planned minutes of therapy for 10 calendar day after the Key Date.</td></tr><tr><td>P11 </td><td>Integer </td> <td>Planned minutes of therapy for 11 calendar day after the Key Date.</td></tr><tr><td>P12 </td><td>Integer </td> <td>Planned minutes of therapy for 12 calendar day after the Key Date.</td></tr><tr><td>P13 </td><td>Integer </td> <td>Planned minutes of therapy for 13 calendar day after the Key Date.</td></tr><tr><td>P14 </td><td>Integer </td> <td>Planned minutes of therapy for 14 calendar day after the Key Date.</td></tr></table> For all keys, the field cannot be blank (null). If there are no minutes to record, the field should not be left blank (null); instead, the key should store a “0” (zero).",
            "type": "string"
          },
          "medicalRecordNumber": {
            "description": "The patient's medical record number, if available.",
            "type": "string"
          }
        },
        "required": [
          "patientId",
          "discipline",
          "typeOfMinutes",
          "keyDate",
          "therapyMinutes"
        ],
        "title": "TherapyMinutes",
        "example": {
          "patientId": 5577276,
          "discipline": "PT",
          "typeOfMinutes": "I",
          "keyDate": "2024-04-22",
          "therapyMinutes": {
            "a10": 1,
            "a09": 2,
            "a8": 3,
            "a7": 4,
            "a6": 5,
            "a5": 6,
            "a4": 7,
            "a3": 8,
            "a2": 9,
            "a1": 10,
            "a0": 11,
            "p1": 12,
            "p2": 13,
            "p3": 14,
            "p4": 15,
            "p5": 1,
            "p6": 17,
            "p7": 18,
            "p8": 19,
            "p9": 20,
            "p10": 21,
            "p11": 22,
            "p12": 23,
            "p13": 24,
            "p14": 25
          },
          "medicalRecordNumber": "ALPCODE88888"
        }
      },
      "PostExternalFacilityResponse": {
        "description": "Post External Facility Response",
        "example": {
          "externalFacilityId": 123
        },
        "properties": {
          "externalFacilityId": {
            "description": "Unique Identifier for created external facility.",
            "type": "integer"
          }
        },
        "title": "PostExternalFacilityResponse",
        "type": "object"
      },
      "Facility": {
        "description": "Facilities.",
        "example": {
          "active": true,
          "addressLine1": "389 Skidmore Road",
          "addressLine2": "P.O.Box # 21678-9087",
          "bedCount": 150,
          "billingStyleCountry": "USA",
          "city": "Crockett",
          "country": "USA",
          "countryId": 100,
          "emailAddress": "info@pcc.com",
          "environment": "www7",
          "facId": 50,
          "facilityCode": "6640",
          "facilityName": "FACILITY_50",
          "facilityStatus": "Live",
          "fax": "(678) 555-3246",
          "headOffice": false,
          "healthType": "SNF",
          "lineOfBusiness": {
            "longDesc": "Skilled Nursing Facility",
            "shortDesc": "SNF"
          },
          "orgDbType": "T",
          "orgName": "A.G. Rhodes Home",
          "orgUuid": "1750abe8-1b7c-4e26-969c-9d7076ff8c02",
          "phone": "(936) 555-9890",
          "postalCode": "75835-1810",
          "state": "TX",
          "timeZone": "America/Chicago",
          "timeZoneOffset": -3
        },
        "properties": {
          "active": {
            "description": "Represents whether if the facility is active or inactive. Possible responses are 'true' or 'false'.",
            "type": "boolean"
          },
          "addressLine1": {
            "description": "The address of the facility.",
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string"
          },
          "addressLine2": {
            "description": "Additional address information for the facility.",
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string"
          },
          "bedCount": {
            "description": "The number of beds the facility offers, if available.",
            "format": "int32",
            "type": "integer"
          },
          "billingStyleCountry": {
            "description": "The ISO 3166 3 letter code for the country whose billing style the facility uses. (Example: USA for United States and CAN for Canada).",
            "enum": [
              "USA",
              "CAN"
            ],
            "type": "string"
          },
          "city": {
            "description": "The city of the facility.",
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string"
          },
          "country": {
            "description": "The ISO 3166 3 letter code for the country the facility resides in. (Example: USA for United States and CAN for Canada).",
            "enum": [
              "USA",
              "CAN"
            ],
            "type": "string"
          },
          "countryId": {
            "description": "The country ID.",
            "type": "integer"
          },
          "emailAddress": {
            "description": "The contact email address of the facility, if available.",
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string"
          },
          "environment": {
            "description": "The name of the PointClickCare environment the organization is stored on. The environment is subject to change over time.",
            "type": "string"
          },
          "facId": {
            "description": "PointClickCare's unique identifier for a facility within the organization.",
            "format": "int32",
            "type": "integer"
          },
          "facilityCode": {
            "description": "Another unique identifier for the facility. Facility code can be configured by an organization in the PointClickCare application.",
            "type": "string"
          },
          "facilityName": {
            "description": "The name of the facility.",
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string"
          },
          "facilityStatus": {
            "description": "The status of the facility.",
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string"
          },
          "fax": {
            "description": "The fax number of the facility, if available.",
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string"
          },
          "headOffice": {
            "description": "Represents whether if the facility is the head office.  Some organizations have a concept of a 'head office' facility which is usually for administrative purposes only and this facility would not contain actual patients. Possible responses are 'true' or 'false'.",
            "type": "boolean"
          },
          "healthType": {
            "description": "The health type of the facility (Example: HHC).",
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string"
          },
          "lineOfBusiness": {
            "$ref": "#/components/schemas/FacilityLineOfBusiness"
          },
          "inactiveDate": {
            "description": "Represents the date at which a facility became inactive. The date format is YYYY-MM-DD.",
            "format": "date",
            "type": "string"
          },
          "orgDbType": {
            "description": "The DB type of the org.",
            "type": "string"
          },
          "orgName": {
            "description": "The name of the organization.",
            "type": "string"
          },
          "orgUuid": {
            "description": "PointClickCare's unique identifier for the organization.",
            "type": "string"
          },
          "phone": {
            "description": "The phone number of the facility, if available.",
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string"
          },
          "postalCode": {
            "description": "The postal/zip code of the facility.",
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string"
          },
          "state": {
            "description": "The state/province/territory of the facility.",
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string"
          },
          "timeZone": {
            "description": "Represents the timezone the facility operates in.<br>If DST (Daylight Savings Time) is enabled: <br><table><th>Time Zone in PointClickCare</th><th>API Response</th><tr><td>Greenwich Mean</td><td>Europe/London</td></tr><tr><td>Atlantic</td><td>America/Halifax</td></tr><tr><td>Eastern</td><td>America/New_York</td></tr><tr><td>Central</td><td>America/Chicago</td></tr><tr><td>Mountain</td><td>America/Denver</td></tr><tr><td>Pacific</td><td>America/Los_Angeles</td></tr><tr><td>Alaska</td><td>America/Anchorage</td></tr><tr><td>Hawaii</td><td>US/Aleutian</td></tr></table>If DST is disabled:<table><th>Time Zone in PointClickCare</th><th>API Response</th><tr><td>Greenwich Mean</td><td>GMT</td></tr><tr><td>Atlantic</td><td>America/Barbados</td></tr><tr><td>Eastern</td><td> EST</td></tr><tr><td>Central</td><td>America/Regina</td></tr><tr><td>Mountain</td><td>America/Phoenix</td></tr><tr><td>Pacific</td><td>Pacific/Pitcairn</td></tr><tr><td>Alaska</td><td>Pacific/Gambier</td></tr><tr><td>Hawaii</td><td>Pacific/Honolulu</td></tr><tr><td>Hong Kong</td><td>Asia/Hong_Kong</td></tr></table>",
            "type": "string"
          },
          "timeZoneOffset": {
            "description": "The time zone offset.",
            "type": "integer"
          }
        },
        "required": [
          "addressLine1",
          "addressLine2",
          "city",
          "emailAddress",
          "facilityName",
          "fax",
          "healthType",
          "phone",
          "postalCode",
          "state"
        ],
        "title": "Facility",
        "type": "object"
      },
      "FacilityBedList": {
        "description": "Facility Bed List",
        "example": {
          "data": [
            {
              "beds": [
                {
                  "description": "A",
                  "id": 1,
                  "isCompanionBed": true,
                  "isMedicaidCertified": false,
                  "isMedicareCertified": true,
                  "isOccupied": true
                },
                {
                  "description": "B",
                  "id": 2,
                  "isCompanionBed": true,
                  "isMedicaidCertified": true,
                  "isMedicareCertified": false,
                  "isOccupied": false
                }
              ],
              "facId": 1,
              "orgUuid": "1750abe8-1b7c-4e26-969c-9d7076ff8c02",
              "roomId": 1
            },
            {
              "beds": [
                {
                  "description": "C",
                  "id": 3,
                  "isCompanionBed": false,
                  "isMedicaidCertified": true,
                  "isMedicareCertified": true,
                  "isOccupied": true
                }
              ],
              "facId": 1,
              "orgUuid": "1750abe8-1b7c-4e26-969c-9d7076ff8c02",
              "roomId": 3
            }
          ],
          "paging": {
            "hasMore": false,
            "page": 1,
            "pageSize": 50
          }
        },
        "properties": {
          "data": {
            "description": "List of facility beds.",
            "items": {
              "$ref": "#/components/schemas/RoomWithBeds"
            },
            "type": "array"
          },
          "paging": {
            "$ref": "#/components/schemas/PagingResponseByPage"
          }
        },
        "title": "FacilityBedList",
        "type": "object"
      },
      "DailyBalanceDto": {
        "type": "object",
        "properties": {
          "patientId": {
            "description": "PointClickCare's unique identifier for a patient within the organization.</br></br> When a patient is admitted to a facility within an organization, they are assigned a patientId which is unique to their stay within that facility. If the same patient were to get admitted to another facility within the same organization in the future, they would be assigned a new patientId. The patientId however is unique at the organization level. That is, no two patients across different facilities within the organization will have the same patientId.",
            "type": "integer",
            "format": "int32"
          },
          "residentNumber": {
            "description": "Another unique identifier for a patient (resident) that can be used if the internal patientId is not desired.",
            "type": "string"
          },
          "residentFirstName": {
            "description": "The patient's first name.",
            "type": "string"
          },
          "residentLastName": {
            "description": "The patient's last name.",
            "type": "string"
          },
          "currentBalance": {
            "description": "The current daily balance of this patient.",
            "type": "string"
          },
          "currency": {
            "description": "The ISO 4217 3 letter code for the currency of the current daily balance. (For Example, USD for United States Dollar, CAD for Canadian Dollar).",
            "type": "string"
          },
          "location": {
            "description": "Name of the facility location.",
            "type": "string"
          },
          "facilityId": {
            "description": "PointClickCare's unique identifier for a facility within the organization.",
            "type": "integer",
            "format": "int32"
          },
          "facilityCode": {
            "description": "Another unique identifier for the facility. Facility code can be configured by an organization in the PointClickCare application.",
            "type": "string"
          }
        },
        "title": "DailyBalanceDto",
        "description": "Get Daily Balance.",
        "example": {
          "patientId": 1,
          "residentNumber": "AEB385DD61954F4",
          "residentFirstName": "John",
          "residentLastName": "Smith",
          "currentBalance": "1000.00",
          "currency": "CDN",
          "location": "Location 1",
          "facilityId": 1,
          "facilityCode": "fac1"
        }
      },
      "FacilityContentManagementFeatureOption": {
        "description": "Care content directory configuration status",
        "example": {
          "enableOption": false,
          "name": "Disabled",
          "readonly": false,
          "statusId": 4
        },
        "properties": {
          "enableOption": {
            "description": "Whether the status option signifies an enabled tier.",
            "type": "boolean"
          },
          "name": {
            "description": "The name of the status options.",
            "type": "string"
          },
          "readonly": {
            "description": "The readonly state of the tier.",
            "type": "boolean"
          },
          "statusId": {
            "description": "The ID of the status option.",
            "format": "int32",
            "type": "integer"
          }
        },
        "title": "FacilityContentManagementFeatureOption",
        "type": "object"
      },
      "FacilityContentManagementPartner": {
        "description": "Care content directory configuration state",
        "example": {
          "brandDescription": "Infection Prevention and Control",
          "brandName": "PCC Infection Control solution",
          "confValue": "Y",
          "currentStatusOption": {
            "enableOption": false,
            "name": "Disabled",
            "readonly": false,
            "statusId": 4
          },
          "enabled": true,
          "enabledBy": "systemuser",
          "enabledDate": "2020-09-17",
          "revisionBy": "systemuser",
          "revisionDate": "2020-09-17T00:11:37.000Z",
          "sourceConfValue": "Y",
          "tier": "INFECTION_PREVENTION_AND_CONTROL"
        },
        "properties": {
          "brandDescription": {
            "description": "A description of the brand.",
            "type": "string"
          },
          "brandName": {
            "description": "The name of the care content directory brand.",
            "type": "string"
          },
          "confValue": {
            "description": "The current configuration value.",
            "type": "string"
          },
          "currentStatusOption": {
            "$ref": "#/components/schemas/FacilityContentManagementFeatureOption"
          },
          "disabledBy": {
            "description": "The last user to disable the tier.",
            "type": "string"
          },
          "disabledDate": {
            "description": "The last date the tier was disabled.",
            "type": "string",
            "format": "date"
          },
          "enabled": {
            "description": "Whether the tier is enabled.",
            "type": "boolean"
          },
          "enabledBy": {
            "description": "The last user to enable the tier.",
            "type": "string"
          },
          "enabledDate": {
            "description": "The last date the tier was enabled.",
            "type": "string",
            "format": "date"
          },
          "revisionBy": {
            "description": "The last user to modify the record.",
            "type": "string"
          },
          "revisionDate": {
            "description": "The last modification date.",
            "type": "string",
            "format": "date-time"
          },
          "sourceConfValue": {
            "description": "The source configuration value.",
            "type": "string"
          },
          "tier": {
            "description": "The care content directory brand tier.",
            "enum": [
              "CLINICAL_STANDARD_CONTENT",
              "NURSING_ADVANTAGE",
              "EINTERACT",
              "THINK_RESEARCH",
              "SKIN_WOUND",
              "CANADIAN_CARE_CONTENT",
              "INFECTION_PREVENTION_AND_CONTROL",
              "CONNECTED_CARE_CENTER"
            ],
            "type": "string"
          }
        },
        "title": "FacilityContentManagementPartner",
        "type": "object"
      },
      "FacilityDetails": {
        "description": "Facility Information.",
        "example": {
          "active": true,
          "addressLine1": "389 Skidmore Road",
          "addressLine2": "P.O.Box # 21678-9087",
          "assessmentsWithCustomScheduling": [
            {
              "defaultFrequency": 7,
              "templateAssessId": 42
            },
            {
              "defaultFrequency": 5,
              "templateAssessId": 41
            }
          ],
          "bedCount": 150,
          "billingStyleCountry": "USA",
          "city": "Crockett",
          "clinicalConfiguration": {
            "progressNote": {
              "signature": "password"
            },
            "units": {
              "bloodPressure": "mmHg",
              "bloodSugar": "mg/dL",
              "heartRate": "bpm",
              "height": "Cm",
              "oxygenSaturation": "%",
              "respirations": "Breaths/min",
              "temperature": "°C",
              "weight": "Kg"
            },
            "weightScaleTypes": [
              "Standing",
              "Wheelchair",
              "Hoyer",
              "BATH",
              "SITTING",
              "Mechanical lift"
            ]
          },
          "contentDirectoryBrandTierConfiguration": [
            {
              "brandDescription": "Infection Prevention and Control",
              "brandName": "PCC Infection Control solution",
              "confValue": "Y",
              "currentStatusOption": {
                "enableOption": false,
                "name": "Disabled",
                "readonly": false,
                "statusId": 4
              },
              "enabled": true,
              "enabledBy": "systemuser",
              "enabledDate": "2020-09-17",
              "revisionBy": "systemuser",
              "revisionDate": "2020-09-17T00:11:37.000Z",
              "sourceConfValue": "Y",
              "tier": "INFECTION_PREVENTION_AND_CONTROL"
            },
            {
              "brandDescription": " eINTERACT&trade;  Program for Skilled Nursing Facilities (SNF)",
              "brandName": "eINTERACT&trade; ",
              "confValue": "N",
              "disabledBy": "systemuser",
              "disabledDate": "2020-09-17",
              "enabled": false,
              "revisionBy": "systemuser",
              "revisionDate": "2020-09-17T00:11:37.000Z",
              "sourceConfValue": "N",
              "tier": "EINTERACT"
            }
          ],
          "careContentDirectoryConfiguration": {
            "canadianCareContent": false,
            "clinicalStandardContent": true,
            "connectedCareCenter": false,
            "eInteract": false,
            "nursingAdvantage": false,
            "pccSkinAndWound": false,
            "thinkResearch": true,
            "woundRounds": true
          },
          "country": "USA",
          "countryId": 100,
          "emailAddress": "info@pcc.com",
          "environment": "www7",
          "episodeOfCareEnabled": false,
          "facId": 50,
          "facilityCode": "6640",
          "facilityName": "FACILITY_50",
          "facilityStatus": "Live",
          "facilityTerms": {
            "admission": "Admission",
            "assessment": "Assessment",
            "bed": "Bed",
            "discharge": "Discharge",
            "facility": "Community",
            "focus": "Focus",
            "goal": "Goal",
            "intervention": "Intervention",
            "kardex": "Kardex",
            "patient": "Participant",
            "room": "Room",
            "task": "Task"
          },
          "fax": "(678) 555-3246",
          "generalConfiguration": {
            "assessment": {
              "signature": "password"
            }
          },
          "headOffice": false,
          "healthType": "SNF",
          "isOmpiEnabled": true,
          "isTrackingHiePrivacyConsent": true,
          "isUploadEnabled": true,
          "lineOfBusiness": {
            "longDesc": "Skilled Nursing Facility",
            "shortDesc": "SNF"
          },
          "orderAdministrationConfiguration": {
            "allowedSupplementaryDocumentationResponses": [
              "LAST_RECORDED",
              "NEW_VALUE"
            ],
            "hasOrderAdministrationBarcodeScanning": true,
            "hasResidentBarcodeScanning": true,
            "orderAdministrationBarcodeRegex": "\\d{0,11}$",
            "requireProgressNoteforPRN": false,
            "shouldAutoPopulateProgressNote": true,
            "showProgressNoteOn24HourReport": true,
            "showProgressNoteOnShiftReport": true,
            "signature": "password",
            "usePharmacyDirections": false
          },
          "orderConfiguration": {
            "defaultMedicationLibrary": 4,
            "defaultMedicationLibraryDescription": "MediSpanAPI",
            "epcsEnabled": true,
            "pdmpEnabled": true,
            "quantityAndRefillRequired": false,
            "dischargeOrderEnabled": true
          },
          "orgDbType": "T",
          "orgName": "A.G. Rhodes Home",
          "orgUuid": "1750abe8-1b7c-4e26-969c-9d7076ff8c02",
          "phone": "(936) 555-9890",
          "pickList": {
            "censusActionCode": [
              {
                "actionCode": "AA",
                "actionType": "Actual Admit",
                "id": 1,
                "standardActionType": "Admission"
              },
              {
                "actionCode": "L",
                "actionType": "Leave of Absence/LOA",
                "id": 2,
                "standardActionType": "Leave"
              },
              {
                "actionCode": "RAA",
                "actionType": "Respite - Actual Admit/ReAdmit",
                "id": 3,
                "standardActionType": "Admission"
              }
            ],
            "citizenship": [
              {
                "description": "Canadian",
                "id": 1
              }
            ],
            "contactRelationships": [
              {
                "description": "Aunt",
                "id": 1
              },
              {
                "description": "Brother",
                "id": 2
              },
              {
                "description": "Child",
                "id": 3
              },
              {
                "description": "Cousin",
                "id": 4
              },
              {
                "description": "Daughter",
                "id": 5
              }
            ],
            "contactTypes": [
              {
                "description": "A/R Guarantor",
                "guarantor": true,
                "id": 1,
                "isSurveyContact": false,
                "standardContactType": "Agent"
              },
              {
                "description": "Next of Kin",
                "guarantor": false,
                "id": 2,
                "isSurveyContact": true,
                "standardContactType": "Next of Kin"
              }
            ],
            "documentCategories": [
              {
                "description": "Clinical Document",
                "id": 1,
                "isCustom": false
              },
              {
                "description": "Other",
                "id": 2,
                "isCustom": true
              }
            ],
            "language": [
              {
                "description": "English",
                "id": 1
              },
              {
                "description": "French",
                "id": 2
              }
            ],
            "maritalStatus": [
              {
                "description": "Married",
                "id": 1
              }
            ],
            "prefix": [
              {
                "description": "Dr.",
                "id": 1
              },
              {
                "description": "Mr.",
                "id": 2
              },
              {
                "description": "Mrs.",
                "id": 3
              },
              {
                "description": "Ms.",
                "id": 4
              }
            ],
            "race": [
              {
                "description": "Hispanic",
                "id": 1
              }
            ],
            "religion": [
              {
                "description": "Catholic",
                "id": 1
              }
            ],
            "suffix": [
              {
                "description": "Jr",
                "id": 1
              },
              {
                "description": "Sr",
                "id": 2
              }
            ]
          },
          "postalCode": "75835-1810",
          "reportFilters": [
            {
              "items": [
                {
                  "reportFilterItemId": 1
                }
              ],
              "reportFilterId": 1
            }
          ],
          "serviceConfiguration": {
            "allowDocumentationPeriod": 5,
            "dueNowPeriod": 5,
            "isBatchUpdateEnabled": true,
            "lateEntryPeriod": 1,
            "overduePeriod": 5,
            "patientCarePlan": {
              "applicableToCareGivers": true,
              "id": -52,
              "type": "CARE_PLAN"
            },
            "standardBehaviorTrackingLevel": "CATEGORY",
            "standardResponses": [
              {
                "code": "-99",
                "description": "Resident Not Available",
                "isResponseForFollowUpQuestions": true,
                "isResponseForMDSQuestions": true
              },
              {
                "code": "-98",
                "description": "Resident Refused",
                "isResponseForFollowUpQuestions": true,
                "isResponseForMDSQuestions": true
              },
              {
                "code": "-97",
                "description": "Not Applicable",
                "isResponseForFollowUpQuestions": true,
                "isResponseForMDSQuestions": true
              }
            ],
            "timeTracking": true,
            "trackUnscheduledTasks": true
          },
          "inventoryManagementConfiguration": {
            "controlledSubstanceInventoryTrackingEnabled": true,
            "blockNegativeInventoriesEnabled": true
          },
          "state": "TX",
          "timeZone": "America/Chicago",
          "timeZoneOffset": -3
        },
        "properties": {
          "active": {
            "description": "Represents whether if the facility is active or inactive. Possible responses are 'true' or 'false'.",
            "type": "boolean"
          },
          "addressLine1": {
            "description": "The address of the facility.",
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string"
          },
          "addressLine2": {
            "description": "Additional address information for the facility.",
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string"
          },
          "assessmentsWithCustomScheduling": {
            "description": "List of assessment types with enabled custom scheduling for the given facility.",
            "items": {
              "$ref": "#/components/schemas/CustomSchedule"
            },
            "type": "array",
            "uniqueItems": true
          },
          "bedCount": {
            "description": "The number of beds the facility offers, if available.",
            "format": "int32",
            "type": "integer"
          },
          "billingStyleCountry": {
            "description": "The ISO 3166 3 letter code for the country whose billing style the facility uses. (Example: USA for United States and CAN for Canada).",
            "enum": [
              "USA",
              "CAN"
            ],
            "type": "string"
          },
          "careContentDirectoryConfiguration": {
            "type": "object",
            "description": "A list of current brand status.",
            "properties": {
              "clinicalStandardContent": {
                "type": "boolean",
                "description": "Flag indicating whether Clinical Standard Content brand is enabled."
              },
              "connectedCareCenter": {
                "type": "boolean",
                "description": "Flag indicating whether Connected Care Center brand is enabled."
              },
              "eInteract": {
                "type": "boolean",
                "description": "Flag indicating whether eINTERACT brand is enabled."
              },
              "nursingAdvantage": {
                "type": "boolean",
                "description": "Flag indicating whether Nursing Advantage brand is enabled."
              },
              "pccSkinAndWound": {
                "type": "boolean",
                "description": "Flag indicating whether PCC Skin & Wound brand is enabled."
              },
              "thinkResearch": {
                "type": "boolean",
                "description": "Flag indicating whether Think Research brand is enabled."
              },
              "woundRounds": {
                "type": "boolean",
                "description": "Flag indicating whether Wound Rounds brand is enabled."
              }
            },
            "example": {
              "codings": []
            }
          },
          "city": {
            "description": "The city of the facility.",
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string"
          },
          "clinicalConfiguration": {
            "description": "A list of clinical configurations associated with the facility.",
            "type": "object",
            "properties": {
              "progressNote": {
                "type": "object",
                "description": "Facility configuration relating to progress notes.",
                "properties": {
                  "signature": {
                    "type": "string",
                    "description": "Determines whether a signature is required when entering a progress note and if so, what kind of signature. Possible values are: none, password, 2-factor."
                  }
                }
              },
              "units": {
                "type": "object",
                "description": "Units of measure used in the facility.",
                "properties": {
                  "bloodPressure": {
                    "type": "string",
                    "description": "Unit of measure used by the facility for Blood Pressure. The unit is always mmHg regardless of the facility's Unit of Measure configuration."
                  },
                  "bloodSugar": {
                    "type": "string",
                    "description": "Unit of measure used by the facility for Blood Sugar. The default unit is mg/dL for facilities using Imperial units and mmol/L for facilities using Metric units. Note: the facilities have the ability to override the default unit used for Blood Sugar."
                  },
                  "heartRate": {
                    "type": "string",
                    "description": "Unit of measure used by the facility for Heart Rate. The unit is always bpm regardless of the facility's Unit of Measure configuration."
                  },
                  "height": {
                    "type": "string",
                    "description": "Unit of measure used by the facility for the Height. The default unit is inches for facilities using Imperial units and cm for facilities using Metric units."
                  },
                  "oxygenSaturation": {
                    "type": "string",
                    "description": "Unit of measure used by the facility for the Oxygen Saturation. The unit is always % regardless of the facility's Unit of Measure configuration."
                  },
                  "respirations": {
                    "type": "string",
                    "description": "Unit of measure used by the facility for Respirations. The unit is always Breaths/min regardless of the facility's Unit of Measure configuration."
                  },
                  "temperature": {
                    "type": "string",
                    "description": "Unit of measure used by the facility for Temperature. The unit is °F for facilities using Imperial units, and °C for facilities using Metric units."
                  },
                  "weight": {
                    "type": "string",
                    "description": "Unit of measure used by the facility for Weight. The unit is lbs for facilities using Imperial units, and Kg for facilities using Metric units."
                  }
                }
              },
              "weightScaleTypes": {
                "type": "array",
                "description": "Represents the weight scale types used by the facility. Weight scale types are configurable at a facility level in PointClickCare.",
                "items": {
                  "type": "string"
                }
              }
            },
            "example": {
              "codings": []
            }
          },
          "contentDirectoryBrandTierConfiguration": {
            "description": "List of care content directory configuration state",
            "items": {
              "$ref": "#/components/schemas/FacilityContentManagementPartner"
            },
            "type": "array"
          },
          "country": {
            "description": "The ISO 3166 3 letter code for the country the facility resides in. (Example: USA for United States and CAN for Canada).",
            "enum": [
              "USA",
              "CAN"
            ],
            "type": "string"
          },
          "countryId": {
            "description": "The country ID.",
            "type": "integer"
          },
          "emailAddress": {
            "description": "The contact email address of the facility, if available.",
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string"
          },
          "environment": {
            "description": "The name of the PointClickCare environment the organization is stored on. The environment is subject to change over time.",
            "type": "string"
          },
          "episodeOfCareEnabled": {
            "description": "Indicates if the facility has Episode of Care Management functionality enabled in the PointClickCare application. Episode of Care Management assists facilities or organizations that participate not only in CMS (The Centers for Medicare and Medicaid Services) bundled payments for Bundled Payments for Care Improvement (BPCI) and The Comprehensive Care for Joint Replacement (CJR), but for other Payers who have initiated bundled payments as well.",
            "type": "boolean"
          },
          "facId": {
            "description": "PointClickCare's unique identifier for a facility within the organization.",
            "format": "int32",
            "type": "integer"
          },
          "facilityCode": {
            "description": "Another unique identifier for the facility. Facility code can be configured by an organization in the PointClickCare application.",
            "type": "string"
          },
          "facilityName": {
            "description": "The name of the facility.",
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string"
          },
          "facilityStatus": {
            "description": "The status of the facility.",
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string"
          },
          "facilityTerms": {
            "type": "object",
            "description": "A list of terms used by the facility.",
            "properties": {
              "admission": {
                "type": "string",
                "description": "Term used for Admission by the facility."
              },
              "assessment": {
                "type": "string",
                "description": "Term used for Assessment by the facility."
              },
              "bed": {
                "type": "string",
                "description": "Term used for Bed by the facility."
              },
              "discharge": {
                "type": "string",
                "description": "Term used for Discharge by the facility."
              },
              "facility": {
                "type": "string",
                "description": "Term used for Facility by the facility."
              },
              "focus": {
                "type": "string",
                "description": "Term used for Focus by the facility."
              },
              "goal": {
                "type": "string",
                "description": "Term used for Goal by the facility."
              },
              "intervention": {
                "type": "string",
                "description": "Term used for Intervention by the facility."
              },
              "kardex": {
                "type": "string",
                "description": "Term used for Kardex by the facility."
              },
              "patient": {
                "type": "string",
                "description": "Term used for Patient by the facility."
              },
              "room": {
                "type": "string",
                "description": "Term used for Room by the facility."
              },
              "task": {
                "type": "string",
                "description": "Term used for Task by the facility."
              }
            },
            "example": {
              "codings": []
            }
          },
          "fax": {
            "description": "The fax number of the facility, if available.",
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string"
          },
          "generalConfiguration": {
            "description": "A list of general configurations associated with the facility.",
            "type": "object",
            "properties": {
              "assessment": {
                "type": "object",
                "description": "A list of assessment specific configurations associated with the facility.",
                "properties": {
                  "signature": {
                    "type": "string",
                    "description": "The assessment signature configuration the facility is using."
                  }
                }
              }
            },
            "example": {
              "codings": []
            }
          },
          "headOffice": {
            "description": "Represents whether if the facility is the head office.  Some organizations have a concept of a 'head office' facility which is usually for administrative purposes only and this facility would not contain actual patients. Possible responses are 'true' or 'false'.",
            "type": "boolean"
          },
          "healthType": {
            "description": "The health type of the facility (Example: HHC).",
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string"
          },
          "inactiveDate": {
            "description": "Represents the date at which a facility became inactive. The date format is YYYY-MM-DD.",
            "format": "date",
            "type": "string"
          },
          "isOmpiEnabled": {
            "description": "Indicates if the facility has the option to use organization level patient identifiers enabled or not. Possible responses are 'true' or 'false'.",
            "type": "boolean"
          },
          "isTrackingHiePrivacyConsent": {
            "description": "Indicates if the facility is tracking patients' consent to allow staff involved in their care to see and get access to all their medical records available through the Health Information Exchange. The ability to track patient consent for the aforementioned case is only available to the facility if they have a specific type of integration enabled.",
            "type": "boolean"
          },
          "isUploadEnabled": {
            "description": "Indicates if the facility has the option to upload document enabled or not. Possible responses are 'true' or 'false'.",
            "type": "boolean"
          },
          "lineOfBusiness": {
            "description": "Facility Line Of Business.",
            "type": "object",
            "properties": {
              "longDesc": {
                "type": "string",
                "description": "A long description of the facility's line of business (Example: Skilled Nursing Facility)."
              },
              "shortDesc": {
                "type": "string",
                "description": "A short description of the facility's line of business (Example: SNF)."
              }
            },
            "example": {
              "codings": []
            }
          },
          "orderAdministrationConfiguration": {
            "type": "object",
            "description": "A list of order administration configurations associated with the facility.",
            "properties": {
              "allowedSupplementaryDocumentationResponses": {
                "type": "array",
                "description": "Indicates the possible input options available for supplementary documentation tied to an order administration task. Possible values are one or more of: LAST_RECORDED, NEW_VALUE, NOT_APPLICABLE.",
                "items": {
                  "type": "string"
                }
              },
              "hasDrugImages": {
                "type": "boolean",
                "description": "Determines whether drug images are returned for medication orders."
              },
              "hasOrderAdministrationBarcodeScanning": {
                "type": "boolean",
                "description": "Determines whether the facility allows barcode scanning to identify a medication."
              },
              "hasResidentBarcodeScanning": {
                "type": "boolean",
                "description": "Determines whether the facility allows barcode scanning to identify a resident."
              },
              "orderAdministrationBarcodeRegex": {
                "type": "string",
                "description": "Regular expression to apply to the barcode to identify the medication supply."
              },
              "requireProgressNoteforPRN": {
                "type": "boolean",
                "description": "Indicates whether a progress note is required for a PRN order administration task."
              },
              "shouldAutoPopulateProgressNote": {
                "type": "boolean",
                "description": "Indicates whether a progress note for an order administration task is populated automatically."
              },
              "showProgressNoteOnShiftReport": {
                "type": "boolean",
                "description": "Determines whether or not the progress note should show on the shift report."
              },
              "showProgressNoteOn24HourReport": {
                "type": "boolean",
                "description": "Determines whether or not the progress note should show on the 24Hr shift report."
              },
              "signature": {
                "type": "string",
                "description": "Determines whether a signature is required when documenting the administration of an order and if so, what kind of signature. Possible values are: none, password, 2-factor."
              },
              "usePharmacyDirections": {
                "type": "boolean",
                "description": "Determines whether the facility is using Pharmacy Directions instead of the PointClickCare generated orders directions."
              }
            }
          },
          "orderConfiguration": {
            "type": "object",
            "description": "A list of clinical order configurations associated with the facility.",
            "properties": {
              "defaultMedicationLibrary": {
                "type": "integer",
                "description": "Indicates default medication library id."
              },
              "defaultMedicationLibraryDescription": {
                "type": "string",
                "description": "Indicates default medication library description."
              },
              "epcsEnabled": {
                "type": "boolean",
                "description": "Indicates whether the e-prescribe workflow is enabled."
              },
              "pdmpEnabled": {
                "type": "boolean",
                "description": "Indicates if PDMP is enabled. The flag is true on the following conditions: <br><li>user has Vendor Protocol PDMP enabled;</li><li>user has CreateOrder and ConfirmOwnPhysOrder access;</li><li>user is a medical professional or is tied to a medical professional.</li></br>"
              },
              "quantityAndRefillRequired": {
                "type": "boolean",
                "description": "Indicates whether the quantity and refill are required for order creation."
              },
              "dischargeOrderEnabled": {
                "type": "boolean",
                "description": "Indicates whether the discharge order is enabled."
              },
              "oneSignatureEnabled": {
                "type": "boolean",
                "description": "Indicates whether the one signature is enabled."
              },
              "oneReviewEnabled": {
                "type": "boolean",
                "description": "Indicates whether the one review is enabled."
              }
            }
          },
          "orgDbType": {
            "description": "The DB type of the org.",
            "type": "string"
          },
          "orgName": {
            "description": "The name of the organization.",
            "type": "string"
          },
          "orgUuid": {
            "description": "PointClickCare's unique identifier for the organization.",
            "type": "string"
          },
          "phone": {
            "description": "The phone number of the facility, if available.",
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string"
          },
          "pickList": {
            "description": "PointClickCare provides the ability for facilities to create custom pick lists for common sets of reference data. They are used to show a list items on the UI controls that the user can 'pick' from when entering data. For example, a facility is able to customize a martial status picklist such that when creating a patient the user may only pick from list of approved values. The pick list values themselves are free-form text fields and at this time are not locale specific and case sensitivity is not important. There is no meaning associated with the ordering of the pick list values.",
            "type": "object",
            "properties": {
              "censusActionCode": {
                "type": "array",
                "description": "Represents the list of values configured for Census Action Codes by the facility. Values that can be selected for Census Action Codes are configurable at a facility level in PointClickCare.",
                "items": {
                  "properties": {
                    "actionCode": {
                      "type": "string",
                      "description": "Represents the short code associated to the action type for the ADT record. PointClickCare allows facilities to configure a value for the action code up to 5 characters long."
                    },
                    "actionType": {
                      "type": "string",
                      "description": "Represents the action type associated to the ADT record. The action types are configurable at a facility level in PointClickCare. This means that the value of this field may vary from facility to facility. Each facility defined action type is however mapped to a standard action type."
                    },
                    "id": {
                      "type": "integer",
                      "description": "Unique identifier for the pick list value for action."
                    },
                    "standardActionType": {
                      "type": "string",
                      "description": "Represents the standard action type associated to the action type. PointClickCare allows facilities to define custom action types. Each custom action type is mapped to a standard action type. Possible values for this field are: <br><li>Admission</li><li>Death</li><li>Discharge</li><li>Internal Transfer</li><li>Leave</li><li>Return From Leave</li><li>Room Reserve</li></br>"
                    }
                  }
                }
              },
              "citizenship": {
                "type": "array",
                "description": "Represents the list of values configured for Citizenship by the facility. Values that can be selected for Citizenship for a patient are configurable at a facility level in PointClickCare.",
                "items": {
                  "properties": {
                    "description": {
                      "type": "string",
                      "description": "Description of the pick list value for citizenship."
                    },
                    "id": {
                      "type": "integer",
                      "description": "Unique identifier for the pick list value for citizenship."
                    }
                  }
                }
              },
              "contactRelationships": {
                "type": "array",
                "description": "Represents the list of values configured for Contact Relationships by the facility. Values that can be selected for Relation for a contact are configurable at a facility level in PointClickCare.",
                "items": {
                  "properties": {
                    "description": {
                      "type": "string",
                      "description": "Description of the pick list value for Contact Relationships."
                    },
                    "id": {
                      "type": "integer",
                      "description": "Unique identifier for the pick list value for Contact Relationships."
                    }
                  }
                }
              },
              "contactTypes": {
                "type": "array",
                "description": "Represents the list of values configured for Contact Types by the facility. Values that can be selected for Contact Type for a contact are configurable at a facility level in PointClickCare.",
                "items": {
                  "properties": {
                    "description": {
                      "type": "string",
                      "description": "Description of the pick list value for Contact Types."
                    },
                    "guarantor": {
                      "type": "boolean",
                      "description": "Indicates whether the Contact Type is configured as the responsible party for billing at the facility."
                    },
                    "id": {
                      "type": "integer",
                      "description": "Unique identifier for the pick list value for Contact Types."
                    },
                    "isSurveyContact": {
                      "type": "boolean",
                      "description": "Indicates whether the Contact Type is configured as the Customer Experience Survey Contact."
                    },
                    "standardContactType": {
                      "type": "string",
                      "description": "The Standard Contact Type value for Contact Types."
                    }
                  }
                }
              },
              "documentCategories": {
                "type": "array",
                "description": "List of document Categories in use by the Facility. The list returned will be based on User permissions in PointClickCare. At least one of the following permissions is required to access this information: <br><li>user/adminDocumentCategory.write</li><li>user/clinicalDocumentCategory.write</li>",
                "items": {
                  "properties": {
                    "description": {
                      "type": "string",
                      "description": "Description of the document category."
                    },
                    "id": {
                      "type": "integer",
                      "description": "Unique identifier for the document category value."
                    },
                    "isCustom": {
                      "type": "boolean",
                      "description": "If true, the document category was defined by the Organization. If false, the document category is system defined and common across Organizations."
                    }
                  }
                }
              },
              "language": {
                "type": "array",
                "description": "Represents the list of values configured for Language by the facility. Values that can be selected for Language for a patient are configurable at a facility level in PointClickCare.",
                "items": {
                  "properties": {
                    "description": {
                      "type": "string",
                      "description": "Description of the pick list value for language."
                    },
                    "id": {
                      "type": "integer",
                      "description": "Unique identifier for the pick list value for language."
                    }
                  }
                }
              },
              "maritalStatus": {
                "type": "array",
                "description": "Represents the list of values configured for Marital Status by the facility. Values that can be selected for Marital Status for a patient are configurable at a facility level in PointClickCare.",
                "items": {
                  "properties": {
                    "description": {
                      "type": "string",
                      "description": "Description of the pick list value for marital status."
                    },
                    "id": {
                      "type": "integer",
                      "description": "Unique identifier for the pick list value for marital status."
                    }
                  }
                }
              },
              "prefix": {
                "type": "array",
                "description": "Represents the list of values configured for Prefix by the facility. Values that can be selected for Prefix for a patient are configurable at a facility level in PointClickCare.",
                "items": {
                  "properties": {
                    "description": {
                      "type": "string",
                      "description": "Description of the pick list value for prefix."
                    },
                    "id": {
                      "type": "integer",
                      "description": "Unique identifier for the pick list value for prefix."
                    }
                  }
                }
              },
              "race": {
                "type": "array",
                "description": "Represents the list of values configured for Race by the facility. Values that can be selected for Race for a patient are configurable at a facility level in PointClickCare.",
                "items": {
                  "properties": {
                    "description": {
                      "type": "string",
                      "description": "Description of the pick list value for race."
                    },
                    "id": {
                      "type": "integer",
                      "description": "Unique identifier for the pick list value for race."
                    }
                  }
                }
              },
              "religion": {
                "type": "array",
                "description": "Represents the list of values configured for Religion by the facility. Values that can be selected for Religion for a patient are configurable at a facility level in PointClickCare.",
                "items": {
                  "properties": {
                    "description": {
                      "type": "string",
                      "description": "Description of the pick list value for religion."
                    },
                    "id": {
                      "type": "integer",
                      "description": "Unique identifier for the pick list value for religion."
                    }
                  }
                }
              },
              "suffix": {
                "type": "array",
                "description": "Represents the list of values configured for Suffix by the facility. Values that can be selected for Suffix for a patient are configurable at a facility level in PointClickCare.",
                "items": {
                  "properties": {
                    "description": {
                      "type": "string",
                      "description": "Description of the pick list value for suffix."
                    },
                    "id": {
                      "type": "integer",
                      "description": "Unique identifier for the pick list value for suffix."
                    }
                  }
                }
              }
            }
          },
          "postalCode": {
            "description": "The postal/zip code of the facility.",
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string"
          },
          "reportFilters": {
            "description": "List of a Set of report filters selected by the facility.",
            "items": {
              "$ref": "#/components/schemas/FacilityReportFilter"
            },
            "type": "array",
            "uniqueItems": true
          },
          "serviceConfiguration": {
            "description": "A list of service task configurations associated with the facility.",
            "type": "object",
            "properties": {
              "allowDocumentationPeriod": {
                "type": "integer",
                "description": "The period, in minutes, before the scheduled time in which a service task can be documented."
              },
              "dueNowPeriod": {
                "type": "integer",
                "description": "The period, in minutes, before the scheduled time in which a service task can be completed."
              },
              "isBatchUpdateEnabled": {
                "type": "boolean",
                "description": "Indicates whether all tasks can be bulk updated using the 'Resident Not Available' response."
              },
              "lateEntryPeriod": {
                "type": "integer",
                "description": "The period, in hours, after the scheduled time in which documentation for a service task is considered a late entry."
              },
              "overNowPeriod": {
                "type": "integer",
                "description": "The period, in minutes, after the scheduled time in which a service task is considered overdue."
              },
              "patientCarePlan": {
                "type": "object",
                "description": "Details of the default care plan used for a patient.",
                "properties": {
                  "applicableToCareGivers": {
                    "type": "boolean",
                    "description": "Determines whether the resident care plan is applicable to care givers."
                  },
                  "id": {
                    "type": "integer",
                    "description": "PointClickCare's unique identifier for the care plan within the organization. If type is ASSESSMENT, this respresents the templateAssessId."
                  },
                  "type": {
                    "type": "string",
                    "description": "The type of care plan that is applicable: CARE_PLAN (i.e., the default care plan), ASSESSMENT (i.e., an assessment-driven care plan)."
                  }
                }
              },
              "standardBehaviorTrackingLevel": {
                "type": "string",
                "description": "Indicates the level of response, category vs. detailed, required for standard behavior-related documentation. Possible values: CATEGORY, DETAILED."
              },
              "standardResponses": {
                "type": "array",
                "description": "List of a list of standard responses available for all service tasks.",
                "items": {
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Short code of the standard response."
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of the standard response."
                    },
                    "isResponseForFollowUpQuestions": {
                      "type": "boolean",
                      "description": "Indicates whether the standard response is used for non-MDS related questions."
                    },
                    "isResponseForMDSQuestions": {
                      "type": "boolean",
                      "description": "Indicates whether the standard response is used for MDS-related questions."
                    }
                  }
                }
              },
              "timeTracking": {
                "type": "boolean",
                "description": "Indicates if time tracking is enabled for the facility."
              },
              "trackUnscheduledTasks": {
                "type": "boolean",
                "description": "Indicates whether unscheduled tasks can be documented for the facility."
              }
            },
            "example": {
              "codings": []
            }
          },
          "inventoryManagementConfiguration": {
            "type": "object",
            "description": "A list of inventory management configurations associated with the facility.",
            "properties": {
              "controlledSubstanceInventoryTrackingEnabled": {
                "type": "boolean",
                "description": "Flag indicating whether controlled substance inventory tracking is enabled."
              },
              "blockNegativeInventoriesEnabled": {
                "type": "boolean",
                "description": "Flag indicating whether tasks that would result in negative inventory are blocked."
              }
            }
          },
          "state": {
            "description": "The state/province/territory of the facility.",
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string"
          },
          "timeZone": {
            "description": "Represents the timezone the facility operates in.<br>If DST (Daylight Savings Time) is enabled: <br><table><th>Time Zone in PointClickCare</th><th>API Response</th><tr><td>Greenwich Mean</td><td>Europe/London</td></tr><tr><td>Atlantic</td><td>America/Halifax</td></tr><tr><td>Eastern</td><td>America/New_York</td></tr><tr><td>Central</td><td>America/Chicago</td></tr><tr><td>Mountain</td><td>America/Denver</td></tr><tr><td>Pacific</td><td>America/Los_Angeles</td></tr><tr><td>Alaska</td><td>America/Anchorage</td></tr><tr><td>Hawaii</td><td>US/Aleutian</td></tr></table>If DST is disabled:<table><th>Time Zone in PointClickCare</th><th>API Response</th><tr><td>Greenwich Mean</td><td>GMT</td></tr><tr><td>Atlantic</td><td>America/Barbados</td></tr><tr><td>Eastern</td><td> EST</td></tr><tr><td>Central</td><td>America/Regina</td></tr><tr><td>Mountain</td><td>America/Phoenix</td></tr><tr><td>Pacific</td><td>Pacific/Pitcairn</td></tr><tr><td>Alaska</td><td>Pacific/Gambier</td></tr><tr><td>Hawaii</td><td>Pacific/Honolulu</td></tr><tr><td>Hong Kong</td><td>Asia/Hong_Kong</td></tr></table>",
            "type": "string"
          },
          "timeZoneOffset": {
            "description": "The time zone offset.",
            "type": "integer"
          }
        },
        "required": [
          "addressLine1",
          "addressLine2",
          "city",
          "emailAddress",
          "facilityName",
          "fax",
          "healthType",
          "phone",
          "postalCode",
          "state"
        ],
        "title": "FacilityDetails",
        "type": "object"
      },
      "FacilityFloor": {
        "description": "Facility floors.",
        "example": {
          "facId": 1,
          "floorDesc": "Scrubbed_1",
          "floorId": 1,
          "orgUuid": "1750abe8-1b7c-4e26-969c-9d7076ff8c02"
        },
        "properties": {
          "facId": {
            "description": "PointClickCare's unique identifier for a facility within the organization.",
            "format": "int32",
            "type": "integer"
          },
          "floorDesc": {
            "description": "A description of the floor within a facility.",
            "type": "string"
          },
          "floorId": {
            "description": "PointClickCare's unique identifier for a floor within the facility.",
            "format": "int32",
            "type": "integer"
          },
          "orgUuid": {
            "description": "PointClickCare's unique identifier for the organization.",
            "type": "string"
          }
        },
        "title": "FacilityFloor",
        "type": "object"
      },
      "FacilityFloorList": {
        "description": "Facility Floor List",
        "example": {
          "data": [
            {
              "facId": 1,
              "floorDesc": "Scrubbed_1",
              "floorId": 1,
              "orgUuid": "1750abe8-1b7c-4e26-969c-9d7076ff8c02"
            },
            {
              "facId": 1,
              "floorDesc": "Scrubbed_2",
              "floorId": 2,
              "orgUuid": "1750abe8-1b7c-4e26-969c-9d7076ff8c02"
            }
          ],
          "paging": {
            "hasMore": false,
            "page": 1,
            "pageSize": 50
          }
        },
        "properties": {
          "data": {
            "description": "List of facility floors.",
            "items": {
              "$ref": "#/components/schemas/FacilityFloor"
            },
            "type": "array"
          },
          "paging": {
            "$ref": "#/components/schemas/PagingResponseByPage"
          }
        },
        "title": "FacilityFloorList",
        "type": "object"
      },
      "FacilityLineOfBusiness": {
        "description": "Facility Line Of Business.",
        "example": {
          "longDesc": "Long Description",
          "shortDesc": "Short Description"
        },
        "properties": {
          "longDesc": {
            "description": "A long description of the facility's line of business (Example: Skilled Nursing Facility).",
            "type": "string"
          },
          "shortDesc": {
            "description": "A short description of the facility's line of business (Example: SNF).",
            "type": "string"
          }
        },
        "title": "FacilityLineOfBusiness",
        "type": "object"
      },
      "FacilityList": {
        "description": "List of facilities.",
        "example": {
          "data": [
            {
              "active": true,
              "addressLine1": "389 Skidmore Road",
              "addressLine2": "P.O.Box # 21678-9087",
              "bedCount": 150,
              "billingStyleCountry": "USA",
              "city": "Crockett",
              "country": "USA",
              "countryId": 100,
              "emailAddress": "info@pcc.com",
              "environment": "www7",
              "facId": 50,
              "facilityCode": "6640",
              "facilityName": "FACILITY_50",
              "facilityStatus": "Live",
              "fax": "(678) 555-3246",
              "headOffice": false,
              "healthType": "SNF",
              "lineOfBusiness": {
                "longDesc": "Skilled Nursing Facility",
                "shortDesc": "SNF"
              },
              "orgDbType": "T",
              "orgName": "A.G. Rhodes Home",
              "orgUuid": "1750abe8-1b7c-4e26-969c-9d7076ff8c02",
              "phone": "(936) 555-9890",
              "postalCode": "75835-1810",
              "state": "TX",
              "timeZone": "America/Chicago",
              "timeZoneOffset": -3
            },
            {
              "active": true,
              "addressLine1": "708 Garrah Lane",
              "addressLine2": "P.O.Box # 31428-9233",
              "bedCount": 120,
              "billingStyleCountry": "USA",
              "city": "Dade City",
              "country": "USA",
              "countryId": 5032,
              "emailAddress": "info@facility.com",
              "environment": "www7",
              "facId": 22,
              "facilityCode": "6642",
              "facilityName": "FACILITY_22",
              "facilityStatus": "Live",
              "fax": "(352) 555-4489",
              "headOffice": false,
              "healthType": "SNF",
              "lineOfBusiness": {
                "longDesc": "Skilled Nursing Facility",
                "shortDesc": "SNF"
              },
              "orgDbType": "P",
              "orgName": "A.G. Rhodes Home",
              "orgUuid": "1950abe8-1b7c-4e26-967c-9d7076ff8c02",
              "phone": "(352) 555-8675",
              "postalCode": "33525-4526",
              "state": "FL",
              "timeZone": "America/New_York",
              "timeZoneOffset": 13
            }
          ],
          "paging": {
            "hasMore": false,
            "page": 1,
            "pageSize": 50
          }
        },
        "properties": {
          "data": {
            "description": "List of facilities.",
            "items": {
              "$ref": "#/components/schemas/Facility"
            },
            "type": "array"
          },
          "paging": {
            "$ref": "#/components/schemas/PagingResponseByPage"
          }
        },
        "title": "FacilityList",
        "type": "object"
      },
      "FacilityReportFilter": {
        "description": "A Set of report filters selected by the facility.",
        "example": {
          "items": [
            {
              "reportFilterItemId": 1
            },
            {
              "reportFilterItemId": 2
            }
          ],
          "reportFilterId": 1
        },
        "properties": {
          "items": {
            "description": "List of a Set of report filter items selected by the facility for a specified report filter.",
            "items": {
              "$ref": "#/components/schemas/FacilityReportFilterItem"
            },
            "type": "array",
            "uniqueItems": true
          },
          "reportFilterId": {
            "description": "PointClickCare's unique identifier for the facility report.",
            "format": "int32",
            "type": "integer"
          }
        },
        "title": "FacilityReportFilter",
        "type": "object"
      },
      "FacilityReportFilterItem": {
        "description": "A Set of report filter items selected by the facility for a specified report filter.",
        "example": {
          "reportFilterItemId": 1
        },
        "properties": {
          "reportFilterItemId": {
            "description": "PointClickCare's unique identifier for the selected report value in a facility.",
            "format": "int32",
            "type": "integer"
          }
        },
        "title": "FacilityReportFilterItem",
        "type": "object"
      },
      "FacilityRoomList": {
        "description": "Facility Room List",
        "example": {
          "data": [
            {
              "amenities": [
                {
                  "description": "Private Bathroom",
                  "id": 12528
                },
                {
                  "description": "Flat Screen TV",
                  "id": 12538
                }
              ],
              "facId": 1,
              "floorId": 1,
              "orgUuid": "1750abe8-1b7c-4e26-969c-9d7076ff8c02",
              "roomDesc": "201",
              "roomId": 1,
              "unitId": 94
            },
            {
              "amenities": [
                {
                  "description": "Suite",
                  "id": 12590
                }
              ],
              "facId": 1,
              "floorId": 1,
              "orgUuid": "1750abe8-1b7c-4e26-969c-9d7076ff8c02",
              "roomDesc": "203",
              "roomId": 3,
              "unitId": 94
            }
          ],
          "paging": {
            "hasMore": false,
            "page": 1,
            "pageSize": 50
          }
        },
        "properties": {
          "data": {
            "description": "List of facility rooms.",
            "items": {
              "$ref": "#/components/schemas/Room"
            },
            "type": "array"
          },
          "paging": {
            "$ref": "#/components/schemas/PagingResponseByPage"
          }
        },
        "title": "FacilityRoomList",
        "type": "object"
      },
      "FacilityTerm": {
        "description": "A list of terms used by the facility.",
        "example": {
          "admission": "Admission",
          "assessment": "Assessment",
          "bed": "Bed",
          "discharge": "Discharge",
          "facility": "Community",
          "focus": "Focus",
          "goal": "Goal",
          "intervention": "Intervention",
          "kardex": "Kardex",
          "patient": "Participant",
          "room": "Room",
          "task": "Task"
        },
        "properties": {
          "admission": {
            "description": "Term used for Admission by the facility.",
            "type": "string"
          },
          "assessment": {
            "description": "Term used for Assessment by the facility.",
            "type": "string"
          },
          "bed": {
            "description": "Term used for Bed by the facility.",
            "type": "string"
          },
          "discharge": {
            "description": "Term used for Discharge by the facility.",
            "type": "string"
          },
          "facility": {
            "description": "Term used for Facility by the facility.",
            "type": "string"
          },
          "focus": {
            "description": "Term used for Focus by the facility.",
            "type": "string"
          },
          "goal": {
            "description": "Term used for Goal by the facility.",
            "type": "string"
          },
          "intervention": {
            "description": "Term used for Intervention by the facility.",
            "type": "string"
          },
          "kardex": {
            "description": "Term used for Kardex by the facility.",
            "type": "string"
          },
          "patient": {
            "description": "Term used for Patient by the facility.",
            "type": "string"
          },
          "room": {
            "description": "Term used for Room by the facility.",
            "type": "string"
          },
          "task": {
            "description": "Term used for Task by the facility.",
            "type": "string"
          }
        },
        "title": "FacilityTerm",
        "type": "object"
      },
      "FacilityUnit": {
        "description": "Facility units.",
        "example": {
          "facId": 1,
          "orgUuid": "1750abe8-1b7c-4e26-969c-9d7076ff8c02",
          "unitDesc": "Scrubbed_1",
          "unitId": 1
        },
        "properties": {
          "facId": {
            "description": "PointClickCare's unique identifier for a facility within the organization.",
            "format": "int32",
            "type": "integer"
          },
          "orgUuid": {
            "description": "PointClickCare's unique identifier for the organization.",
            "type": "string"
          },
          "unitDesc": {
            "description": "A description of the unit within a facility.",
            "type": "string"
          },
          "unitId": {
            "description": "PointClickCare's unique identifier for a unit within the facility.",
            "format": "int32",
            "type": "integer"
          }
        },
        "title": "FacilityUnit",
        "type": "object"
      },
      "FacilityUnitList": {
        "description": "Facility Unit List",
        "example": {
          "data": [
            {
              "facId": 1,
              "orgUuid": "1750abe8-1b7c-4e26-969c-9d7076ff8c02",
              "unitDesc": "Scrubbed_1",
              "unitId": 1
            },
            {
              "facId": 1,
              "orgUuid": "1750abe8-1b7c-4e26-969c-9d7076ff8c02",
              "unitDesc": "Scrubbed_2",
              "unitId": 2
            }
          ],
          "paging": {
            "hasMore": false,
            "page": 1,
            "pageSize": 50
          }
        },
        "properties": {
          "data": {
            "description": "List of facility units.",
            "items": {
              "$ref": "#/components/schemas/FacilityUnit"
            },
            "type": "array"
          },
          "paging": {
            "$ref": "#/components/schemas/PagingResponseByPage"
          }
        },
        "title": "FacilityUnitList",
        "type": "object"
      },
      "GetDailyBalanceResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "description": "List of Daily Balance for all patients in a facility.",
            "items": {
              "$ref": "#/components/schemas/DailyBalanceDto"
            }
          }
        },
        "title": "GetDailyBalanceResponse",
        "description": "List of Daily Balance for all patients in a facility.",
        "example": {
          "data": [
            {
              "patientId": 1,
              "residentNumber": "AEB385DD61954F4",
              "residentFirstName": "John",
              "residentLastName": "Smith",
              "currentBalance": "1000.00",
              "currency": "CDN",
              "location": "Location 1",
              "facilityId": 1,
              "facilityCode": "fac1"
            },
            {
              "patientId": 2,
              "residentNumber": "AEB345DD61987G5",
              "residentFirstName": "Jane",
              "residentLastName": "Smith",
              "currentBalance": "1500.70",
              "currency": "CDN",
              "location": "Location 2",
              "facilityId": 2
            }
          ]
        }
      },
      "FacilityUnitOfMeasure": {
        "description": "Unit of measure used by the facility for each vital.",
        "example": {
          "bloodPressure": "mmHg",
          "bloodSugar": "mg/dL",
          "heartRate": "bpm",
          "height": "Cm",
          "oxygenSaturation": "%",
          "respirations": "Breaths/min",
          "temperature": "°C",
          "weight": "Kg"
        },
        "properties": {
          "bloodPressure": {
            "description": "Unit of measure used by the facility for Blood Pressure. The unit is always mmHg regardless of the facility's Unit of Measure configuration.",
            "type": "string"
          },
          "bloodSugar": {
            "description": "Unit of measure used by the facility for Blood Sugar. The default unit is mg/dL for facilities using Imperial units and mmol/L for facilities using Metric units. Note: the facilities have the ability to override the default unit used for Blood Sugar.",
            "type": "string"
          },
          "heartRate": {
            "description": "Unit of measure used by the facility for Heart Rate. The unit is always bpm regardless of the facility's Unit of Measure configuration.",
            "type": "string"
          },
          "height": {
            "description": "Unit of measure used by the facility for the Height. The default unit is inches for facilities using Imperial units and cm for facilities using Metric units.",
            "type": "string"
          },
          "oxygenSaturation": {
            "description": "Unit of measure used by the facility for the Oxygen Saturation. The unit is always % regardless of the facility's Unit of Measure configuration.",
            "type": "string"
          },
          "respirations": {
            "description": "Unit of measure used by the facility for Respirations. The unit is always Breaths/min regardless of the facility's Unit of Measure configuration.",
            "type": "string"
          },
          "temperature": {
            "description": "Unit of measure used by the facility for Temperature. The unit is °F for facilities using Imperial units, and °C for facilities using Metric units.",
            "type": "string"
          },
          "weight": {
            "description": "Unit of measure used by the facility for Weight. The unit is lbs for facilities using Imperial units, and Kg for facilities using Metric units.",
            "type": "string"
          }
        },
        "title": "FacilityUnitOfMeasure",
        "type": "object"
      },
      "GetAppActivationList": {
        "description": "List of App Activations.",
        "example": {
          "data": [
            {
              "orgUuid": "1750abe8-1b7c-4e26-969c-9d7076ff8c02",
              "scope": 1
            },
            {
              "facilityInfo": [
                {
                  "activationDate": "2020-11-30",
                  "facId": 101
                },
                {
                  "activationDate": "2020-11-30",
                  "facId": 102
                }
              ],
              "orgUuid": "1750abe8-1b7c-4e26-969c-9d7076ff8c02",
              "scope": 2
            },
            {
              "orgUuid": "1750abe8-1b7c-4e26-969c-9d7076ff8c02",
              "scope": 2
            }
          ],
          "paging": {
            "hasMore": false,
            "page": 1,
            "pageSize": 50
          }
        },
        "properties": {
          "data": {
            "description": "List of the Organizations and Facilities where the application is activated.",
            "items": {
              "$ref": "#/components/schemas/GetAppActivation"
            },
            "type": "array"
          },
          "paging": {
            "$ref": "#/components/schemas/PagingResponseByPage"
          }
        },
        "title": "GetAppActivationList",
        "type": "object"
      },
      "GetAppActivation": {
        "description": "the Organizations and Facilities where the application is activated.",
        "example": {
          "orgUuid": "1750abe8-1b7c-4e26-969c-9d7076ff8c02",
          "scope": 1
        },
        "properties": {
          "facilityInfo": {
            "description": "List of all the facilities in which the application is activated. If the scope is 'Corporate', this array will be empty, but the application has been activated in all facilities. If the scope is 'Facility' but no facilityInfo is returned, the application is ready to be activated in facilities but has not been yet.",
            "items": {
              "$ref": "#/components/schemas/AppFacility"
            },
            "type": "array"
          },
          "orgUuid": {
            "description": "PointClickCare's unique identifier for the organization.",
            "type": "string"
          },
          "scope": {
            "description": "Represents the activation scope for the application for the specific organization. Possible values are 1 (corporate) or 2 (facility). If value is Corporate, app is activated for all Facilities.",
            "format": "int32",
            "type": "integer"
          }
        },
        "title": "GetAppActivation",
        "type": "object"
      },
      "GetBackupFilesResponse": {
        "description": "Returns backup files the customer has subscribed to. The format is specified in Content-Type header",
        "title": "GetBackupFilesResponse",
        "type": "object"
      },
      "GetCalendarEvent": {
        "description": "Get Calendar Event.",
        "example": {
          "calendarEventId": 12345,
          "description": "Bingo Night"
        },
        "properties": {
          "calendarEventId": {
            "description": "An identifier for a calendar event.",
            "format": "int32",
            "type": "integer"
          },
          "description": {
            "description": "Description of the event. Max of 200 characters.",
            "type": "string"
          }
        },
        "title": "GetCalendarEvent",
        "type": "object"
      },
      "GetCalendarEventDetails": {
        "description": "Calendar Event",
        "example": {
          "calendarEventId": 67,
          "description": "Test Event",
          "endDateTime": "2018-10-16T06:00:00.000Z",
          "eventType": "Bingo",
          "facId": 1,
          "location": "Woodbine Casine",
          "maxNumberOfParticipants": 5,
          "notes": "Come prepared for a weekend of fun!",
          "occurrenceIds": [
            988731,
            988732,
            988733,
            988734
          ],
          "otherPersonnel": "Jeff Smith, Joe Smith",
          "participantIds": [
            14539,
            14540,
            14541
          ],
          "resources": [
            "Bingo Cards",
            "Markers"
          ],
          "rrule": "FREQ=DAILY;INTERVAL=1;UNTIL=2018-10-20",
          "startDateTime": "2018-10-16T05:00:00.000Z"
        },
        "properties": {
          "calendarEventId": {
            "description": "An identifier for a calendar event.",
            "format": "int32",
            "type": "integer"
          },
          "description": {
            "description": "Description of the event.",
            "type": "string"
          },
          "endDateTime": {
            "description": "End date & time of the event. This field will always be returned.<br/>Note: If the event reoccurs, the endDateTime will reflect the end of the first occurrence of the event.",
            "format": "date-time",
            "type": "string"
          },
          "eventType": {
            "description": "Types of events Facility residents can attend. Is defined by Facility Users. Only 1 facility defined eventType can be specified for an event.",
            "type": "string"
          },
          "facId": {
            "description": "PointClickCare's unique identifier for a facility within the organization. This parameter is specific to facility/community level events. Either patientId or facId will always be returned, but not both.",
            "format": "int32",
            "type": "integer"
          },
          "location": {
            "description": "Locations where events can be held. Is defined by Facility Users. Only 1 facility defined location can be specified for an event.",
            "type": "string"
          },
          "maxNumberOfParticipants": {
            "description": "The maximum number of patients that can attend the event. This field is specific to Facility/Community level events. If specified when the event was created, it will be returned.",
            "format": "int32",
            "type": "integer"
          },
          "notes": {
            "description": "Additional details of the event.",
            "type": "string"
          },
          "occurrenceIds": {
            "description": "A list of identifiers for occurrences of this event. The identifiers will be used as inputs to mark attendance to occurrences.",
            "items": {
              "format": "int32",
              "type": "integer"
            },
            "type": "array"
          },
          "otherPersonnel": {
            "description": "Other personnel that may be required to assist with the event.",
            "type": "string"
          },
          "participantIds": {
            "description": "PointClickCare's unique identifiers for patients (patientId's) that are signed up to attend the event. This field is specific to Facility/Community level events. If specified when the event was created, it will be returned.",
            "items": {
              "format": "int32",
              "type": "integer"
            },
            "type": "array"
          },
          "patientId": {
            "description": "PointClickCare's unique identifier for a patient for whom the event was created. This parameter will only be returned if it is a patient specific event.",
            "format": "int32",
            "type": "integer"
          },
          "resources": {
            "description": "Types of resources required for events at the Facility. Is defined by Facility Users. Multiple resources can be specified for an event.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "rrule": {
            "description": "Defines a rule or repeating pattern for recurring events, based on RFC 5545 published by the IETF. Only one rrule is allowed per event. If an rrule is specified, it must consist of:<ul><li>FREQ</li><li>INTERVAL</li><li>BYDAY</li><li>COUNT or UNTIL</li></ul>A sample structure is \"FREQ=WEEKLY;INTERVAL=2;BYDAY=SU;UNTIL=2016-12-30\".<br/>The structure lists FREQ first.<br/>Note: Occurrences are supported for a maximum span of 1 year from the startDateTime of the event.<br/>Note: PointClickCare currently only supports Daily & Weekly schedules. If details about a Monthly or Yearly recurring event are being requested, the following string will be returned in the rrule:<br/>\"Recurrence Rule Not Supported for Monthly or Yearly events.\"<br/><u>Note: No rrule will be returned for a non recurring event.</u><br/>FREQ (string): The type of recurrence rule. Supported values are 'DAILY' and 'WEEKLY'.<br/>UNTIL (date): Date value (YYYY:MM:DD) at which recurrence should end. This can not be passed together with COUNT.<br/>COUNT (integer): Number of occurrences of the recurring event. Allowed values are between 1 and 53 inclusive for weekly events, and between 1 and 366 inclusive for daily events. This field can not be passed together with UNTIL.<br/>INTERVAL (integer): A positive integer representing the interval between the occurrences of the event. Allowed values are between 1 and 53 for weekly events and between 1 and 366 for daily events.<br/>BYDAY (string): List of days of the week. Allowed values are MO, TU, WE, TH, FR, SA and SU.Values are separated by a COMMA character (US-ASCII decimal 44). This field can not be used when FREQ is 'DAILY'.<br/>",
            "type": "string"
          },
          "startDateTime": {
            "description": "Start date & time of the event. This field will always be returned.",
            "format": "date-time",
            "type": "string"
          }
        },
        "title": "GetCalendarEventDetails",
        "type": "object"
      },
      "GetCalendarEventListResponse": {
        "description": "List of Calendar Events.",
        "example": {
          "data": [
            {
              "calendarEventId": 12345,
              "description": "Bingo Night"
            },
            {
              "calendarEventId": 13134,
              "description": "Bingo Night"
            }
          ]
        },
        "properties": {
          "data": {
            "description": "List of get Calendar Event.",
            "items": {
              "$ref": "#/components/schemas/GetCalendarEvent"
            },
            "type": "array"
          }
        },
        "title": "GetCalendarEventListResponse",
        "type": "object"
      },
      "GetCalendarOccurrence": {
        "description": "Get Calendar Occurrence.",
        "example": {
          "attendeeIds": [
            2343433
          ],
          "calendarEventId": 1,
          "description": "Movie Night",
          "endDateTime": "2018-11-02T14:30:00.000Z",
          "facId": 3,
          "location": "Silver City",
          "notes": "Watching Toy Story 3.",
          "occurrenceId": 988732,
          "otherPersonnel": "David Lee",
          "participantIds": [
            2343433
          ],
          "resources": [
            "Bus"
          ],
          "startDateTime": "2018-11-02T13:30:00.000Z"
        },
        "properties": {
          "attendeeIds": {
            "description": "PatientIds of the attendees for this event occurrence.",
            "items": {
              "format": "int32",
              "type": "integer"
            },
            "type": "array"
          },
          "calendarEventId": {
            "description": "An identifier for a calendar event.",
            "format": "int32",
            "type": "integer"
          },
          "description": {
            "description": "Description of the event. Max of 200 characters.",
            "type": "string"
          },
          "endDateTime": {
            "description": "End date & time of the occurrence. This field will always be returned. The Date and Time is expressed in UTC in the following format YYYY-MM-DDTHH:MM:SS.sssZ.",
            "format": "date-time",
            "type": "string"
          },
          "eventType": {
            "description": "Types of events facility residents can attend. Is defined by facility users. Only 1 facility defined eventType can be specified for an event. Values can be obtained by calling the EventConfigurations API.",
            "type": "string"
          },
          "facId": {
            "description": "PointClickCare's unique identifier for a facility within the organization. This field is specific to facility/community level events.",
            "format": "int32",
            "type": "integer"
          },
          "location": {
            "description": "Locations where events can be held. Is defined by facility users. Only 1 facility defined location can be specified for an event. Values can be obtained by calling the EventConfigurations API.",
            "type": "string"
          },
          "maxNumberOfParticipants": {
            "description": "The maximum number of participants that can attend the event. This field is specific to facility/community level events. If specified when the event was created, it will be returned.",
            "format": "int32",
            "type": "integer"
          },
          "notes": {
            "description": "Additional details of the event. Max of 200 characters.",
            "type": "string"
          },
          "occurrenceId": {
            "description": "An identifier for a specific occurrence of a calendar event.",
            "type": "integer"
          },
          "otherPersonnel": {
            "description": "Other personnel that may be required to assist with the event. Max of 120 characters.",
            "type": "string"
          },
          "participantIds": {
            "description": "PatientIds of the participants for this event occurrence.",
            "items": {
              "format": "int32",
              "type": "integer"
            },
            "type": "array"
          },
          "resources": {
            "description": "Types of resources required for events at the facility. Is defined by facility users. Multiple resources can be specified for an event. Values can be obtained by calling the EventConfigurations API.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "startDateTime": {
            "description": "Start date & time of the occurrence. This field will always be returned. The Date and Time is expressed in UTC in the following format YYYY-MM-DDTHH:MM:SS.sssZ.",
            "format": "date-time",
            "type": "string"
          }
        },
        "title": "GetCalendarOccurrence",
        "type": "object"
      },
      "GetCalendarOccurrenceList": {
        "description": "Get Calendar Occurrence.",
        "example": {
          "calendarEventId": 1,
          "description": "Bingo Night",
          "endDateTime": "2018-11-01T14:30:00.000Z",
          "occurrenceId": 81101,
          "startDateTime": "2018-11-01T13:30:00.000Z"
        },
        "properties": {
          "calendarEventId": {
            "description": "An identifier for a calendar event.",
            "format": "int32",
            "type": "integer"
          },
          "description": {
            "description": "Description of the event. Max of 200 characters.",
            "type": "string"
          },
          "endDateTime": {
            "description": "End date & time of the occurrence. This field will always be returned. The Date and Time is expressed in UTC in the following format YYYY-MM-DDTHH:MM:SS.sssZ.",
            "format": "date-time",
            "type": "string"
          },
          "occurrenceId": {
            "description": "An identifier for a specific occurrence of a calendar event.",
            "type": "integer"
          },
          "startDateTime": {
            "description": "Start date & time of the occurrence. This field will always be returned. The Date and Time is expressed in UTC in the following format YYYY-MM-DDTHH:MM:SS.sssZ.",
            "format": "date-time",
            "type": "string"
          }
        },
        "title": "GetCalendarOccurrenceList",
        "type": "object"
      },
      "GetCalendarOccurrenceListResponse": {
        "description": "List of Calendar Occurrences.",
        "example": {
          "data": [
            {
              "calendarEventId": 1,
              "description": "Bingo Night",
              "endDateTime": "2018-11-01T14:30:00.000Z",
              "occurrenceId": 81101,
              "startDateTime": "2018-11-01T13:30:00.000Z"
            },
            {
              "calendarEventId": 2,
              "description": "Movie Night",
              "endDateTime": "2018-11-02T14:30:00.000Z",
              "occurrenceId": 988732,
              "startDateTime": "2018-11-02T13:30:00.000Z"
            }
          ]
        },
        "properties": {
          "data": {
            "description": "List of get Calendar Occurrence.",
            "items": {
              "$ref": "#/components/schemas/GetCalendarOccurrenceList"
            },
            "type": "array"
          }
        },
        "title": "GetCalendarOccurrenceListResponse",
        "type": "object"
      },
      "GetCarePlan": {
        "description": "Care plan for a patient.",
        "example": {
          "carePlanId": 115,
          "createdBy": "Clara Schiff",
          "createdDate": "2020-01-25T04:45:15.000Z",
          "facId": 3,
          "nextReviewDate": "2020-10-06T04:45:15.000Z",
          "patientId": 738338,
          "revisionBy": "Rob Keller",
          "revisionDate": "2020-09-12T04:45:15.000Z",
          "status": "Active"
        },
        "properties": {
          "carePlanId": {
            "description": "PointClickCare's unique identifier for a patient's care plan.",
            "format": "int32",
            "type": "integer"
          },
          "closedBy": {
            "description": "Represents the user that closed the care plan.",
            "type": "string"
          },
          "closedDate": {
            "description": "Represents the date and time when the care plan was closed.",
            "format": "date-time",
            "type": "string"
          },
          "closureReason": {
            "description": "Reason for closing the care plan.",
            "type": "string"
          },
          "createdBy": {
            "description": "Represents the user that created the care plan.",
            "type": "string"
          },
          "createdDate": {
            "description": "Represents the date and time when the care plan was created.",
            "format": "date-time",
            "type": "string"
          },
          "facId": {
            "description": "PointClickCare's unique identifier for a facility within the organization.",
            "format": "int32",
            "type": "integer"
          },
          "focuses": {
            "description": "List of focuses which are part of the care plan.",
            "items": {
              "$ref": "#/components/schemas/GetFocus"
            },
            "type": "array"
          },
          "nextReviewDate": {
            "description": "Represents the date and time when the care plan will be reviewed.",
            "format": "date-time",
            "type": "string"
          },
          "patientId": {
            "description": "PointClickCare's unique identifier for a patient within the organization.",
            "format": "int32",
            "type": "integer"
          },
          "revisionBy": {
            "description": "Represents the user that last modified the care plan.",
            "type": "string"
          },
          "revisionDate": {
            "description": "Represents the date and time when the care plan was last modified.",
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "description": "Represents the status of the care plan. Possible values are \"Active\" and \"Closed\".",
            "type": "string"
          }
        },
        "title": "GetCarePlan",
        "type": "object"
      },
      "GetCarePlanListResponse": {
        "description": "List of care plans",
        "example": {
          "data": [
            {
              "carePlanId": 115,
              "createdBy": "Clara Schiff",
              "createdDate": "2020-01-25T04:45:15.000Z",
              "facId": 3,
              "nextReviewDate": "2020-10-06T04:45:15.000Z",
              "patientId": 738338,
              "revisionBy": "Rob Keller",
              "revisionDate": "2020-09-12T04:45:15.000Z",
              "status": "Active"
            },
            {
              "carePlanId": 5888,
              "closedBy": "Jamie McLaughlin",
              "closedDate": "2020-10-05T17:20:55.000Z",
              "closureReason": "Change Clinical Library",
              "createdBy": "Una Owen",
              "createdDate": "2020-01-25T04:45:15.000Z",
              "facId": 3,
              "focuses": [
                {
                  "createdDate": "2020-01-25T04:45:15.000Z",
                  "description": "Risk for Malnutrition Mood Disorders",
                  "focusId": 658,
                  "status": "Cancelled"
                },
                {
                  "createdDate": "2020-01-25T04:45:15.000Z",
                  "description": "The Resident (Family have stated preference that in the event cardiac function stops, no resuscitative measures be started.",
                  "focusId": 658,
                  "status": "Resolved"
                }
              ],
              "nextReviewDate": "2021-04-06T14:00:15.000Z",
              "patientId": 738338,
              "revisionBy": "Brett Jones",
              "revisionDate": "2020-09-12T05:33:15.000Z",
              "status": "Closed"
            }
          ],
          "paging": {
            "hasMore": false,
            "page": 1,
            "pageSize": 50
          }
        },
        "properties": {
          "data": {
            "description": "List of care plan for a patient.",
            "items": {
              "$ref": "#/components/schemas/GetCarePlan"
            },
            "type": "array"
          },
          "paging": {
            "$ref": "#/components/schemas/PagingResponseByPage"
          }
        },
        "title": "GetCarePlanListResponse",
        "type": "object"
      },
      "GetStatement": {
        "description": "If successful, this method returns a response body with the following structure.",
        "example": {
          "statementId": "A-84C-3R",
          "orgCode": "ORG1",
          "orgId": 12245214,
          "facId": 10,
          "eventType": "STATEMENT_MESSAGE",
          "externalBatchId": "12210020-18-166-20211210-124046",
          "consolidate": true,
          "guarantor": {
            "id": 135,
            "firstName": "Maria",
            "lastName": "Poole",
            "address1": "179-6649 Est Avenue",
            "address2": "",
            "address3": "",
            "county": "",
            "city": "Durham",
            "state": "NH",
            "country": "United States",
            "zipCode": "69973",
            "email": "C0B6A.F9DDB@799AF8F.COM",
            "summary": {
              "grandTotal": 2583,
              "lateFees": 0,
              "balanceForward": 0,
              "cashPayments": 0,
              "onlineId": "135"
            }
          },
          "resident": {
            "patientId": 7500438,
            "admitDate": "Jan 1, 2021 12:00:00 AM",
            "dischargeDate": "Jan 21, 2021 12:00:00 AM",
            "residentNumber": "66CEE30334F345C",
            "firstName": "Phoenix",
            "lastName": "Blanchard",
            "dob": "Apr 14, 1935 12:00:00 AM",
            "location": "",
            "invoiceMessage": "",
            "groupMessage": "",
            "eftEnabled": false,
            "eftMessage": "",
            "facility": {
              "id": 10,
              "name": "FACILITY_10",
              "code": "60029"
            },
            "invoice": {
              "number": "1520",
              "date": "Dec 31, 2021 12:00:00 AM",
              "dueDate": "Jan 15, 2022 12:00:00 AM",
              "currentCharges": 2583,
              "totalAmountDue": 2583,
              "transactions": [
                {
                  "type": "00",
                  "description": "BALANCE FORWARD",
                  "totalAmount": 0
                },
                {
                  "dateOfService": "Jan 1, 2021 12:00:00 AM",
                  "type": "R",
                  "description": "Assisted Living Room Jan 01-21 2021 (21@123.00)",
                  "quantity": "21,",
                  "unitAmount": "123.0,",
                  "totalAmount": 2583
                }
              ]
            }
          },
          "type": "Statement",
          "scheduleId": 1024522,
          "statementData": {
            "facilityGroup": {
              "campusId": "1412",
              "number": "63356",
              "name": "FACILITY_GROUP__00079DA3-B29B-4704-9",
              "address1": "681-8777 Consequat Rd.",
              "address2": "",
              "address3": "",
              "county": "Duval",
              "city": "Jacksonville",
              "state": "FL",
              "country": "United States",
              "zipCode": "79678",
              "telephone": "(112)111-3766"
            },
            "remitTo": {
              "name": "FACILITY_GROUP__00079DA3-B29B-4704-9",
              "address1": "556-9295 Donec St.",
              "address2": "",
              "address3": "",
              "county": "Cook",
              "city": "Chicago",
              "state": "IL",
              "country": "United States",
              "zipCode": "12392",
              "telephone": ""
            },
            "configuration": {
              "terms": {
                "patient": "Resident",
                "admission": "Move in",
                "discharge": "Move out"
              },
              "show": {
                "invoiceNumber": false,
                "location": true,
                "admitDate": true,
                "dischargeDate": false,
                "patientNumber": true,
                "transactionWarningMessage": false
              },
              "other": {
                "prefixFacCodeToAccountNumber": "false,",
                "checksPayableTo": "Please make checks payable to: FACILITY_GROUP__00079DA3-B29B-4704-9",
                "paymentInstruction": "Please detach and return with your payment.",
                "transactionWarningMessage": "This statement only includes transactions up to 12/31/2021. All Transactions processed after 12/31/2021 will appear on your next statement.",
                "labelForAccountNumber": "CONTACT NO.",
                "accountNumberOption": "C"
              }
            }
          }
        },
        "properties": {
          "data": {
            "description": "Statement details of a patient/contact.",
            "items": {
              "$ref": "#/components/schemas/GetStatementResponses"
            },
            "type": "array"
          }
        },
        "title": "GetStatement",
        "type": "object"
      },
      "GetStatementResponses": {
        "description": "Statement",
        "example": {
          "statementId": "A-84C-3R",
          "orgCode": "ORG1",
          "orgId": 12245214,
          "facId": 10,
          "eventType": "STATEMENT_MESSAGE",
          "externalBatchId": "12210020-18-166-20211210-124046",
          "consolidate": true,
          "guarantor": {
            "id": 135,
            "firstName": "Maria",
            "lastName": "Poole",
            "address1": "179-6649 Est Avenue",
            "address2": "",
            "address3": "",
            "county": "",
            "city": "Durham",
            "state": "NH",
            "country": "United States",
            "zipCode": "69973",
            "email": "C0B6A.F9DDB@799AF8F.COM",
            "summary": {
              "grandTotal": 2583,
              "lateFees": 0,
              "balanceForward": 0,
              "cashPayments": 0,
              "onlineId": "135"
            }
          },
          "resident": {
            "patientId": 7500438,
            "admitDate": "Jan 1, 2021 12:00:00 AM",
            "dischargeDate": "Jan 21, 2021 12:00:00 AM",
            "residentNumber": "66CEE30334F345C",
            "firstName": "Phoenix",
            "lastName": "Blanchard",
            "dob": "Apr 14, 1935 12:00:00 AM",
            "location": "",
            "invoiceMessage": "",
            "groupMessage": "",
            "eftEnabled": false,
            "eftMessage": "",
            "facility": {
              "id": 1,
              "name": "FACILITY_1",
              "code": "60029"
            },
            "invoice": {
              "number": "1520",
              "date": "Dec 31, 2021 12:00:00 AM",
              "dueDate": "Jan 15, 2022 12:00:00 AM",
              "currentCharges": 2583,
              "totalAmountDue": 2583,
              "transactions": [
                {
                  "type": "00",
                  "description": "BALANCE FORWARD",
                  "totalAmount": 0
                },
                {
                  "dateOfService": "Jan 1, 2021 12:00:00 AM",
                  "type": "R",
                  "description": "Assisted Living Room Jan 01-21 2021 (21@123.00)",
                  "quantity": "21,",
                  "unitAmount": "123.0,",
                  "totalAmount": 2583
                }
              ]
            },
            "type": "Statement",
            "statementData": {
              "facilityGroup": {
                "campusId": "1412",
                "number": "63356",
                "name": "FACILITY_GROUP__00079DA3-B29B-4704-9",
                "address1": "681-8777 Consequat Rd.",
                "address2": "",
                "address3": "",
                "county": "Duval",
                "city": "Jacksonville",
                "state": "FL",
                "country": "United States",
                "zipCode": "79678",
                "telephone": "(112)111-3766"
              },
              "remitTo": {
                "name": "FACILITY_GROUP__00079DA3-B29B-4704-9",
                "address1": "556-9295 Donec St.",
                "address2": "",
                "address3": "",
                "county": "Cook",
                "city": "Chicago",
                "state": "IL",
                "country": "United States",
                "zipCode": "12392",
                "telephone": ""
              },
              "configuration": {
                "terms": {
                  "patient": "Resident",
                  "admission": "Move in",
                  "discharge": "Move out"
                },
                "show": {
                  "invoiceNumber": false,
                  "location": true,
                  "admitDate": true,
                  "dischargeDate": false,
                  "patientNumber": true,
                  "transactionWarningMessage": false
                },
                "other": {
                  "prefixFacCodeToAccountNumber": "false,",
                  "checksPayableTo": "Please make checks payable to: FACILITY_GROUP__00079DA3-B29B-4704-9",
                  "paymentInstruction": "Please detach and return with your payment.",
                  "transactionWarningMessage": "This statement only includes transactions up to 12/31/2021. All Transactions processed after 12/31/2021 will appear on your next statement.",
                  "labelForAccountNumber": "CONTACT NO.",
                  "accountNumberOption": "C"
                }
              }
            }
          }
        },
        "properties": {
          "statementId": {
            "description": "PointClickCare's unique identifier for a statement.",
            "type": "string"
          },
          "orgCode": {
            "description": "Organization code.",
            "type": "string"
          },
          "orgId": {
            "description": "PointClickCare's unique identifier for an organization.",
            "format": "int32",
            "type": "integer"
          },
          "facId": {
            "description": "PointClickCare's unique identifier for a facility within an organization.",
            "format": "int32",
            "type": "integer"
          },
          "eventType": {
            "description": "A unique type of response message.",
            "type": "string"
          },
          "externalBatchId": {
            "description": "A unique identifier for vendor.",
            "type": "string"
          },
          "consolidate": {
            "description": "Indicates whether the statement should be consolidated or not.",
            "type": "boolean"
          },
          "guarantor": {
            "description": "Guarantor details.",
            "type": "object"
          },
          "guarantor.id": {
            "description": "The unique system ID of Guarantor.",
            "type": "string"
          },
          "guarantor.firstName": {
            "description": "Guarantor First Name.",
            "type": "string"
          },
          "guarantor.lastName": {
            "description": "Guarantor Last Name.",
            "type": "string"
          },
          "guarantor.address1": {
            "description": "Guarantor Address line 1.",
            "type": "string"
          },
          "guarantor.address2": {
            "description": "Guarantor Address line 2.",
            "type": "string"
          },
          "guarantor.address3": {
            "description": "Guarantor Address line 3.",
            "type": "string"
          },
          "guarantor.county": {
            "description": "Guarantor County.",
            "type": "string"
          },
          "guarantor.city": {
            "description": "Guarantor City.",
            "type": "string"
          },
          "guarantor.state": {
            "description": "Guarantor State.",
            "type": "string"
          },
          "guarantor.country": {
            "description": "Guarantor Country.",
            "type": "string"
          },
          "guarantor.zipCode": {
            "description": "Guarantor Zip/Postal Code.",
            "type": "string"
          },
          "guarantor.email": {
            "description": "Guarantor Email Address.",
            "type": "string"
          },
          "guarantor.summary": {
            "description": "Billing Summary for Guarantor.",
            "type": "object"
          },
          "guarantor.summary.grandTotal": {
            "description": "Sum of Total Due Amount for all Patients under this Guarantor.",
            "type": "number"
          },
          "guarantor.summary.lateFees": {
            "description": "Late Fees if Applicable.",
            "type": "number"
          },
          "guarantor.summary.balanceForward": {
            "description": "Past Due Balance for the Statement.",
            "type": "number"
          },
          "guarantor.summary.cashPayments": {
            "description": "Cash payments made for the statement.",
            "type": "number"
          },
          "guarantor.summary.onlineId": {
            "description": "Online ID for the guarantor.",
            "type": "string"
          },
          "resident": {
            "description": "Resident details for the statement.",
            "type": "object"
          },
          "resident.patientId": {
            "description": "PointClickCare's unique identifier for a patient.",
            "format": "int32",
            "type": "integer"
          },
          "resident.admitDate": {
            "description": "Admission date of the resident.",
            "format": "date-time",
            "type": "string"
          },
          "resident.dischargeDate": {
            "description": "Discharge date of the resident.",
            "format": "date-time",
            "type": "string"
          },
          "resident.residentNumber": {
            "description": "Resident number.",
            "type": "string"
          },
          "resident.firstName": {
            "description": "Resident First Name.",
            "type": "string"
          },
          "resident.lastName": {
            "description": "Resident Last Name.",
            "type": "string"
          },
          "resident.dob": {
            "description": "Resident Date of Birth.",
            "format": "date-time",
            "type": "string"
          },
          "resident.location": {
            "description": "Resident Location within Facility.",
            "type": "string"
          },
          "resident.invoiceMessage": {
            "description": "Statement Message from the patient's AR Profile.",
            "type": "string"
          },
          "resident.groupMessage": {
            "description": "Invoice Message from the patient's AR Group.",
            "type": "string"
          },
          "resident.eftEnabled": {
            "description": "EElectronic Fund Transfer is enabled for the resident.",
            "type": "boolean"
          },
          "resident.eftMessage": {
            "description": "Electronic Fund Transfer message for the resident.",
            "type": "string"
          },
          "resident.facility": {
            "description": "Resident facility details.",
            "type": "object"
          },
          "resident.facility.id": {
            "description": "PointClickCare's unique identifier for the resident's facility.",
            "format": "int32",
            "type": "integer"
          },
          "resident.facility.name": {
            "description": "Facility Name.",
            "type": "string"
          },
          "resident.facility.code": {
            "description": "Facility Code.",
            "type": "string"
          },
          "resident.invoice": {
            "description": "Invoice details for the resident.",
            "type": "object"
          },
          "resident.invoice.number": {
            "description": "Invoice number.",
            "type": "string"
          },
          "resident.invoice.date": {
            "description": "Invoice date.",
            "format": "date-time",
            "type": "string"
          },
          "resident.invoice.deuDate": {
            "description": "Payment due date.",
            "format": "date-time",
            "type": "string"
          },
          "resident.invoice.currentCharges": {
            "description": "Current charges for the resident invoice.",
            "type": "number"
          },
          "resident.invoice.totalAmountDue": {
            "description": "Total amount due for the resident invoice.",
            "type": "number"
          },
          "resident.invoice.transactions[*]": {
            "description": "List of transaction details",
            "type": "array",
            "items": {
              "properties": {
                "resident.invoice.transactions[*].dateOfService": {
                  "description": "Transaction Date.",
                  "format": "date-time",
                  "type": "string"
                },
                "resident.invoice.transactions[*].type": {
                  "description": "PointClickCare's unique identifier for the type of transaction.",
                  "type": "string"
                },
                "resident.invoice.transactions[*].description": {
                  "description": "Transaction Description.",
                  "type": "string"
                },
                "resident.invoice.transactions[*].quantity": {
                  "description": "Transaction item quantity.",
                  "format": "int32",
                  "type": "integer"
                },
                "resident.invoice.transactions[*].unitAmount": {
                  "description": "Transaction item unit price.",
                  "type": "number"
                },
                "resident.invoice.transactions[*].totalAmount": {
                  "description": "Total Amount of Transactions.",
                  "type": "number"
                }
              }
            }
          },
          "type": {
            "description": "A unique identifier that can be used to differentiate between different types of statements if needed.",
            "type": "string"
          },
          "scheduleId": {
            "description": "PointClickCare's unique identifier for statements within a facility.",
            "format": "int32",
            "type": "integer"
          },
          "statementData": {
            "description": "Statement Data Details.",
            "type": "object"
          },
          "statementData.facilityGroup": {
            "description": "Facility Group Details.",
            "type": "object"
          },
          "statementData.data.facilityGroup.campusId": {
            "description": "Campus ID.",
            "type": "string"
          },
          "statementData.facilityGroup.number": {
            "description": "Facility group number.",
            "type": "string"
          },
          "dstatementData.ata.facilityGroup.name": {
            "description": "Facility group name.",
            "type": "string"
          },
          "statementData.facilityGroup.address1": {
            "description": "Facility group address line1.",
            "type": "string"
          },
          "statementData.facilityGroup.address2": {
            "description": "Facility group address line2.",
            "type": "string"
          },
          "statementData.facilityGroup.address3": {
            "description": "Facility group address line2.",
            "type": "string"
          },
          "statementData.facilityGroup.county": {
            "description": "Facility group county.",
            "type": "string"
          },
          "statementData.facilityGroup.city": {
            "description": "Facility group city.",
            "type": "string"
          },
          "statementData.facilityGroup.state": {
            "description": "Facility group state.",
            "type": "string"
          },
          "statementDat.facilityGroup.country": {
            "description": "Facility group country.",
            "type": "string"
          },
          "statementData.facilityGroup.zipCode": {
            "description": "Facility group zip/ postal code.",
            "type": "string"
          },
          "statementData.facilityGroup.telephone": {
            "description": "Facility group telephone number.",
            "type": "string"
          },
          "statementData.remitTo": {
            "description": "Remit to address details for the facility group.",
            "type": "object"
          },
          "statementData.remitTo.name": {
            "description": "Remit to name for facility group.",
            "type": "string"
          },
          "statementData.remitTo.address1": {
            "description": "Remit to address line1.",
            "type": "string"
          },
          "statementData.remitTo.address2": {
            "description": "Remit to address line2.",
            "type": "string"
          },
          "statementData.remitTo.address3": {
            "description": "Remit to address line3.",
            "type": "string"
          },
          "statementData.remitTo.county": {
            "description": "Remit to county.",
            "type": "string"
          },
          "statementData.remitTo.city": {
            "description": "Remit to city.",
            "type": "string"
          },
          "statementData.remitTo.state": {
            "description": "Remit to state.",
            "type": "string"
          },
          "statementData.remitTo.country": {
            "description": "Remit to country.",
            "type": "string"
          },
          "statementData.remitTo.zipCode": {
            "description": "Remit to zip/ postal code.",
            "type": "string"
          },
          "statementData.remitTo.telephone": {
            "description": "Remit to telephone number.",
            "type": "string"
          },
          "statementData.configuration": {
            "description": "Statement configuration details.",
            "type": "object"
          },
          "statementData.configuration.terms": {
            "description": "Facility specific terms for the statement.",
            "type": "object"
          },
          "statementData.configuration.terms.patient": {
            "description": "Term for Patient.",
            "type": "string"
          },
          "statementData.configuration.terms.admission": {
            "description": "Term for Admission.",
            "type": "string"
          },
          "statementData.configuration.disvharge.discharge": {
            "description": "Term for Admission.",
            "type": "string"
          },
          "statementData.configuration.show": {
            "description": "Details of whether to display the items on the statement",
            "type": "object"
          },
          "statementData.configuration.show.invoiceNumber": {
            "description": "Display Invoice Number on the Statement.",
            "type": "boolean"
          },
          "statementData.configuration.show.location": {
            "description": "Display Patient's Location on the Statement.",
            "type": "boolean"
          },
          "statementData.configuration.show.admitDate": {
            "description": "Display Admission Date on the Statement.",
            "type": "boolean"
          },
          "statementData.configuration.show.dischargeDate": {
            "description": "Display Discharge Date on the Statement.",
            "type": "boolean"
          },
          "statementData.configuration.show.patientNumber": {
            "description": "Display Patient Number on the Statement.",
            "type": "boolean"
          },
          "statementData.configuration.show.transactionWarningMessage": {
            "description": "Display Transaction Warning Message on the Statement.",
            "type": "boolean"
          },
          "statementData.configuration.other": {
            "description": "Details of other configurations of the statement.",
            "type": "object"
          },
          "statementData.configuration.other.prefixFacCodeToAccountNumber": {
            "description": "Whether to Prefix the Facility Code to the Account Number.",
            "type": "boolean"
          },
          "statementData.configuration.other.checksPayableTo": {
            "description": "Text for the Checks Payable To field.",
            "type": "string"
          },
          "statementData.configuration.other.paymentInstruction": {
            "description": "Text for the Payment Instruction field.",
            "type": "string"
          },
          "statementData.configuration.other.transactionWarningMessage": {
            "description": "Text for the Transaction Warning Message field.",
            "type": "string"
          },
          "statementData.configuration.other.labelForAccountNumber": {
            "description": "Label for the Account Number field.",
            "type": "string"
          },
          "statementData.configuration.other.accountNumberOption": {
            "description": "Type of Account Number field.",
            "type": "string"
          }
        },
        "title": "GetStatementResponses",
        "type": "object"
      },
      "CarePlanKardexesListResponseDto": {
        "description": "List of care plan kardex",
        "example": {
          "data": [
            {
              "patientId": 123,
              "categoryDescription": "Activities",
              "itemDescription": "Porter to activities",
              "isTask": true
            },
            {
              "patientId": 123,
              "categoryDescription": "Activities",
              "itemDescription": "Arrange transportation.",
              "itemInstructions": "Assist with arranging community activities.",
              "isTask": false
            }
          ],
          "paging": {
            "hasMore": false,
            "page": 1,
            "pageSize": 50
          }
        },
        "properties": {
          "data": {
            "description": "List of care plan kardexes for a patient.",
            "items": {
              "$ref": "#/components/schemas/GetCarePlanKardexes"
            },
            "type": "array"
          },
          "paging": {
            "$ref": "#/components/schemas/PagingResponseByPage"
          }
        },
        "title": "CarePlanKardexesListResponseDto",
        "type": "object"
      },
      "GetCarePlanKardexes": {
        "example": {
          "patientId": 12345,
          "questionText": "Hospice",
          "value": "N"
        },
        "properties": {
          "patientId": {
            "description": "PointClickCare's unique identifier for a patient within the organization.",
            "format": "int32",
            "type": "integer"
          },
          "categoryDescription": {
            "description": "Description of the kardex category this kardex item falls under.",
            "type": "string"
          },
          "itemDescription": {
            "description": "Description of the kardex item. If isTask is true, this will be the description of the task.Otherwise, this will be the description of the intervention.",
            "type": "string"
          },
          "itemInstructions": {
            "description": "Instructions for the kardex item. If isTask is true, this will be the instructions for the task.Otherwise, this will be the instructions for the intervention.",
            "type": "string"
          },
          "isTask": {
            "description": "Determines whether the kardex item is a task or intervention. If isTask is true, the kardex item is a task.Otherwise, it is an intervention.",
            "type": "boolean"
          }
        },
        "title": "GetCarePlanKardexes",
        "type": "object"
      },
      "GetCareProfilePublicList": {
        "description": "List of Care Profile items filtered based on request Query Parameter (questionIds)",
        "example": {
          "data": [
            {
              "questionId": 140,
              "questionText": "Hospice",
              "patientId": 58430298,
              "value": "N"
            },
            {
              "questionId": 26,
              "questionText": "Walker",
              "patientId": 58430298,
              "value": "N"
            },
            {
              "questionId": 24,
              "questionText": "Electric Wheelchair",
              "patientId": 58430298,
              "value": "N"
            },
            {
              "questionId": 25,
              "questionText": "Manual Wheelchair",
              "patientId": 58430298,
              "value": "N"
            },
            {
              "questionId": 90,
              "questionText": "Special Instructions",
              "patientId": 58430298,
              "value": "Test Special Instructions 1"
            },
            {
              "questionId": 1,
              "questionText": "Amplified Device",
              "patientId": 58430298,
              "value": "Y"
            },
            {
              "questionId": 2,
              "questionText": "Hearing Aid",
              "patientId": 58430298,
              "value": "Y"
            },
            {
              "questionId": 3,
              "questionText": "Left",
              "parentQuestionId": 2,
              "patientId": 58430298,
              "value": "Y"
            },
            {
              "questionId": 4,
              "questionText": "Right",
              "parentQuestionId": 2,
              "patientId": 58430298,
              "value": "Y"
            },
            {
              "questionId": 38,
              "questionText": "O2 at",
              "patientId": 58430298,
              "value": "Y"
            },
            {
              "questionId": 39,
              "questionText": "L-Min by Nasal Canula-Mask",
              "parentQuestionId": 38,
              "patientId": 58430298,
              "value": 1
            },
            {
              "questionId": 40,
              "questionText": "Chronic",
              "parentQuestionId": 38,
              "patientId": 58430298,
              "value": "N"
            },
            {
              "questionId": 41,
              "questionText": "New",
              "parentQuestionId": 38,
              "patientId": 58430298,
              "value": "Y"
            }
          ]
        },
        "properties": {
          "data": {
            "description": "List of care profile entries",
            "items": {
              "$ref": "#/components/schemas/GetCareProfilePublicResponse"
            },
            "type": "array"
          }
        },
        "title": "GetCareProfilePublicList",
        "type": "object"
      },
      "GetCareProfilePublicResponse": {
        "example": {
          "questionId": 6789,
          "questionText": "Hospice",
          "patientId": 12345,
          "value": "N"
        },
        "properties": {
          "questionId": {
            "description": "PointClickCare's unique identifier for the care profile questions.",
            "format": "int32",
            "type": "integer"
          },
          "questionText": {
            "description": "Represents the displayed question text in the care profile.",
            "type": "string"
          },
          "parentQuestionId": {
            "description": "PointClickCare's unique identifier for the care profile questions that points back to the questionId.",
            "format": "int32",
            "type": "integer"
          },
          "patientId": {
            "description": "PointClickCare's unique identifier for a patient within the organization.",
            "format": "int32",
            "type": "integer"
          },
          "value": {
            "description": "PointClickCare's text or response displayed for care profile questions; blank, N, Y or text.",
            "type": "string"
          }
        },
        "title": "GetCareProfilePublicResponse",
        "type": "object"
      },
      "ClaimChangeLog": {
        "description": "Post Claim Change Log",
        "example": {
          "claimId": "1115400008ZM0",
          "format": "x12",
          "isBase64": true,
          "facId": 1,
          "data": "SVNBKjAwKiAgICAgICAgICAqMDAqICAgICAgICAgICpaWio5OTk5OTk5OTkgICAgICAqWloqOTk5OTk5OTk5ICAgICAgKjE4MDgxNCoxND I0Kl4qMDA1MDEqMDE5Njc4NDU5KjEqUCo6fkdTKkhDKjk5OTk5OTk5OSo5OTk5OTk5OTkqMjAxODA4MTQqMTQyNCoxOTY3ODQ2MCpYKj AwNTAxMFgyMjNBMn5TVCo4MzcqMTk2Nzg0NjEqMDA1MDEwWDIyM0EyfkJIVCowMDE5KjAwKjE5Njc4NDYxKjIwMTgwODE0KjE 0MjQqQ0h+Tk0xKjQxKjIqQUJJTElUWSBORVRXT1JLKioqKio0Nio5OTk5OTk5OTl+UEVSKklDKipURSo5OTk5OTk5OTkqRU1+T k0xKjQwKjIqODM3SSBFWFBPUlQqKioqKjQ2Kjk5OTk5OTk5OX5ITCoxKioyMCoxflBSVipCSSpQWEMqMzE0MDAwMDAwWH5OTTEqODUq MipGQUNJTElUWSAxIC0gUkVTRVJWRUQgLSBDTEFJTVMqKioqKlhYKjE4MjEwOTE0NjN+TjMqODMzIFJBTkRBTCBST0FEfk40KkFUTEF OVEEqR0EqMzAzMjk0MDIxflJFRipFSSo1ODIxODk2Mzh+SEwqMioxKjIyKjB+U0JSKlAqMTgqKioqKioqQ0l+Tk0xKklMKjEqQUNLRVJNQ U4qVEFOTkEqU0hFUllMKioqTUkqMjEwNTEyNDQyVn5OMyo5MjkgUk9CRVJUIEFWRU5VRX5ONCpMQUdSQU5HRSpHQSozMDI0MX5ETUcqRDgqM TkzOTA0MDgqRn5OTTEqUFIqMipJTlNVUkFOQ0VfQ09NUEFOWV81ODEqKioqKlBJKjYwMDU0fk4zKjY3OCBXSEVBTERPTiBCVUlMRElOR35ONC pCSVJNSU5HSEFNKkFMKjM1MjAyMjIyMn5DTE0qMTExNTQwMDAwOFpNMCo2OTc1KioqMjE6QTozKipBKlkqWX5EVFAqNDM0KlJEOCoyMDE3MD cwMS0yMDE3MDczMX5EVFAqNDM1KkRUKjIwMTcwNzAxMDAwMH5DTDEqMyoxKjMwflJFRipEOSpHNDkyMDkwMDAwflJFRipFQSoxMTE1NH5IS SpBQkt+SEkqQkk6NzA6UkQ4OjIwMTcwNTI3LTIwMTcwNTMxfkhJKkJFOjA5Ojo6NTA5OS41KkJFOjgwOjo6MzEqQkU6ODI6OjozMX5MWCo xflNWMiowMDIyKkhQOlJVWDAwKjAqVU4qMzF+TFgqMn5TVjIqMDEyMCoqNjk3NSpEQSozMX5EVFAqNDcyKkQ4KjIwMTcwNzAxflNFKjM1KjE 5Njc4NDYxfkdFKjEqMTk2Nzg0NjB+SUVBKjEqMDE5Njc4NDU5fg==\n",
          "changes": [
            {
              "changeType": "CHANGE",
              "timestamp": "2020-08-14T19:24:20.000Z",
              "user": "SYSTEM",
              "fieldName": "AdmissionDate",
              "fieldDescription": "Admission Date",
              "before": "2019-06-01",
              "after": "2019-07-01"
            }
          ]
        },
        "properties": {
          "claimId": {
            "description": "PointClickCare's unique identifier for claim within organization.",
            "type": "string"
          },
          "format": {
            "description": "The format of claim data.Note: \"x12\" format is supported only for now.",
            "type": "string"
          },
          "isBase64": {
            "description": "If the claim data is encoded by base64 format. Possible values are 'true' or 'false'.",
            "type": "boolean"
          },
          "facId": {
            "description": "PointClickCare's unique identifier for facility within organization.",
            "format": "int32",
            "type": "integer"
          },
          "data": {
            "description": "The claim information. If isBase64 is true, then it is encoded by base64.",
            "type": "string"
          },
          "changes": {
            "description": "List of claim change log detail.",
            "items": {
              "$ref": "#/components/schemas/ClaimChangeDetailList"
            },
            "type": "array"
          }
        },
        "required": [
          "claimId",
          "format",
          "isBase64",
          "facId",
          "data",
          "changes"
        ],
        "title": "ClaimChangeLog",
        "type": "object"
      },
      "ClaimChangeDetailList": {
        "description": "",
        "example": {
          "changeType": "CHANGE",
          "timestamp": "2020-08-14T19:24:20.000Z",
          "user": "SYSTEM",
          "fieldName": "AdmissionDate",
          "fieldDescription": "Admission Date",
          "before": "2019-06-01",
          "after": "2019-07-01"
        },
        "properties": {
          "changeType": {
            "description": "The change type. Possible values are: <ul><li>REMOVE</li><li>CHANGE</li><li>ADD</li></ul>",
            "type": "string"
          },
          "timestamp": {
            "description": "Date and time when the field is changed.The Date and Time should be expressed in UTC in the following format YYYY-MM-DDTHH:MM:SS.sssZ.<br>Note: Lenient dates are not allowed and will result in an error message. Example of a lenient date is 2016-13-33T12:67:77.000Z.",
            "format": "date-time",
            "type": "string"
          },
          "user": {
            "description": "User name who made the change.",
            "type": "string"
          },
          "fieldName": {
            "description": "The Possible field names associated with the PointClickCare system are listed below: <br><br>Claim Type: 837I/UB04<table><th>Field Name</th><th>Field Description</th> <tr><td>AdmissionDate</td><td>Admission Date</td></tr> <tr><td>BillingAddr1</td><td>Billing Provider Address Line 1</td></tr> <tr><td>BillingAddr2</td><td>Billing Provider Address Line 2 </td></tr> <tr><td>BillingCity</td><td>Billing Provider City</td></tr> <tr><td>BillingCountry</td><td>Billing Provider Country</td></tr> <tr><td>BillingName</td><td>Billing Provider Name</td></tr> <tr><td>BillingState</td><td>Billing Provider State</td></tr> <tr><td>BillingZip</td><td>Billing Provider Zip Code</td></tr> <tr><td>BillType</td><td>Bill Type</td></tr> <tr><td>DiagnosisCodes10.Other1.Code</td><td>Other Diagnosis Code 1 (ICD-10)</td></tr> <tr><td>DiagnosisCodes10.Other1.POA</td><td>Other Diagnosis Code 1 Present on Admission Code (ICD-10)</td></tr> <tr><td>Insurances.GroupName</td><td>Group Name</td></tr> <tr><td>Insurances.GroupNumber</td><td>Group Number</td></tr> <tr><td>Insurances.PatientRelateCode</td><td>Patient Relationship Code</td></tr> <tr><td>Insurances.PayerID.ID</td><td>Payer ID</td></tr> <tr><td>Insurances.PayerName</td><td>Payer Name</td></tr> <tr><td>Insurances.SubscriberFirst</td><td>Subscriber First Name</td></tr> <tr><td>Insurances.SubscriberID.MemberID</td><td>Subscriber Member ID</td></tr> <tr><td>Insurances.SubscriberLast</td><td>Subscriber Last Name</td></tr> <tr><td>Insurances.SubscriberMiddle</td><td>Subscriber Middle Name</td><tr> <td>Insurances.SubscriberSuffix</td><td>Subscriber Suffix</td></tr> <tr><td>Notes.Note</td><td>Claim Note</td></tr> <tr><td>PatientAddr1</td><td>Patient Address Line 1</td></tr> <tr><td>PatientAddr2</td><td>Patient Address Line 2</td></tr> <tr><td>PatientCity</td><td>Patient City</td></tr> <tr><td>PatientFirst</td><td>Patient First Name</td></tr> <tr><td>PatientLast</td><td>Patient Last Name</td></tr> <tr><td>PatientMiddle</td><td>Patient Middle Name</td></tr> <tr><td>PatientState</td><td>Patient State</td></tr> <tr><td>PatientZip</td><td>Patient Zip Code</td></tr> <tr><td>PayToAddr1</td><td>Pay-To Provider Address Line 1</td></tr> <tr><td>PayToAddr2</td><td>Pay-To Provider Address Line 2</td></tr> <tr><td>PayToCity</td><td>Pay-To Provider City</td></tr> <tr><td>PayToName</td><td>Pay-To Provider Name</td></tr> <tr><td>PayToState</td><td>Pay-To Provider State</td></tr> <tr><td>PayToZip</td><td>Pay-To Provider Zip Code</td></tr> </table><br>Claim Type: 837P/1500<table><th>Field Name</th><th>Field Description</th> <tr><td>DiagnosisCodes10.Other1</td><td>Other 1 Diagnosis Code (ICD-10)</td></tr> <tr><td>Insurances.GroupName</td><td>Group Name</td></tr> <tr><td>Insurances.GroupNumber</td><td>Group Number</td></tr> <tr><td>Insurances.PayerID.ID</td><td>Payer ID</td></tr> <tr><td>Insurances.PayerName</td><td>Payer Name</td></tr> <tr><td>Insurances.SubscriberFirst</td><td>Subscriber First Name</td></tr> <tr><td>Insurances.SubscriberID.MemberID</td><td>Subscriber Member ID</td></tr> <tr><td>Insurances.SubscriberLast</td><td>Subscriber Last Name</td></tr> <tr><td>Insurances.SubscriberMiddle</td><td>Subscriber Middle Name</td></tr> <tr><td>PatientAddr1</td><td>Patient Address Line 1</td></tr> <tr><td>PatientAddr2</td><td>Patient Address Line 2</td></tr> <tr><td>PatientCity</td><td>Patient City</td></tr> <tr><td>PatientZip</td><td>Patient Zip Code</td></tr> <tr><td>PatientFirst</td><td>Patient First Name</td></tr> <tr><td>PatientLast</td><td>Patient Last Name</td></tr> <tr><td>PatientMiddle</td><td>Patient Middle Name</td></tr> <tr><td>PatientState</td><td>Patient State</td></tr> <tr><td>PayToAddr1</td><td>Pay-To Provider Address Line 1</td></tr> <tr><td>PayToAddr2</td><td>Pay-To Provider Address Line 2</td></tr> <tr><td>PayToCity</td><td>Pay-To Provider City</td></tr> <tr><td>PayToState</td><td>Pay-To Provider State</td></tr> <tr><td>PayToZip</td><td>Pay-To Provider Zip Code</td></tr></table>",
            "type": "string"
          },
          "fieldDescription": {
            "description": "Field description of the field changed.",
            "type": "string"
          },
          "before": {
            "description": "The value before change.<br>Note: \"before\" and \"after\" fields can not be optional at the same time.",
            "type": "string"
          },
          "after": {
            "description": "The value after change.",
            "type": "string"
          }
        },
        "required": [
          "changeType",
          "timestamp",
          "user",
          "fieldName",
          "before",
          "after"
        ],
        "title": "ClaimChangeDetail",
        "type": "object"
      },
      "ClaimBatchStatusChangeSuccess": {
        "description": "Claim Batch Status Change is successful",
        "example": {
          "fileUuid": "1750abe8-1b7c-4e26-969c-9d7076ff8c02",
          "facId": 1,
          "isSuccessful": true
        },
        "properties": {
          "fileUuid": {
            "description": "File unique identifier that is going to help PointClickCare Application System to find the corresponding batch's status that is going to be updated",
            "type": "string"
          },
          "facId": {
            "description": "PointClickCare's unique identifier for a facility within the organization.",
            "type": "integer",
            "format": "int32"
          },
          "isSuccessful": {
            "description": "Represents the new claim batch status. Success code can be either \"true\" or \"false\". If false, error code(s) must be in the payload.<br><br>Note: If the 837 claim file name includes \"_test\" then the claim batch status is OPEN, If the 837 claim file name does not include \"_test\", then the claim batch status is EXPORTED.",
            "type": "boolean"
          }
        },
        "required": [
          "fileUuid",
          "facId",
          "isSuccessful"
        ],
        "title": "ClaimBatchStatusChangeSuccess",
        "type": "object"
      },
      "ClaimBatchStatusChangeErrors": {
        "description": "Claim Batch Status Change has error(s)",
        "example": {
          "fileUuid": "1750abe8-1b7c-4e26-969c-9d7076ff8c02",
          "facId": 22,
          "isSuccessful": false,
          "errors": [
            {
              "code": "1152",
              "description": "Invalid CLM01 identifier: 12875WW0000C9IN,11575WW0000C8IN"
            }
          ]
        },
        "properties": {
          "fileUuid": {
            "description": "File unique identifier that is going to help PointClickCare Application System to find the corresponding batch's status that is going to be updated",
            "type": "string"
          },
          "facId": {
            "description": "PointClickCare's unique identifier for a facility within the organization.",
            "format": "int32",
            "type": "integer"
          },
          "isSuccessful": {
            "description": "Represents the new claim batch status. Success code can be either \"true\" or \"false\". If false, error code(s) must be in the payload.<br><br>Note: If the 837 claim file name includes \"_test\" then the claim batch status is OPEN, If the 837 claim file name does not include \"_test\", then the claim batch status is EXPORTED.",
            "type": "boolean"
          },
          "errors": {
            "description": "Indicates that claim batch status update has errors on vendor side. PointClickCare Application System is going to update corresponding claim batch status accordingly.",
            "items": {
              "$ref": "#/components/schemas/ClaimBatchStatusChangeError"
            },
            "type": "array"
          }
        },
        "required": [
          "fileUuid",
          "facId",
          "isSuccessful",
          "errors"
        ],
        "title": "ClaimBatchStatusChangeErrors"
      },
      "ClaimBatchStatusChangeError": {
        "description": "Claim Batch Status Update Errors' code and description",
        "example": {
          "code": "1152",
          "description": "Invalid CLM01 identifier: 12875WW0000C9IN,11575WW0000C8IN"
        },
        "properties": {
          "code": {
            "description": "The error code for the claim batch status. Possible error codes are 1151 and 1152.",
            "type": "string"
          },
          "description": {
            "description": "The description for the error code contains the description of the code followed by a \":\" and claim identifiers comma separated. Corresponding description for 1151 is \"Duplicate CLM01 crosswalk identifier\" and corresponding description for 1152 is \"Invalid CLM01 identifier\". This description is followed by a \":\" and 16 characters claim identifiers comma separated.",
            "type": "string"
          }
        },
        "required": [
          "code",
          "description"
        ],
        "title": "ClaimBatchStatusChangeError",
        "type": "object"
      },
      "GetDiagnosticReportFileResponsePublic": {
        "description": "If successful, this method returns a response body with the following structure:<br><br> Returns file attached to diagnostic report. The format is specified in Content-Type header",
        "title": "GetDiagnosticReportFileResponsePublic",
        "type": "object"
      },
      "GetDiagnosticReportListResponsePublic": {
        "description": "List of diagnostic reports.",
        "example": {
          "data": [
            {
              "effectiveDateTime": "2016-12-30T09:11:00.000Z",
              "issuedDateTime": "2016-12-30T09:11:00.000Z",
              "orderingPractitioner": {
                "firstName": "John",
                "lastName": "Smith",
                "middleName": "Jacob",
                "npi": 9876543210,
                "practitionerId": 1234
              },
              "performingLaboratory": "Manuel",
              "reportFile": true,
              "reportId": "img-157",
              "reportName": "Admission checks",
              "reportStatus": "Completed",
              "reportType": "Radiology",
              "reportingLaboratory": "Reyna",
              "testSet": [
                {
                  "results": [
                    {
                      "code": "72082",
                      "codeDescription": "X-ray exam entire spi 2/3 vw",
                      "codeSystem": "CPT",
                      "comment": "this is a comment",
                      "procedureId": "876",
                      "procedureName": "X-ray exam entire spi 2/3 vw",
                      "resultStatus": "Corrected"
                    },
                    {
                      "code": "78265-TC",
                      "codeDescription": "Gastric emptying imag study",
                      "codeSystem": "CPT",
                      "comment": "this is a comment",
                      "procedureId": "683",
                      "procedureName": "Gastric emptying imag study",
                      "resultStatus": "final"
                    }
                  ]
                }
              ]
            },
            {
              "category": [
                "Hematology",
                "Chemistry"
              ],
              "effectiveDateTime": "2016-12-30T09:11:00.000Z",
              "issuedDateTime": "2016-12-30T09:11:00.000Z",
              "orderingPractitioner": {
                "firstName": "John",
                "lastName": "Smith",
                "middleName": "Jacob",
                "npi": 9876543210,
                "practitionerId": 1234
              },
              "performingLaboratory": "StoneCor",
              "reportFile": false,
              "reportId": "lab-1532",
              "reportName": "Routine bloodwork",
              "reportStatus": "Completed",
              "reportType": "Laboratory",
              "reportingLaboratory": "SunLabs",
              "testSet": [
                {
                  "panelName": "BASIC METABOLIC",
                  "results": [
                    {
                      "code": "2345-7",
                      "codeDescription": "Glucose",
                      "codeSystem": "LOINC",
                      "comment": "this is a comment",
                      "observationId": "70477",
                      "observationName": "GLUCOSE",
                      "referenceRange": "70 - 105",
                      "resultStatus": "Final",
                      "valueQuantity": {
                        "unitText": "mg",
                        "value": "67.8"
                      }
                    },
                    {
                      "code": "2160-0",
                      "codeDescription": "Creatinine",
                      "codeSystem": "LOINC",
                      "comment": "this is a comment",
                      "observationId": "768",
                      "observationName": "CREATININE",
                      "referenceRange": "0.6 - 1.2",
                      "resultStatus": "Final",
                      "valueQuantity": {
                        "unitText": "mg",
                        "value": "0.7"
                      }
                    }
                  ]
                },
                {
                  "panelName": "CBC (HEMOGRAM) +PLT",
                  "results": [
                    {
                      "code": "6690-2",
                      "codeDescription": "Leukocytes",
                      "codeSystem": "LOINC",
                      "comment": "this is a comment",
                      "observationId": "7047722",
                      "observationName": "WBC",
                      "referenceRange": "3.5 - 10.5",
                      "resultStatus": "Final",
                      "valueQuantity": {
                        "unitText": "mg",
                        "value": "4.9"
                      }
                    },
                    {
                      "code": "789-8",
                      "codeDescription": "Erythrocytes",
                      "codeSystem": "LOINC",
                      "comment": "this is a comment",
                      "observationId": "7628",
                      "observationName": "RBC",
                      "referenceRange": "3.90 - 5.03",
                      "resultStatus": "Final",
                      "valueQuantity": {
                        "unitText": "mg",
                        "value": "4.89"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "paging": {
            "hasMore": false,
            "page": 1,
            "pageSize": 50
          }
        },
        "properties": {
          "data": {
            "description": "List of diagnostic Report.",
            "items": {
              "$ref": "#/components/schemas/GetDiagnosticReportPublic"
            },
            "type": "array"
          },
          "paging": {
            "$ref": "#/components/schemas/PagingResponseByPage"
          }
        },
        "title": "GetDiagnosticReportListResponsePublic",
        "type": "object"
      },
      "GetDiagnosticReportPublic": {
        "description": "Diagnostic Report.",
        "example": {
          "effectiveDateTime": "2016-12-30T09:11:00.000Z",
          "issuedDateTime": "2016-12-30T09:11:00.000Z",
          "orderingPractitioner": {
            "firstName": "John",
            "lastName": "Smith",
            "middleName": "Jacob",
            "npi": 9876543210,
            "practitionerId": 1234
          },
          "performingLaboratory": "Manuel",
          "reportFile": true,
          "reportId": "img-157",
          "reportName": "Admission checks",
          "reportStatus": "Completed",
          "reportType": "Radiology",
          "reportingLaboratory": "Reyna",
          "testSet": [
            {
              "results": [
                {
                  "code": "72082",
                  "codeDescription": "X-ray exam entire spi 2/3 vw",
                  "codeSystem": "CPT",
                  "comment": "this is a comment",
                  "procedureId": "876",
                  "procedureName": "X-ray exam entire spi 2/3 vw",
                  "resultStatus": "Corrected"
                },
                {
                  "code": "78265-TC",
                  "codeDescription": "Gastric emptying imag study",
                  "codeSystem": "CPT",
                  "comment": "this is a comment",
                  "procedureId": "683",
                  "procedureName": "Gastric emptying imag study",
                  "resultStatus": "final"
                }
              ]
            }
          ]
        },
        "properties": {
          "category": {
            "description": "Represents the category that the report belongs to. Multiple categories may be selected for a report. This field is only applicable to Laboratory reports. Possible values are: <ul><li>Chemistry</li><li>Hematology</li><li>Challenge</li><li>Semen Analysis</li><li>Serology</li><li>Cancer Screening Tests</li><li>Microbiology</li><li>Cytology</li><li>Anatomic Pathology</li><li>Blood Bank</li><li>Coagulation</li><li>Unknown Category</li></ul>",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "effectiveDateTime": {
            "description": "Represents the date and time of the procedure or of specimen collection(s). The date and time are expressed in UTC in the following format YYYY-MM-DDTHH:MM:SS.sssZ.",
            "format": "date-time",
            "type": "string"
          },
          "issuedDateTime": {
            "description": "Represents the date and time when the report was issued. The date and time are expressed in UTC in the following format YYYY-MM-DDTHH:MM:SS.sssZ.",
            "format": "date-time",
            "type": "string"
          },
          "orderingPractitioner": {
            "$ref": "#/components/schemas/OrderingPractitioner"
          },
          "performingLaboratory": {
            "description": "Represents the laboratory that performed the tests included on the report.",
            "type": "string"
          },
          "reportFile": {
            "description": "Represents if the report has a file attached to it. Possible values are 'true' or 'false'.",
            "type": "boolean"
          },
          "reportId": {
            "description": "The unique identifier for the report. ReportId for laboratory reports is prefixed with \"lab-\" whereas for Radiology reports, it is prefixed with \"img-\".",
            "type": "string"
          },
          "reportName": {
            "description": "Represents the name of the report.",
            "type": "string"
          },
          "reportStatus": {
            "description": "Represents the status of the report. Possible values are 'Completed', 'Resulted', and 'Cancelled'. When results for all tests included in the report are available, the status is 'Completed'.",
            "type": "string"
          },
          "reportType": {
            "description": "Represents the type of report. Possible values are 'Laboratory' or 'Radiology'.",
            "type": "string"
          },
          "reportingLaboratory": {
            "description": "Represents the laboratory that reported the results.",
            "type": "string"
          },
          "testSet": {
            "description": "List of test results reported.",
            "items": {
              "$ref": "#/components/schemas/DiagnosticReportTest"
            },
            "type": "array"
          }
        },
        "title": "GetDiagnosticReportPublic",
        "type": "object"
      },
      "GetFocus": {
        "description": "Focuses which are part of the care plan.",
        "example": {
          "createdDate": "2020-01-25T04:45:15.000Z",
          "description": "Tobacco Use- UPDATED",
          "focusId": 68978,
          "status": "Active"
        },
        "properties": {
          "createdDate": {
            "description": "Represents the date and time when the focus was created.",
            "format": "date-time",
            "type": "string"
          },
          "description": {
            "description": "Description of the focus.",
            "type": "string"
          },
          "focusId": {
            "description": "PointClickCare's unique identifier for a care plan focus.",
            "format": "int32",
            "type": "integer"
          },
          "status": {
            "description": "Represents the status of the focus. Possible values are \"Active\", \"Resolved\", and \"Closed\".",
            "type": "string"
          }
        },
        "title": "GetFocus",
        "type": "object"
      },
      "GetFocusResponse": {
        "description": "Focuses which are part of the care plan.",
        "example": {
          "focusId": 658,
          "description": "Risk for Malnutrition Mood Disorders",
          "createdDate": "2020-01-25T04:45:15.000Z",
          "status": "Active",
          "createdBy": "Joe Ramirez",
          "initiatedDate": "2020-01-25T04:45:15.000Z",
          "revisionDate": "2020-01-25T04:45:15.000Z",
          "revisionBy": "rJoe",
          "resolvedDate": "2020-08-12T09:00:15.000Z",
          "goals": [
            {
              "goalId": 22586,
              "status": "Active",
              "description": "Resident Will Experience Minimal Side Effects Related to Chemotherapy",
              "createdDate": "2020-01-25T04:45:15.000Z",
              "createdBy": "Joe Ramirez",
              "revisionDate": "2020-01-25T04:45:15.000Z",
              "revisionBy": "Joe Ramirez",
              "targetDate": "2021-01-01T09:00:15.000Z",
              "initiatedDate": "2020-01-25T04:45:15.000Z"
            },
            {
              "goalId": 56878,
              "status": "Cancelled",
              "description": "Resident will improve ADL score through review date",
              "createdDate": "2020-01-25T04:45:15.000Z",
              "createdBy": "Joe Ramirez",
              "revisionDate": "2020-01-25T04:45:15.000Z",
              "revisionBy": "Joe Ramirez",
              "targetDate": "2021-01-01T09:00:15.000Z",
              "initiatedDate": "2020-01-25T04:45:15.000Z",
              "resolvedDate": "2020-08-12T09:00:15.000Z"
            }
          ],
          "interventions": [
            {
              "interventionId": 12488,
              "status": "Active",
              "description": "MONITOR - Turn and Reposition",
              "instruction": "Every 2-3 hours with comfort as a goal.",
              "frequency": "Every Shift (DEN)",
              "createdDate": "2020-01-25T04:45:15.000Z",
              "createdBy": "Joe Ramirez",
              "revisionDate": "2020-01-25T04:45:15.000Z",
              "revisionBy": "Joe Ramirez",
              "initiatedDate": "2020-01-25T04:45:15.000Z"
            },
            {
              "interventionId": 59812,
              "status": "Resolved",
              "description": "Administer medications prior to treatment to minimize side effects, per provider order Adding desc to standard intervention",
              "frequency": "5x/Week",
              "createdDate": "2020-01-25T04:45:15.000Z",
              "createdBy": "Joe Ramirez",
              "revisionDate": "2020-01-25T04:45:15.000Z",
              "revisionBy": "Joe Ramirez",
              "initiatedDate": "2020-01-25T04:45:15.000Z"
            }
          ]
        },
        "properties": {
          "focusId": {
            "description": "PointClickCare's unique identifier for a care plan focus.",
            "format": "int32",
            "type": "integer"
          },
          "description": {
            "description": "Description of the focus.",
            "type": "string"
          },
          "status": {
            "description": "Represents the status of the focus. Possible values are \"Active\", \"Resolved\", and \"Closed\".",
            "type": "string"
          },
          "createdDate": {
            "description": "Represents the date and time when the focus was created.",
            "format": "date-time",
            "type": "string"
          },
          "createdBy": {
            "description": "Represents the user that created the focus.",
            "type": "string"
          },
          "initiatedDate": {
            "description": "Represents the date and time when the focus was initiated.",
            "format": "date-time",
            "type": "string"
          },
          "revisionDate": {
            "description": "Represents the date and time when the focus was last modified.",
            "format": "date-time",
            "type": "string"
          },
          "revisionBy": {
            "description": "Represents the user login that last modified the focus.",
            "type": "string"
          },
          "resolvedDate": {
            "description": "Represents the date and time when the focus was resolved.",
            "format": "date-time",
            "type": "string"
          },
          "goals": {
            "description": "List of goals which are part of the focus.",
            "items": {
              "$ref": "#/components/schemas/GetGoal"
            },
            "type": "array"
          },
          "interventions": {
            "description": "List of interventions which are part of the focus.",
            "items": {
              "$ref": "#/components/schemas/GetIntervention"
            },
            "type": "array"
          }
        },
        "title": "GetFocus",
        "type": "object"
      },
      "GetGoal": {
        "description": "Goals which are part of the focus.",
        "properties": {
          "goalId": {
            "description": "PointClickCare's unique identifier for a care plan goal.",
            "format": "int32",
            "type": "integer"
          },
          "description": {
            "description": "Description of the goal.",
            "type": "string"
          },
          "status": {
            "description": "Represents the status of the goal. Possible values are \"Active\", \"Resolved\", and \"Cancelled\".",
            "type": "string"
          },
          "createdDate": {
            "description": "Represents the date and time when the goal was created.",
            "format": "date-time",
            "type": "string"
          },
          "createdBy": {
            "description": "Represents the user that created the goal.",
            "type": "string"
          },
          "initiatedDate": {
            "description": "Represents the date and time when the goal was initiated.",
            "format": "date-time",
            "type": "string"
          },
          "revisionDate": {
            "description": "Represents the date and time when the goal was last modified. If status is \"Resolved\" or \"Cancelled\", the revision date is the closure date.",
            "format": "date-time",
            "type": "string"
          },
          "revisionBy": {
            "description": "Represents the user that last modified the goal.",
            "type": "string"
          },
          "resolvedDate": {
            "description": "Represents the date and time when the goal was resolved.",
            "format": "date-time",
            "type": "string"
          },
          "targetDate": {
            "description": "Represents the date and time when the goal is targeted for resolution.",
            "format": "date-time",
            "type": "string"
          }
        },
        "title": "GetGoal",
        "type": "object"
      },
      "GetIntervention": {
        "description": "Interventions which are part of the focus.",
        "properties": {
          "interventionId": {
            "description": "PointClickCare's unique identifier for a care plan intervention.",
            "format": "int32",
            "type": "integer"
          },
          "description": {
            "description": "Description of the intervention.",
            "type": "string"
          },
          "instruction": {
            "description": "Instruction of the intervention.",
            "type": "string"
          },
          "frequency": {
            "description": "Represents the frequency of the intervention. If the frequency is not part of the standard frequencies, the value is 'Custom'.",
            "type": "string"
          },
          "status": {
            "description": "Represents the status of the intervention. Possible values are \"Active\", \"Resolved\", and \"Cancelled\".",
            "type": "string"
          },
          "createdDate": {
            "description": "Represents the date and time when the intervention was created.",
            "format": "date-time",
            "type": "string"
          },
          "createdBy": {
            "description": "Represents the user that created the intervention.",
            "type": "string"
          },
          "initiatedDate": {
            "description": "Represents the date and time when the intervention was initiated.",
            "format": "date-time",
            "type": "string"
          },
          "revisionDate": {
            "description": "Represents the date and time when the intervention was last modified. If status is \"Resolved\" or \"Cancelled\", the revision date is the closure date.",
            "format": "date-time",
            "type": "string"
          },
          "revisionBy": {
            "description": "Represents the user that last modified the intervention.",
            "type": "string"
          },
          "resolvedDate": {
            "description": "Represents the date and time when the intervention was resolved.",
            "format": "date-time",
            "type": "string"
          }
        },
        "title": "GetIntervention",
        "type": "object"
      },
      "HistoricalCondition": {
        "description": "Post Condition",
        "example": [
          {
            "additionalInformation": "Admitting Diagnosis.",
            "carePeriodId": 558852,
            "clinicalStatus": "Resolved",
            "drg": {
              "coding": [
                {
                  "code": "885",
                  "display": "Psychosis",
                  "system": "CMS"
                }
              ]
            },
            "identifier": {
              "coding": [
                {
                  "code": "F33.9",
                  "display": "MAJOR DEPRESSIVE DISORDER, RECURRENT, UNSPECIFIED",
                  "system": "https://www.cms.gov/Medicare/Coding/ICD10/2018-ICD-10-CM-and-GEMs.html"
                }
              ]
            },
            "isTherapy": false,
            "onsetDate": "2018-05-05T01:08:19.000Z",
            "rank": "Primary",
            "resolvedDate": "2018-05-05T01:08:19.000Z"
          },
          {
            "additionalInformation": "Admitting Diagnosis.",
            "carePeriodId": 558852,
            "clinicalStatus": "Resolved",
            "drg": {
              "coding": [
                {
                  "code": "885",
                  "display": "Psychosis",
                  "system": "CMS"
                }
              ]
            },
            "identifier": {
              "coding": [
                {
                  "code": "F33.9",
                  "display": "MAJOR DEPRESSIVE DISORDER, RECURRENT, UNSPECIFIED",
                  "system": "https://terminology.hl7.org/3.1.0/CodeSystem-icd10-CA.html"
                }
              ]
            },
            "isTherapy": false,
            "onsetDate": "2018-05-05T01:08:19.000Z",
            "rank": "Primary",
            "resolvedDate": "2018-05-05T01:08:19.000Z"
          }
        ],
        "properties": {
          "additionalInformation": {
            "description": "Free text notes related to the condition.",
            "type": "string"
          },
          "carePeriodId": {
            "description": "Represents the identifier used to associate a record with a particular period of care delivered to a patient at an organization. This identifier is obtained by calling the /care-periods endpoint.",
            "format": "int32",
            "type": "integer"
          },
          "clinicalStatus": {
            "description": "Represents the status of the condition. Possible values are 'Active' and 'Resolved'.",
            "type": "string"
          },
          "drg": {
            "$ref": "#/components/schemas/DRGPostCodealbleConcept"
          },
          "identifier": {
            "$ref": "#/components/schemas/IdentifierPostCodeableConcept"
          },
          "isTherapy": {
            "description": "Represents if the condition is a therapy related diagnosis or not. Possible values are 'true' or 'false'.",
            "type": "boolean"
          },
          "onsetDate": {
            "description": "Represents the onset date of the condition. Date and time are expressed in UTC (Coordinated Universal Time), with a special UTC designator (\"Z\").",
            "format": "date-time",
            "type": "string"
          },
          "rank": {
            "description": "Represents the rank of the condition. Possible values are 'Primary' or 'Secondary'.",
            "type": "string"
          },
          "resolvedDate": {
            "description": "Represents the abatement date of the condition. This field is only applicable if the clinicalStatus is set to 'Resolved'. Date and time are expressed in UTC (Coordinated Universal Time), with a special UTC designator (\"Z\").",
            "format": "date-time",
            "type": "string"
          }
        },
        "title": "HistoricalCondition",
        "type": "object"
      },
      "HistoricalConditionResponse": {
        "description": "Historical Conditions",
        "example": {
          "historicalConditionId": 6753101
        },
        "properties": {
          "historicalConditionId": {
            "description": "PointClickCare's unique identifier for a historical condition.",
            "format": "int32",
            "type": "integer"
          }
        },
        "title": "HistoricalConditionResponse",
        "type": "object"
      },
      "HistoricalMedication": {
        "description": "Post Medication",
        "example": {
          "administration": {
            "route": {
              "coding": [
                {
                  "code": "by_mouth",
                  "display": "by mouth",
                  "system": "https://pointclickcare.com/system/administration-route"
                }
              ]
            }
          },
          "carePeriodId": 12345,
          "ddId": 123,
          "description": "Aspirin Tablet 81 MG",
          "drugIdentifier": {
            "coding": [
              {
                "code": 2392720,
                "display": "REGULAR STRENGTH TYLENOL BACK PAIN",
                "system": "https://health-products.canada.ca/dpd-bdpp/index-eng.jsp"
              }
            ]
          },
          "generic": "Aspirin",
          "isDischargeSummary": true,
          "nationalDrugCode": "0777-3105-02",
          "pnId": 324,
          "prescriberCodeSystem": "https://npiregistry.cms.hhs.gov/",
          "prescriberId": "22323",
          "rxNormId": "243670",
          "rxNormQualifier": "BPK",
          "schedules": [
            {
              "additionalDirections": "No directions specified for order.",
              "dose": "1.0",
              "doseUOM": "gram",
              "endDateTime": "2020-11-30T19:06:18.881Z",
              "frequency": "every 5 hours",
              "lastAdministration": {
                "administeredDateTime": "2020-11-30T19:06:18.881Z"
              },
              "medicationRelatedDiagnoses": [
                {
                  "identifier": {
                    "coding": [
                      {
                        "code": "S06.0x1A",
                        "display": "Concussion with loss of consciousness of 30 minutes or less, initial encounter",
                        "system": "https://terminology.hl7.org/3.1.0/CodeSystem-icd10-CA.html"
                      }
                    ]
                  }
                }
              ],
              "schedule": "Routine",
              "scheduleType": "EveryDay",
              "startDateTime": "2020-11-30T19:06:18.881Z"
            },
            {
              "additionalDirections": "Administer as needed every 4 hours.",
              "dose": "1.0",
              "doseUOM": "gram",
              "endDateTime": "2018-09-01T17:56:10.000Z",
              "indicationsForUse": "Headache",
              "isPrnWithDirections": false,
              "lastAdministration": {
                "administeredDateTime": "2020-11-30T19:06:18.881Z"
              },
              "prnTiming": "Hours",
              "prnTimingValue": 2,
              "schedule": "PRN",
              "startDateTime": "2018-05-01T17:56:10.000Z"
            },
            {
              "additionalDirections": "Administer as needed every 4 hours.",
              "doseMax": "1.5",
              "doseMin": "1.0",
              "doseUOM": "gram",
              "endDateTime": "2018-09-01T17:56:10.000Z",
              "indicationsForUse": "Headache",
              "isPrnWithDirections": false,
              "lastAdministration": {
                "administeredDateTime": "2020-11-30T19:06:18.881Z"
              },
              "prnTiming": "Hours",
              "prnTimingValue": 2,
              "schedule": "PRN",
              "startDateTime": "2018-05-01T17:56:10.000Z"
            },
            {
              "additionalDirections": "No directions specified for order.",
              "dose": "2.0",
              "doseUOM": "gram",
              "endDateTime": "2018-05-05T01:08:19.000Z",
              "lastAdministration": {
                "administeredDateTime": "2020-11-30T19:06:18.881Z"
              },
              "medicationRelatedDiagnoses": [
                {
                  "identifier": {
                    "coding": [
                      {
                        "code": "S06.0x1A",
                        "display": "Concussion with loss of consciousness of 30 minutes or less, initial encounter",
                        "system": "https://www.cms.gov/Medicare/Coding/ICD10/2018-ICD-10-CM-and-GEMs.html"
                      }
                    ]
                  }
                }
              ],
              "schedule": "One Time Only",
              "startDateTime": "2018-05-05T01:08:19.000Z"
            },
            {
              "additionalDirections": "No directions specified for order.",
              "dose": "1.0",
              "doseUOM": "gram",
              "lastAdministration": {
                "administeredDateTime": "2020-11-30T19:06:18.881Z"
              },
              "medicationRelatedDiagnoses": [
                {
                  "identifier": {
                    "coding": [
                      {
                        "code": "S06.0x1A",
                        "display": "Concussion with loss of consciousness of 30 minutes or less, initial encounter",
                        "system": "https://www.cms.gov/Medicare/Coding/ICD10/2018-ICD-10-CM-and-GEMs.html"
                      }
                    ]
                  }
                }
              ],
              "schedule": "STAT",
              "startDateTime": "2018-05-05T01:08:19.000Z"
            },
            {
              "additionalDirections": "No directions specified for order.",
              "dose": "1.0",
              "doseUOM": "gram",
              "endDateTime": "2018-05-06T01:00:00.000Z",
              "frequency": "every 5 hours",
              "lastAdministration": {
                "administeredDateTime": "2020-11-30T19:06:18.881Z"
              },
              "medicationRelatedDiagnoses": [
                {
                  "identifier": {
                    "coding": [
                      {
                        "code": "S06.0x1A",
                        "display": "Concussion with loss of consciousness of 30 minutes or less, initial encounter",
                        "system": "https://www.cms.gov/Medicare/Coding/ICD10/2018-ICD-10-CM-and-GEMs.html"
                      }
                    ]
                  }
                }
              ],
              "schedule": "Titration",
              "scheduleType": "Everyday",
              "sequenceNumber": 1,
              "startDateTime": "2018-05-05T00:00:00.000Z"
            },
            {
              "additionalDirections": "No directions specified for order.",
              "dose": "2.0",
              "doseUOM": "gram",
              "endDateTime": "2018-05-08T03:00:00.000Z",
              "frequency": "every 4 hours",
              "lastAdministration": {
                "administeredDateTime": "2020-11-30T19:06:18.881Z"
              },
              "medicationRelatedDiagnoses": [
                {
                  "identifier": {
                    "coding": [
                      {
                        "code": "S06.0x1A",
                        "display": "Concussion with loss of consciousness of 30 minutes or less, initial encounter",
                        "system": "https://www.cms.gov/Medicare/Coding/ICD10/2018-ICD-10-CM-and-GEMs.html"
                      }
                    ]
                  }
                }
              ],
              "schedule": "Titration",
              "scheduleType": "Everyday",
              "sequenceNumber": 2,
              "startDateTime": "2018-05-07T02:00:00.000Z"
            }
          ]
        },
        "properties": {
          "administration": {
            "$ref": "#/components/schemas/MedicationAdministration"
          },
          "carePeriodId": {
            "description": "ID used to associate a record with a particular period of care delivered to a patient at an organization.",
            "format": "int32",
            "type": "integer"
          },
          "ddId": {
            "description": "Dispensable Drug Id from Medispan drug database.<br><br>Note: To support medication reconciliation, providing this identifier is strongly recommended.",
            "format": "int32",
            "type": "integer"
          },
          "description": {
            "description": "Name of medication administered to patient.",
            "type": "string"
          },
          "drugIdentifier": {
            "$ref": "#/components/schemas/DrugIdentifierPostCodeableConcept"
          },
          "generic": {
            "description": "Generic name of medication.",
            "type": "string"
          },
          "isDischargeSummary": {
            "description": "Represents if the medication is part of a discharge summary.",
            "type": "boolean"
          },
          "nationalDrugCode": {
            "description": "10 digit universal product identifier for human drugs in the USA.<br><br>Note: To support medication reconciliation, providing this identifier is strongly recommended.",
            "type": "string"
          },
          "pnId": {
            "description": "Product Name Id from Medispan drug database.",
            "format": "int32",
            "type": "integer"
          },
          "prescriberCodeSystem": {
            "description": "Type of coding system being used to identify prescriber e.g. NPI Registry from CMS (US only). Possible values are URL. Supported systems are:<ul><li>National Provider Identifier: \"https://npiregistry.cms.hhs.gov/\"</li></ul>",
            "type": "string"
          },
          "prescriberId": {
            "description": "Specific code for the prescriber.",
            "type": "string"
          },
          "rxNormId": {
            "description": "RXNorm Id from Unified Medical Language System® (UMLS®), https://www.nlm.nih.gov/research/umls/rxnorm/.",
            "type": "string"
          },
          "rxNormQualifier": {
            "description": "Code providing supplemental information for the rxNormId.",
            "type": "string"
          },
          "schedules": {
            "description": "List of schedules for this medication. Up to 15 schedules accepted.",
            "items": {
              "$ref": "#/components/schemas/MedicationScheduleExtend"
            },
            "type": "array"
          }
        },
        "title": "HistoricalMedication",
        "type": "object"
      },
      "HistoricalMedicationResponse": {
        "description": "Historical Medications.",
        "example": {
          "historicalMedicationId": 1234567
        },
        "properties": {
          "historicalMedicationId": {
            "description": "PointClickCare's unique identifier for a historical medication.",
            "format": "int32",
            "type": "integer"
          }
        },
        "title": "HistoricalMedicationResponse",
        "type": "object"
      },
      "HistoricalSocial": {
        "description": "Post Social History",
        "example": {
          "carePeriodId": 558852,
          "smokingStatus": {
            "coding": [
              {
                "code": "former_smoker",
                "display": "Former smoker",
                "system": "https://pointclickcare.com/system/smoking-status"
              }
            ]
          }
        },
        "properties": {
          "carePeriodId": {
            "description": "Represents the identifier used to associate a record with a particular period of care delivered to a patient at an organization. This identifier is obtained by calling the /care-periods endpoint.",
            "format": "int32",
            "minimum": 0,
            "type": "integer"
          },
          "smokingStatus": {
            "$ref": "#/components/schemas/SmokingStatusPostCodeableConcept"
          }
        },
        "required": [
          "carePeriodId",
          "smokingStatus"
        ],
        "title": "HistoricalSocial",
        "type": "object"
      },
      "HistoricalSocialResponse": {
        "description": "Social History",
        "example": {
          "socialHistoryId": 4453101
        },
        "properties": {
          "socialHistoryId": {
            "description": "PointClickCare's unique identifier for a social history.",
            "format": "int32",
            "type": "integer"
          }
        },
        "title": "HistoricalSocialResponse",
        "type": "object"
      },
      "IdentifierPostCodeableConcept": {
        "description": "Identifiers for the condition.",
        "example": {
          "coding": [
            {
              "code": "F33.9",
              "display": "MAJOR DEPRESSIVE DISORDER, RECURRENT, UNSPECIFIED",
              "system": "https://www.cms.gov/Medicare/Coding/ICD10/2018-ICD-10-CM-and-GEMs.html"
            }
          ]
        },
        "properties": {
          "coding": {
            "description": "List of condition identifiers, can accept up to 3 entries.",
            "items": {
              "$ref": "#/components/schemas/IdentifierPostCoding"
            },
            "type": "array"
          }
        },
        "title": "IdentifierPostCodeableConcept",
        "type": "object"
      },
      "IdentifierPostCoding": {
        "description": "Condition identifiers, can accept up to 3 entries.",
        "example": {
          "code": "F33.9",
          "display": "MAJOR DEPRESSIVE DISORDER, RECURRENT, UNSPECIFIED",
          "system": "https://www.cms.gov/Medicare/Coding/ICD10/2018-ICD-10-CM-and-GEMs.html"
        },
        "properties": {
          "code": {
            "description": "Specific code for the condition as defined by the system.",
            "type": "string"
          },
          "display": {
            "description": "Text description of the condition as defined by the system.",
            "type": "string"
          },
          "system": {
            "description": "Type of coding system being used e.g. ICD-10. Can be a URL. Supported systems are:<ul> <li>ICD-10: \"https://www.cms.gov/Medicare/Coding/ICD10/2018-ICD-10-CM-and-GEMs.html\"</li> <li>ICD-10-CA: \"https://terminology.hl7.org/3.1.0/CodeSystem-icd10-CA.html\"</li> <li>SNOMED: \"http://snomed.info/sct\"</li></ul> The codes associated with this system can be found at http://browser.ihtsdotools.org/? <br>If codes are being passed for multiple systems in the same API call, ICD-10 will be given priority and will be displayed to Users.",
            "type": "string"
          }
        },
        "title": "IdentifierPostCoding",
        "type": "object"
      },
      "InboundAdvanceDirective": {
        "description": "Historical Advance Directives Consent.",
        "example": {
          "advanceDirectiveType": {
            "code": "52765003",
            "display": "Diagnostic procedure",
            "system": "http://snomed.info/sct"
          },
          "carePeriodId": 123456,
          "consentStatus": {
            "code": "123456",
            "display": "Current and Verified",
            "system": "http://snomed.info/sct"
          },
          "description": "DNR",
          "orderDate": "2018-04-27T18:57:33.000Z"
        },
        "properties": {
          "advanceDirectiveType": {
            "description": "Represents the validity for the consent. <br><br>Note: If consentStatus is provided, the consentStatus system, code, and display fields are required.",
            "$ref": "#/components/schemas/InboundAdvanceDirectiveCoding"
          },
          "consentStatus": {
            "description": "Represents the individual advance directive type included in a consent.<br><br>Note: When providing the advanceDirectiveType, the system, code, and display fields are required.",
            "$ref": "#/components/schemas/InboundAdvanceDirectiveCoding"
          },
          "carePeriodId": {
            "description": "ID used to associate a record with a period of care delivered to a patient at an organization.",
            "format": "int32",
            "minimum": 0,
            "type": "integer"
          },
          "description": {
            "description": "The description in the advance directive consent. Maximum 500 characters.",
            "type": "string"
          },
          "orderDate": {
            "description": "Represents the original date and time the advance directive consent was created.  The Date and Time should be expressed in UTC in the following format YYYY-MM-DDTHH:MM:SS.sssZ.",
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "advanceDirectiveType",
          "carePeriodId"
        ],
        "title": "InboundAdvanceDirective",
        "type": "object"
      },
      "InboundAdvanceDirectiveCoding": {
        "description": "Represents the validity for the consent. <br><br>Note: If consentStatus is provided, the consentStatus system, code, and display fields are required.",
        "example": {
          "code": "123456",
          "display": "Current and Verified",
          "system": "http://snomed.info/sct"
        },
        "properties": {
          "code": {
            "description": "Represents the validity for the consent.<br>The valid values associated with the PointClickCare system are listed below.<br>Source Code System: 2.16.840.1.113883.6.96 SNOMED CT<br>Maximum 60 characters.<br><br><table><th>Code</th><th>Display</th><tr><td>425392003</td><td>'Current and Verified'</td></tr><tr><td>425394002</td><td>'Supported by Healthcare Will'</td></tr><tr><td>425393008</td><td>'Support by Durable Power of Attorney for Healthcare'</td></tr><tr><td>425396000</td><td>'Verified with Family Only'</td></tr><tr><td>310305009</td><td>'Verified by Medical Record Only'</td></tr></table>",
            "type": "string"
          },
          "display": {
            "description": "Text description of the consent status. <br> Maximum 500 characters.",
            "type": "string"
          },
          "system": {
            "description": "Type of coding system being used. Can be a URL.<br><br>Supported system is:<br>SNOMED: <b>http://snomed.info/sct</b><br><br>The codes associated with the SNOMED system can be found at <a href=\"http://browser.ihtsdotools.org/?\">http://browser.ihtsdotools.org/?</a><br>Maximum 500 characters.",
            "type": "string"
          }
        },
        "title": "InboundAdvanceDirectiveCoding",
        "type": "object"
      },
      "InboundAdvanceDirectiveResponse": {
        "description": "Historical Advance Directive Consents",
        "example": {
          "historicalAdvanceDirectiveId": 1
        },
        "properties": {
          "historicalAdvanceDirectiveId": {
            "description": "PointClickCare's unique identifier for a historical advance directive.",
            "format": "int64",
            "type": "integer"
          }
        },
        "title": "InboundAdvanceDirectiveResponse",
        "type": "object"
      },
      "InboundAllergy": {
        "description": "Post HistoricalAllergyIntolerances",
        "example": {
          "allergy": {
            "allergen": {
              "code": "387895",
              "display": "Penicillin G",
              "system": "Medispan Allergy Class"
            },
            "category": "Drug",
            "clinicalStatus": "active",
            "onsetDate": "2015-01-11",
            "reactionNote": "Patient develops a rash.",
            "reactionSubType": "Bronchospasm",
            "reactionType": "Anaphylaxis",
            "recorder": "mikti",
            "severity": "Mild",
            "type": "Allergy"
          },
          "carePeriodId": 10101
        },
        "properties": {
          "allergy": {
            "$ref": "#/components/schemas/InboundAllergyData"
          },
          "carePeriodId": {
            "description": "ID used to associate a record with a particular period of care delivered to a patient at an organization.",
            "format": "int32",
            "minimum": 0,
            "type": "integer"
          },
          "outliers": {
            "description": "Represents if the patient has no known allergies or if the allergies for the patient are yet to be determined. Possible values are 'No Known Allergies' or 'To Be Determined'.<br/><br/>Note: If this field is provided, the allergy object is not required and should not be provided.",
            "type": "string"
          }
        },
        "required": [
          "carePeriodId"
        ],
        "title": "InboundAllergy",
        "type": "object"
      },
      "InboundAllergyData": {
        "description": "Represents the allergy.<br/><br/>Note: If allergy is provided, 'outliers' field is not required and should not be provided.<br/><br/>",
        "example": {
          "allergen": {
            "code": "387895",
            "display": "Penicillin G",
            "system": "Medispan Allergy Class"
          },
          "category": "Drug",
          "clinicalStatus": "active",
          "onsetDate": "2015-01-11",
          "reactionNote": "Patient develops a rash.",
          "reactionSubType": "Bronchospasm",
          "reactionType": "Anaphylaxis",
          "recorder": "mikti",
          "severity": "Mild",
          "type": "Allergy"
        },
        "properties": {
          "allergen": {
            "$ref": "#/components/schemas/InboundAllergyDataAllergen"
          },
          "category": {
            "description": "Represents the category the allergy falls under. Acceptable values are 'Drug', 'Food', 'Environmental', 'Substance' and 'Other'.<br/><br/>If 'Other' category is selected, any alternative allergen system, code, and description can be included.<br/><br/>Note: If allergy object is provided, this field is required.",
            "type": "string"
          },
          "clinicalStatus": {
            "description": "Represents the allergy status. Acceptable values are: 'active', 'priorHistory', or 'resolved'.<br/><br/>Note: If allergy object is provided, this field is required.",
            "type": "string"
          },
          "onsetDate": {
            "description": "Represents the date when the allergy was identified. The date is expressed as YYYY-MM-DD.",
            "format": "date",
            "type": "string"
          },
          "reactionNote": {
            "description": "Free text notes associated to the allergy entered by the user. There is no size limit for the reactionNote.",
            "type": "string"
          },
          "reactionSubType": {
            "description": "Represents the reaction sub type. Each reaction type can have its own sub type.<br/><br/>Reaction sub type for 'Anaphylaxis'<ul><li>Bronchospasm</li><li>Hypotension</li><li>Laryngeal edema</li></ul>Reaction sub type for 'Cutaneous reactions'<ul><li>Contact sensitivity</li><li>Erythema multiforme</li><li>Erythema nodosum</li><li>Exfoliative dermatitis</li><li>Fixed drug eruption</li><li>Maculopapular (morbilliform) rash</li><li>Pruritus</li><li>Stevens-Johnson syndrome</li><li>Toxic epidermal necrolysis</li><li>Urticaria and angioedema</li><li>Vasculitis</li></ul>Reaction sub type for 'Hepatic reactions'<ul><li>Cholestatic reactions</li><li>Hepatocellular damage</li></ul>Reaction sub type for 'Photosensitivity reactions'<ul><li>Destruction of formed elements of blood</li><li>Hemolytic anemia</li><li>Neutropenia</li><li>Thrombocytopenia</li></ul>Reaction sub type for 'Pulmonary reactions'<ul><li>Edema</li><li>Fibrosis</li><li>Interstitial or alveolar pneumonitis</li></ul>Reaction sub type for 'Renal reactions'<ul><li>Glomerulonephritis</li><li>Interstitial nephritis</li><li>Nephrotic syndrome</li></ul>",
            "type": "string"
          },
          "reactionType": {
            "description": "Represents the reaction type. Acceptable values in PointClickCare are:<ul><li>Anaphylaxis</li><li>Cutaneous reactions</li><li>Drug Fever</li><li>Hepatic reactions</li><li>Lymphadenopathy</li><li>Nausea</li><li>Photosensitivity reactions</li><li>Pulmonary reactions</li><li>Renal reactions</li><li>Serum sickness</li><li>System vasculitis</li></ul>",
            "type": "string"
          },
          "recorder": {
            "description": "Individual who recorded the allergy and takes responsibility for its content.<br/><br/>Maximum 50 characters.",
            "type": "string"
          },
          "resolvedDate": {
            "description": "Represents the date when the allergy was resolved. The date is expressed as YYYY-MM-DD.<br/><br/>Note: If clinicalStatus is selected as 'resolved', resolvedDate is required.",
            "format": "date-time",
            "type": "string"
          },
          "severity": {
            "description": "Represents the severity of the allergy for the patient. Acceptable values are, 'Mild', 'Moderate', 'Severe' or 'Unknown'.",
            "type": "string"
          },
          "type": {
            "description": "Represents the allergy type. Acceptable values are, 'Allergy', 'Intolerance', 'Propensity to Adverse Reactions' or 'Unknown'.<br/><br/>Note: If allergy object is provided, this field is required.",
            "type": "string"
          }
        },
        "required": [
          "allergen",
          "category",
          "clinicalStatus",
          "type"
        ],
        "title": "InboundAllergyData",
        "type": "object"
      },
      "InboundAllergyDataAllergen": {
        "description": "Represents the allergen.<br/><br/>Note: If allergy object is provided, this field is required.",
        "example": {
          "code": "387895",
          "display": "Penicillin G",
          "system": "Medispan Allergy Class"
        },
        "properties": {
          "code": {
            "description": "Specific code for the allergen.<br/><br/> Note: If allergy object is provided either code and system must both be provided, or neither can be provided.<br/><br/> Maximum 50 characters.",
            "type": "string"
          },
          "display": {
            "description": "Text description of the allergen.<br/><br/>Note: If allergy object is provided, this field is required.<br/><br/>Maximum 500 characters.",
            "type": "string"
          },
          "system": {
            "description": "Type of coding system being used. Can be a URL.<br/><br/> Current supported systems in PointClickCare:<ul> <li>Medispan Allergy Class</li> <li>Medispan Ingredient ID</li> <li>http://www.nlm.nih.gov/research/umls/rxnorm</li> <li>http://hl7.org/fhir/ndfrt</li> <li>http://snomed.info/sct</li> <li>Custom</li> <li>None</li></ul> Note: If 'Other' category is selected, a URL is required.<br/><br/> Note: If allergy object is provided either code and system must both be provided, or neither can be provided.<br/><br/> Maximum 500 characters.",
            "type": "string"
          }
        },
        "title": "InboundAllergyDataAllergen",
        "type": "object"
      },
      "InboundAllergyResponse": {
        "description": "Historical Allergy Intolerance",
        "example": {
          "historicalAllergyIntoleranceId": 123
        },
        "properties": {
          "historicalAllergyIntoleranceId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "title": "InboundAllergyResponse",
        "type": "object"
      },
      "InboundDiagnosticReportFile": {
        "description": "Post HistoricalDiagnosticReportsFile",
        "example": {
          "carePeriodId": 558852,
          "documentName": "Document name",
          "historicalDiagnosticReportId": 1,
          "reportType": "Lab"
        },
        "properties": {
          "carePeriodId": {
            "description": "ID used to associate a record with a particular period of care delivered to a patient at an organization.",
            "format": "int32",
            "minimum": 0,
            "type": "integer"
          },
          "documentName": {
            "description": "Name of the document.<br/><br/>Maximum 200 characters.",
            "type": "string"
          },
          "historicalDiagnosticReportId": {
            "description": "This is the historicalDiagnosticReportLabId or historicalDiagnosticReportRadiologyId the file needs to be associated with.",
            "format": "int64",
            "minimum": 0,
            "type": "integer"
          },
          "reportType": {
            "description": "Type of file that is being uploaded. Supported types are 'Lab' or 'Rad'.",
            "type": "string"
          }
        },
        "required": [
          "carePeriodId",
          "documentName",
          "historicalDiagnosticReportId",
          "reportType"
        ],
        "title": "InboundDiagnosticReportFile",
        "type": "object"
      },
      "InboundDiagnosticReportFileResponse": {
        "description": "Historical Diagnostic Report File",
        "example": {
          "historicalDiagnosticFileId": 123456
        },
        "properties": {
          "historicalDiagnosticFileId": {
            "description": "PointClickCare's unique identifier for a historical diagnostic report file.",
            "format": "int64",
            "type": "integer"
          }
        },
        "title": "InboundDiagnosticReportFileResponse",
        "type": "object"
      },
      "InboundDocument": {
        "description": "Post Condition",
        "example": {
          "carePeriodId": 558852,
          "categoryId": 54,
          "documentName": "Document name",
          "effectiveDate": "2016-05-05",
          "reconciledFileId": 1234
        },
        "properties": {
          "carePeriodId": {
            "description": "ID used to associate a record with a particular period of care delivered to a patient at an organization.",
            "format": "int32",
            "minimum": 0,
            "type": "integer"
          },
          "categoryId": {
            "description": "PointClickCare System defined category under which a document can be classified. <br>The allowed Document Categories are listed below:<br><br>Note: Refer to GET Facility for Picklist documentCategories Id. Only Categories marked isCustom = false are applicable.<table><th>Id</th><th>Description</th><tr><td>documentCategories Id</td><td>Clinical Chart</td></tr><tr><td>documentCategories Id</td><td>Advance Directives</td></tr><tr><td>documentCategories Id</td><td>Pharmacy</td></tr><tr><td>documentCategories Id</td><td>Diagnostic</td></tr><tr><td>documentCategories Id</td><td>Laboratory</td></tr><tr><td>documentCategories Id</td><td>Diet</td></tr><tr><td>documentCategories Id</td><td>Supplement</td></tr><tr><td>documentCategories Id</td><td>Enteral Feed</td></tr><tr><td>documentCategories Id</td><td>Other</td></tr><tr><td>documentCategories Id</td><td>Clinical Document</td></tr><tr><td>documentCategories Id</td><td>Progress Note</td></tr></table>",
            "format": "int32",
            "minimum": 0,
            "type": "integer"
          },
          "documentName": {
            "description": "Name of the document. Maximum 200 characters.",
            "type": "string"
          },
          "effectiveDate": {
            "description": "Date as of which the document is in effect. The date format is 'YYYY-MM-DD'.",
            "format": "date",
            "type": "string"
          },
          "reconciledFileId": {
            "description": "File ID of a document that has been added to the patient chart. If present the historical document will have been considered reconciled.",
            "format": "int32",
            "minimum": 0,
            "type": "integer"
          }
        },
        "required": [
          "carePeriodId",
          "categoryId",
          "effectiveDate"
        ],
        "title": "InboundDocument",
        "type": "object"
      },
      "InboundDocumentResponse": {
        "description": "Historical Documents",
        "example": {
          "historicalDocumentId": 123456
        },
        "properties": {
          "historicalDocumentId": {
            "description": "PointClickCare's unique identifier for a historical document.",
            "format": "int64",
            "type": "integer"
          }
        },
        "title": "InboundDocumentResponse",
        "type": "object"
      },
      "InboundImmunization": {
        "description": "Historical Immunization",
        "example": {
          "administeredBy": "John Doe",
          "administration": {
            "route": {
              "coding": [
                {
                  "code": "intramuscularly",
                  "display": "intramuscularly",
                  "system": "https://pointclickcare.com/system/administration-route"
                }
              ]
            }
          },
          "administrationDateTime": "2018-04-27T18:57:33.000Z",
          "administrationLocation": {
            "coding": [
              {
                "code": "left_deltoid",
                "display": "Left Deltoid",
                "system": "https://pointclickcare.com/system/administrationLocation"
              }
            ]
          },
          "carePeriodId": 123456,
          "dose": "1.0",
          "doseUOM": "mg",
          "immunizationProduct": {
            "coding": [
              {
                "code": "135",
                "display": "Influenza, high dose seasonal",
                "system": "http://hl7.org/fhir/sid/cvx"
              }
            ]
          },
          "lotNumber": "L754623",
          "manufacturerName": "Placeholder Pharmaceuticals",
          "notes": "Patient was concerned about adverse reactions to immunization."
        },
        "properties": {
          "administeredBy": {
            "description": "Person that administered the medication.<br/><br/>Maximum 60 characters.",
            "type": "string"
          },
          "administrationLocation": {
            "$ref": "#/components/schemas/InboundImmunizationAdministration"
          },
          "administrationDateTime": {
            "description": "Date & time when immunization was administered. The Date and Time should be expressed in UTC in the following format:<ul><li>YYYY-MM-DDTHH:MM:SS.sssZ</li></ul>",
            "format": "date-time",
            "type": "string"
          },
          "administration": {
            "$ref": "#/components/schemas/InboundImmunizationAdministrationLocation"
          },
          "carePeriodId": {
            "description": "Represents the identifier used to associate a record with a particular period of care delivered to a patient at an organization. This identifier is obtained by calling the /care-periods endpoint.",
            "format": "int32",
            "minimum": 0,
            "type": "integer"
          },
          "dose": {
            "description": "The quantity of the immunization.<br/><br/>Note: This should be a numeric value.<br/><br/>Maximum 6 characters, including the decimal point (if value is a decimal).",
            "type": "string"
          },
          "doseUOM": {
            "description": "Unit of measure for immunization quantity. Can be in metric units, imperial units, or 'each' e.g. 'Capsule'.<br/><br/>PointClickCare supported units of measure are listed below:<ul><li>applicatorful</li><li>capsule</li><li>dose</li><li>mcg</li><li>mg</li><li>ml</li><li>spray</li><li>syringe</li><li>unit</li><li>vial</li><li>other</li></ul>",
            "type": "string"
          },
          "doseUOMOther": {
            "description": "Unit of Measure types not included in the PointClickCare list. Only used if 'Other' is passed as the doseUOM type.<br/><br/>Maximum 20 characters.",
            "type": "string"
          },
          "immunizationProduct": {
            "$ref": "#/components/schemas/InboundImmunizationProduct"
          },
          "lotNumber": {
            "description": "Lot number of Immunization batch.<br/><br/>Maximum 10 characters.",
            "type": "string"
          },
          "manufacturerName": {
            "description": "Name of Immunization Manufacturer.<br/><br/>Maximum 50 characters.",
            "type": "string"
          },
          "notes": {
            "description": "Notes related to the administration of the immunization.<br/><br/>Maximum 150 characters.",
            "type": "string"
          }
        },
        "required": [
          "carePeriodId",
          "immunizationProduct"
        ],
        "title": "InboundImmunization",
        "type": "object"
      },
      "InboundImmunizationAdministration": {
        "description": "Immunization administration.",
        "example": {
          "route": {
            "coding": [
              {
                "code": "intramuscularly",
                "display": "intramuscularly",
                "system": "https://pointclickcare.com/system/administration-route"
              }
            ]
          }
        },
        "properties": {
          "route": {
            "$ref": "#/components/schemas/InboundImmunizationRoute"
          }
        },
        "required": [
          "route"
        ],
        "title": "InboundImmunizationAdministration",
        "type": "object"
      },
      "InboundImmunizationAdministrationLocation": {
        "description": "Indicates site on the body where immunization was administered. Information includes coding system, specific route code, and text description of site of administration on the body.<br/><br/>If an administration location is specified, the system, code, and display fields are required to be passed.",
        "example": {
          "coding": [
            {
              "code": "left_deltoid",
              "display": "Left Deltoid",
              "system": "https://pointclickcare.com/system/administrationLocation"
            }
          ]
        },
        "properties": {
          "coding": {
            "description": "List of sites of administration on the body, can accept up to 3 entries.",
            "items": {
              "$ref": "#/components/schemas/InboundImmunizationAdministrationLocationCoding"
            },
            "maxItems": 3,
            "minItems": 1,
            "type": "array"
          }
        },
        "title": "InboundImmunizationAdministrationLocation",
        "type": "object"
      },
      "InboundImmunizationAdministrationLocationCoding": {
        "description": "Sites of administration on the body, can accept up to 3 entries.",
        "example": {
          "code": "left_deltoid",
          "display": "Left Deltoid",
          "system": "https://pointclickcare.com/system/administrationLocation"
        },
        "properties": {
          "code": {
            "description": "Specific code for the site of immunization administration on the body.<br/><br/>The codes and display associated with the PointClickCare system are listed below:<br/><table><th>Code</th><th>Display</th><tr><td>left_deltoid</td><td>Left Deltoid</td></tr><tr><td>right_deltoid</td><td>Right Deltoid</td></tr><tr><td>left_forearm</td><td>Left Forearm</td></tr><tr><td>right_forearm</td><td>Right Forearm</td></tr><tr><td>left_hip</td><td>Left Hip</td></tr><tr><td>right_hip</td><td>Right Hip</td></tr><tr><td>left_buttock</td><td>Left Buttock</td></tr><tr><td>right_buttock</td><td>Right Buttock</td></tr><tr><td>left_thigh</td><td>Left Thigh</td></tr><tr><td>right_thigh</td><td>Right Thigh</td></tr><tr><td>other</td><td>Other</td></tr></table>",
            "type": "string"
          },
          "display": {
            "description": "Text description of the site of immunization administration on the body.<br/><br/>Maximum 25 characters.",
            "type": "string"
          },
          "system": {
            "description": "Type of coding system being used e.g. 'PointClickCare'. Can be a URL. Supported systems are:<ul><li>PointClickCare: <a href=\"https://pointclickcare.com/system/administrationLocation\">https://pointclickcare.com/system/administrationLocation</a></li></ul>Maximum 500 characters.",
            "type": "string"
          }
        },
        "title": "InboundImmunizationAdministrationLocationCoding",
        "type": "object"
      },
      "InboundImmunizationCoding": {
        "description": "Immunization identifiers, can accept up to 3 entries.",
        "example": {
          "code": "135",
          "display": "Influenza, high dose seasonal",
          "system": "http://hl7.org/fhir/sid/cvx"
        },
        "properties": {
          "code": {
            "description": "Specific code for the immunization.<br/><br/>Maximum 50 characters.",
            "type": "string"
          },
          "display": {
            "description": "Text description of the immunization.<br/><br/>Maximum 500 characters.",
            "type": "string"
          },
          "system": {
            "description": "Type of coding system being used e.g. CVX. Can be a URL. Supported systems are:<ul><li>CVX: <a href=\"http://hl7.org/fhir/sid/cvx\">http://hl7.org/fhir/sid/cvx</a></li></ul>Maximum 500 characters.",
            "type": "string"
          }
        },
        "title": "InboundImmunizationCoding",
        "type": "object"
      },
      "InboundImmunizationProductCoding": {
        "description": "Immunization identifiers, can accept up to 3 entries.",
        "example": {
          "code": "135",
          "display": "Influenza, high dose seasonal",
          "system": "http://hl7.org/fhir/sid/cvx"
        },
        "properties": {
          "code": {
            "description": "Specific code for the immunization.<br/><br/>Maximum 50 characters. If a CVX system is specified,  a CVX code must be provided. If an uncoded immunization is pushed in, the system field must also be blank.",
            "type": "string"
          },
          "display": {
            "description": "Text description of the immunization.<br/><br/>Maximum 500 characters.",
            "type": "string"
          },
          "system": {
            "description": "Type of coding system being used e.g. CVX. Can be a URL. Supported systems are:<ul><li>CVX: <a href=\"http://hl7.org/fhir/sid/cvx\">http://hl7.org/fhir/sid/cvx</a></li></ul>Maximum 500 characters.If a CVX code is specified, a CVX system must be provided. If an uncoded immunization is pushed in,  the code field must also be blank.",
            "type": "string"
          }
        },
        "title": "InboundImmunizationProductCoding",
        "type": "object"
      },
      "InboundImmunizationProduct": {
        "description": "Immunization system used to define the immunization administered. Information includes coding system, immunization code, and text name of immunization.",
        "example": {
          "coding": [
            {
              "code": "135",
              "display": "Influenza, high dose seasonal",
              "system": "http://hl7.org/fhir/sid/cvx"
            }
          ]
        },
        "properties": {
          "coding": {
            "description": "List of immunization identifiers, can accept up to 3 entries.",
            "items": {
              "$ref": "#/components/schemas/InboundImmunizationProductCoding"
            },
            "maxItems": 3,
            "minItems": 1,
            "type": "array"
          }
        },
        "title": "InboundImmunizationProduct",
        "type": "object"
      },
      "InboundImmunizationResponse": {
        "description": "Historical Immunization.",
        "example": {
          "historicalImmunizationId": 1
        },
        "properties": {
          "historicalImmunizationId": {
            "description": "PointClickCare's unique identifier for a historical immunization.",
            "format": "int64",
            "type": "integer"
          }
        },
        "title": "InboundImmunizationResponse",
        "type": "object"
      },
      "InboundImmunizationRoute": {
        "description": "Route of administration of immunization. Information includes coding system, specific route code and text description of route of administration.<br/><br/>If an administration route is specified, the system, code, and display fields are required to be passed.",
        "example": {
          "coding": [
            {
              "code": "intramuscularly",
              "display": "intramuscularly",
              "system": "https://pointclickcare.com/system/administration-route"
            }
          ]
        },
        "properties": {
          "coding": {
            "description": "List of administration routes, can accept up to 3 entries.",
            "items": {
              "$ref": "#/components/schemas/InboundImmunizationCoding"
            },
            "maxItems": 3,
            "minItems": 1,
            "type": "array"
          }
        },
        "title": "InboundImmunizationRoute",
        "type": "object"
      },
      "Incident": {
        "description": "GET Incident.",
        "example": {
          "action": {
            "careplan": {
              "careConferenceRequired": true,
              "carePlanReviewed": true,
              "unusualOccurrence": false
            },
            "notified": [
              {
                "notifiedDate": "2020-11-29T19:06:18.484Z",
                "notifiedName": "Ivan Thrasher",
                "notifiedRole": "Physician"
              },
              {
                "notifiedDate": "2020-11-30T14:06:18.484Z",
                "notifiedName": "Nick Nickerson",
                "notifiedRole": "Family Member"
              }
            ],
            "progressNotes": [
              {
                "completedBy": "Y",
                "createdBy": "Steve MacDonald",
                "effectiveDate": "2020-11-30T15:06:18.484Z",
                "id": 0,
                "text": "Positive progress noted.",
                "type": "Shift Charting"
              },
              {
                "completedBy": "N",
                "createdBy": "Ralph Stevenson",
                "effectiveDate": "2020-11-30T15:06:18.484Z",
                "id": 0,
                "strikeoutReason": "Duplicate order.",
                "text": "Decline in behavior.",
                "type": "Behavior Note"
              }
            ],
            "triggeredAssessmentForm": [
              {
                "date": "2020-11-30T13:06:18.484Z",
                "description": "Schedule description",
                "id": 0,
                "status": "Status"
              },
              {
                "date": "2020-11-30T15:06:18.484Z",
                "description": "Another Schedule description",
                "id": 0,
                "status": "Another Status"
              }
            ]
          },
          "details": {
            "actionTaken": "None",
            "nursingDescription": "Slipped and fell.",
            "residentDescription": "Slipped and fell.",
            "takenToHospital": false,
            "unableToGiveDescription": false
          },
          "factors": {
            "environmental": [
              "Poor Lighting",
              "Rugs/Carpeting"
            ],
            "otherInformation": "No other information",
            "physiological": [
              "Drowsy",
              "Confused"
            ],
            "situation": [
              "Using Cane",
              "Wanderer"
            ]
          },
          "incidentDate": "2020-11-28T19:06:18.397Z",
          "incidentType": "Fall",
          "injuries": {
            "levelOfConsciousness": "Alert",
            "mentalStatus": [
              "Oriented to Person",
              "Oriented to Place"
            ],
            "mobility": "Ambulatory without assistance",
            "notes": "No additional notes.",
            "observed": [
              {
                "location": "5) Back of head",
                "type": "Abrasion"
              },
              {
                "location": "1) Top of Scalp",
                "type": "Hematoma"
              }
            ],
            "painLevel": {
              "date": "2020-11-29T19:06:18.435Z",
              "scale": {
                "coding": {
                  "code": "painad",
                  "display": "Pain Assessment in Advanced Dementia",
                  "system": "https://pointclickcare.com/system/pain-scale"
                },
                "painadComponents": {
                  "bodyLanguage": {
                    "description": "Relaxed",
                    "value": "0"
                  },
                  "breathing": {
                    "description": "Normal",
                    "value": "0"
                  },
                  "consolability": {
                    "description": "Distracted or Reassured by Voice or Touch",
                    "value": "1"
                  },
                  "facial": {
                    "description": "Facial Grimacing",
                    "value": "2"
                  },
                  "vocalization": {
                    "description": "Occasional Moan or Groan. Low Level of Speech with a Negative Quality",
                    "value": "1"
                  }
                },
                "score": "4"
              }
            }
          },
          "notes": [
            {
              "createdBy": "pcc-demo",
              "effectiveDate": "2020-11-29T19:06:18.484Z",
              "noteText": "No additional notes."
            },
            {
              "createdBy": "pcc-user",
              "effectiveDate": "2020-11-29T19:06:18.484Z",
              "noteText": "Important note details."
            }
          ],
          "postIncident": {
            "levelOfConsciousness": "Alert",
            "mentalStatus": [
              "Oriented to Person",
              "Oriented to Place"
            ],
            "mobility": "Ambulatory without assistance",
            "notes": "No additional notes.",
            "observed": [
              {
                "location": "5) Back of head",
                "type": "Abrasion"
              },
              {
                "location": "1) Top of Scalp",
                "type": "Hematoma"
              }
            ],
            "painLevel": {
              "date": "2020-11-29T19:06:18.478Z",
              "scale": {
                "coding": {
                  "code": "painad",
                  "display": "Pain Assessment in Advanced Dementia",
                  "system": "https://pointclickcare.com/system/pain-scale"
                },
                "painadComponents": {
                  "bodyLanguage": {
                    "description": "Relaxed",
                    "value": "0"
                  },
                  "breathing": {
                    "description": "Normal",
                    "value": "0"
                  },
                  "consolability": {
                    "description": "Distracted or Reassured by Voice or Touch",
                    "value": "1"
                  },
                  "facial": {
                    "description": "Facial Grimacing",
                    "value": "2"
                  },
                  "vocalization": {
                    "description": "Occasional Moan or Groan. Low Level of Speech with a Negative Quality",
                    "value": "1"
                  }
                },
                "score": "4"
              }
            }
          },
          "signatures": [
            {
              "signedBy": "pcc-demo",
              "signedDate": "2020-11-30T19:06:18.484Z"
            },
            {
              "signedBy": "pcc-user",
              "signedDate": "2020-11-30T18:06:18.484Z"
            }
          ],
          "witnessSummary": {
            "incidentWitnessed": true,
            "witnesses": [
              {
                "date": "2020-11-29T19:06:18.397Z",
                "name": "Ashlea Abel",
                "recorder": "Timothy O'toole",
                "relation": "Resident",
                "statement": "No statement given."
              },
              {
                "date": "2020-11-29T19:06:18.397Z",
                "name": "Malcom Smith",
                "position": "RN",
                "recorder": "Timothy O'toole",
                "relation": "Staff",
                "statement": "No statement given."
              }
            ]
          }
        },
        "properties": {
          "action": {
            "$ref": "#/components/schemas/IncidentAction"
          },
          "details": {
            "$ref": "#/components/schemas/IncidentDetail"
          },
          "factors": {
            "$ref": "#/components/schemas/IncidentFactor"
          },
          "incidentDate": {
            "description": "Date and time recorded for the incident.",
            "format": "date-time",
            "type": "string"
          },
          "incidentType": {
            "description": "Type or nature of the incident.",
            "type": "string"
          },
          "injuries": {
            "$ref": "#/components/schemas/IncidentInjury"
          },
          "notes": {
            "description": "Details on additional notes added for the incident.",
            "items": {
              "$ref": "#/components/schemas/IncidentNote"
            },
            "type": "array"
          },
          "postIncident": {
            "$ref": "#/components/schemas/IncidentInjury"
          },
          "signatures": {
            "description": "Details on PointClickCare user who signed off on the incident report.",
            "items": {
              "$ref": "#/components/schemas/IncidentSignature"
            },
            "type": "array"
          },
          "witnessSummary": {
            "$ref": "#/components/schemas/IncidentWitness"
          }
        },
        "title": "Incident",
        "type": "object"
      },
      "IncidentAction": {
        "description": "Details on actions completed for incident including notification, complete progress notes, and triggered forms.",
        "example": {
          "careplan": {
            "careConferenceRequired": true,
            "carePlanReviewed": true,
            "unusualOccurrence": false
          },
          "notified": [
            {
              "notifiedDate": "2020-11-29T19:06:17.938Z",
              "notifiedName": "Ivan Thrasher",
              "notifiedRole": "Physician"
            },
            {
              "notifiedDate": "2020-11-30T14:06:17.938Z",
              "notifiedName": "Nick Nickerson",
              "notifiedRole": "Family Member"
            }
          ],
          "progressNotes": [
            {
              "completedBy": "Y",
              "createdBy": "Steve MacDonald",
              "effectiveDate": "2020-11-30T15:06:17.938Z",
              "id": 0,
              "text": "Positive progress noted.",
              "type": "Shift Charting"
            },
            {
              "completedBy": "N",
              "createdBy": "Ralph Stevenson",
              "effectiveDate": "2020-11-30T15:06:17.938Z",
              "id": 0,
              "strikeoutReason": "Duplicate order.",
              "text": "Decline in behavior.",
              "type": "Behavior Note"
            }
          ],
          "triggeredAssessmentForm": [
            {
              "date": "2020-11-30T13:06:17.939Z",
              "description": "Schedule description",
              "id": 0,
              "status": "Status"
            },
            {
              "date": "2020-11-30T15:06:17.939Z",
              "description": "Another Schedule description",
              "id": 0,
              "status": "Another Status"
            }
          ]
        },
        "properties": {
          "careplan": {
            "$ref": "#/components/schemas/IncidentActionCarePlan"
          },
          "notified": {
            "description": "Details on person or agency that was notified of the incident.",
            "items": {
              "$ref": "#/components/schemas/IncidentActionNotified"
            },
            "type": "array"
          },
          "progressNotes": {
            "description": "Details on progress note added for the resident related to the incident.",
            "items": {
              "$ref": "#/components/schemas/IncidentActionProgressNote"
            },
            "type": "array"
          },
          "triggeredAssessmentForm": {
            "description": "Details on a form triggered by the incident.",
            "items": {
              "$ref": "#/components/schemas/IncidentScheduleDetails"
            },
            "type": "array"
          }
        },
        "title": "IncidentAction",
        "type": "object"
      },
      "IncidentActionCarePlan": {
        "description": "Details on additional action required through care plan for the incident.",
        "example": {
          "careConferenceRequired": true,
          "carePlanReviewed": true,
          "unusualOccurrence": false
        },
        "properties": {
          "careConferenceRequired": {
            "description": "Flag indicating whether a care conference is required.",
            "type": "boolean"
          },
          "carePlanReviewed": {
            "description": "Flag indicating whether additional care plan needs to be reviewed for the incident.",
            "type": "boolean"
          },
          "unusualOccurrence": {
            "description": "Flag indicating whether an Unusual Occurrence Report needs to be created.",
            "type": "boolean"
          }
        },
        "title": "IncidentActionCarePlan",
        "type": "object"
      },
      "IncidentActionNotified": {
        "description": "Details on person or agency that was notified of the incident.",
        "example": {
          "notifiedDate": "2020-11-29T19:06:18.889Z",
          "notifiedName": "Ivan Thrasher",
          "notifiedRole": "Physician"
        },
        "properties": {
          "notifiedDate": {
            "description": "Date of notification.",
            "type": "string",
            "format": "date-time"
          },
          "notifiedName": {
            "description": "Name of notified person or agency.",
            "type": "string"
          },
          "notifiedRole": {
            "description": "Role of notified person or agency.",
            "type": "string"
          }
        },
        "title": "IncidentActionNotified",
        "type": "object"
      },
      "IncidentActionProgressNote": {
        "description": "Details on progress note added for the resident related to the incident.",
        "example": {
          "completedBy": "Y",
          "createdBy": "Steve MacDonald",
          "effectiveDate": "2020-11-30T15:06:18.875Z",
          "id": 0,
          "text": "Positive progress noted.",
          "type": "Shift Charting"
        },
        "properties": {
          "completedBy": {
            "description": "PointClickCare user who completed and signed the progress note.",
            "type": "string"
          },
          "createdBy": {
            "description": "PointClickCare user who recorded the progress note.",
            "type": "string"
          },
          "effectiveDate": {
            "description": "Date progress note was created.",
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "description": "PointClickCare's unique identifier for a progress note. This is information is returned as progressNoteId from <a href=\"document?operation=com.pointclickcare.docs.apidocs.api.progressnote.operationDefinition.GetProgressNoteListPublicOpDef\">GET ProgressNotes API</a>.",
            "format": "int32",
            "type": "integer"
          },
          "strikeoutReason": {
            "description": "Reason for striking out a completed progress note.",
            "type": "string"
          },
          "text": {
            "description": "Text description of the progress note recorded.",
            "type": "string"
          },
          "type": {
            "description": "Type of progress note recorded.",
            "type": "string"
          }
        },
        "title": "IncidentActionProgressNote",
        "type": "object"
      },
      "IncidentDetail": {
        "description": "Incident details.",
        "example": {
          "actionTaken": "None",
          "nursingDescription": "Slipped and fell.",
          "residentDescription": "Slipped and fell.",
          "takenToHospital": false,
          "unableToGiveDescription": false
        },
        "properties": {
          "actionTaken": {
            "description": "Description of the actions taken.",
            "type": "string"
          },
          "nursingDescription": {
            "description": "Description of the incident provided by the reporting nurse.",
            "type": "string"
          },
          "residentDescription": {
            "description": "Resident's statement about the incident.",
            "type": "string"
          },
          "takenToHospital": {
            "description": "Flag if resident was taken to the hospital.",
            "type": "boolean"
          },
          "unableToGiveDescription": {
            "description": "Flag indicating resident was unable to provide a statement about the incident.",
            "type": "boolean"
          }
        },
        "title": "IncidentDetail",
        "type": "object"
      },
      "IncidentFactor": {
        "description": "Description of physiological, environmental, and situational factors that may have contributed to the incident.",
        "example": {
          "environmental": [
            "Poor Lighting",
            "Rugs/Carpeting"
          ],
          "otherInformation": "No other information",
          "physiological": [
            "Drowsy",
            "Confused"
          ],
          "situation": [
            "Using Cane",
            "Wanderer"
          ]
        },
        "properties": {
          "environmental": {
            "description": "List of resident's environmental factors contributing to the incident.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "otherInformation": {
            "description": "Additional details on other factors contributing to the incident.",
            "type": "string"
          },
          "physiological": {
            "description": "List of resident's physiological factors contributing to the incident.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "situation": {
            "description": "List of resident's situational factors contributing to the incident.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "title": "IncidentFactor",
        "type": "object"
      },
      "IncidentInjury": {
        "description": "Details of injuries due to the incident.",
        "example": {
          "levelOfConsciousness": "Alert",
          "mentalStatus": [
            "Oriented to Person",
            "Oriented to Place"
          ],
          "mobility": "Ambulatory without assistance",
          "notes": "No additional notes.",
          "observed": [
            {
              "location": "5) Back of head",
              "type": "Abrasion"
            },
            {
              "location": "1) Top of Scalp",
              "type": "Hematoma"
            }
          ],
          "painLevel": {
            "date": "2020-11-29T19:06:19.019Z",
            "scale": {
              "coding": {
                "code": "painad",
                "display": "Pain Assessment in Advanced Dementia",
                "system": "https://pointclickcare.com/system/pain-scale"
              },
              "painadComponents": {
                "bodyLanguage": {
                  "description": "Relaxed",
                  "value": "0"
                },
                "breathing": {
                  "description": "Normal",
                  "value": "0"
                },
                "consolability": {
                  "description": "Distracted or Reassured by Voice or Touch",
                  "value": "1"
                },
                "facial": {
                  "description": "Facial Grimacing",
                  "value": "2"
                },
                "vocalization": {
                  "description": "Occasional Moan or Groan. Low Level of Speech with a Negative Quality",
                  "value": "1"
                }
              },
              "score": "4"
            }
          }
        },
        "properties": {
          "levelOfConsciousness": {
            "description": "Resident's level of consciousness. Possible values are: <br /><ul><li> Alert </li><li> Lethargic (drowsy) </li><li> Stuporus (responsive only to vigorous stimulation) </li><li> Comatose (Un-arousable to verbal or physical stimuli) </li></ul>",
            "type": "string"
          },
          "mentalStatus": {
            "description": "Mental status evaluation for cognitive functioning.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "mobility": {
            "description": "Resident's mobility. Possible value are: <br /><ul><li> ambulatory without assistance </li><li> ambulatory with assistance </li><li> wheelchair bound </li><li> bedridden </li>",
            "type": "string"
          },
          "notes": {
            "description": "Additional details about the resident's injuries.",
            "type": "string"
          },
          "observed": {
            "description": "Details on the injuries observed.",
            "items": {
              "$ref": "#/components/schemas/IncidentInjuryObserved"
            },
            "type": "array"
          },
          "painLevel": {
            "$ref": "#/components/schemas/IncidentInjuryPainLevel"
          }
        },
        "title": "IncidentInjury",
        "type": "object"
      },
      "IncidentInjuryObserved": {
        "description": "Details on the injuries observed.",
        "example": {
          "location": "5) Back of head",
          "type": "Abrasion"
        },
        "properties": {
          "location": {
            "description": "Location of the injury on the body.",
            "type": "string"
          },
          "type": {
            "description": "Type of injury experienced by the resident.",
            "type": "string"
          }
        },
        "title": "IncidentInjuryObserved",
        "type": "object"
      },
      "IncidentInjuryPainLevel": {
        "description": "Details on the level of pain experienced by the resident.",
        "example": {
          "date": "2020-11-29T19:06:18.846Z",
          "scale": {
            "coding": {
              "code": "painad",
              "display": "Pain Assessment in Advanced Dementia",
              "system": "https://pointclickcare.com/system/pain-scale"
            },
            "painadComponents": {
              "bodyLanguage": {
                "description": "Relaxed",
                "value": "0"
              },
              "breathing": {
                "description": "Normal",
                "value": "0"
              },
              "consolability": {
                "description": "Distracted or Reassured by Voice or Touch",
                "value": "1"
              },
              "facial": {
                "description": "Facial Grimacing",
                "value": "2"
              },
              "vocalization": {
                "description": "Occasional Moan or Groan. Low Level of Speech with a Negative Quality",
                "value": "1"
              }
            },
            "score": "4"
          }
        },
        "properties": {
          "date": {
            "description": "Date and time of when the pain level was recorded.",
            "format": "date-time",
            "type": "string"
          },
          "scale": {
            "$ref": "#/components/schemas/IncidentInjuryPainLevelScale"
          }
        },
        "title": "IncidentInjuryPainLevel",
        "type": "object"
      },
      "IncidentInjuryPainLevelScale": {
        "description": "Pain scale.",
        "example": {
          "coding": {
            "code": "painad",
            "display": "Pain Assessment in Advanced Dementia",
            "system": "https://pointclickcare.com/system/pain-scale"
          },
          "painadComponents": {
            "bodyLanguage": {
              "description": "Relaxed",
              "value": "0"
            },
            "breathing": {
              "description": "Normal",
              "value": "0"
            },
            "consolability": {
              "description": "Distracted or Reassured by Voice or Touch",
              "value": "1"
            },
            "facial": {
              "description": "Facial Grimacing",
              "value": "2"
            },
            "vocalization": {
              "description": "Occasional Moan or Groan. Low Level of Speech with a Negative Quality",
              "value": "1"
            }
          },
          "score": "4"
        },
        "properties": {
          "coding": {
            "$ref": "#/components/schemas/PostCoding"
          },
          "painadComponents": {
            "$ref": "#/components/schemas/IncidentInjuryPainad"
          },
          "description": {
            "description": "Text description of the numerical value.",
            "type": "string"
          },
          "score": {
            "description": "Score from the pain assessment.",
            "type": "string"
          }
        },
        "title": "IncidentInjuryPainLevelScale",
        "type": "object"
      },
      "IncidentInjuryPainad": {
        "description": "Used only for PAINAD assessment, these are standard subsections of the assessment.<br />Includes breathing, negative vocalization, facial expression, body language, and consolability.",
        "example": {
          "bodyLanguage": {
            "description": "Relaxed",
            "value": "0"
          },
          "breathing": {
            "description": "Normal",
            "value": "0"
          },
          "consolability": {
            "description": "Distracted or Reassured by Voice or Touch",
            "value": "1"
          },
          "facial": {
            "description": "Facial Grimacing",
            "value": "2"
          },
          "vocalization": {
            "description": "Occasional Moan or Groan. Low Level of Speech with a Negative Quality",
            "value": "1"
          }
        },
        "properties": {
          "bodyLanguage": {
            "description": "Subsection for 'Body Language' of the PAINAD assessment.",
            "$ref": "#/components/schemas/PainadComponent"
          },
          "breathing": {
            "description": "Subsection for 'Breathing' of the PAINAD assessment.",
            "$ref": "#/components/schemas/PainadComponent"
          },
          "consolability": {
            "description": "Subsection for 'Consolability' of the PAINAD assessment.",
            "$ref": "#/components/schemas/PainadComponent"
          },
          "facial": {
            "description": "Subsection for 'Facial Expression' of the PAINAD assessment.",
            "$ref": "#/components/schemas/PainadComponent"
          },
          "vocalization": {
            "description": "Subsection for 'Negative Vocalization' of the PAINAD assessment.",
            "$ref": "#/components/schemas/PainadComponent"
          }
        },
        "title": "IncidentInjuryPainad",
        "type": "object"
      },
      "IncidentNote": {
        "description": "Details on additional notes added for the incident.",
        "example": {
          "createdBy": "pcc-demo",
          "effectiveDate": "2020-11-29T19:06:17.926Z",
          "noteText": "No additional notes."
        },
        "properties": {
          "createdBy": {
            "description": "PointClickCare user who recorded the note.",
            "type": "string"
          },
          "effectiveDate": {
            "description": "Date and time the note was recorded.",
            "format": "date-time",
            "type": "string"
          },
          "noteText": {
            "description": "Text description of the note.",
            "type": "string"
          }
        },
        "title": "IncidentNote",
        "type": "object"
      },
      "IncidentScheduleDetails": {
        "description": "Details on a form triggered by the incident.",
        "example": {
          "date": "2020-11-30T13:06:19.100Z",
          "description": "Schedule description",
          "id": 0,
          "status": "Status"
        },
        "properties": {
          "date": {
            "description": "Date the assessment was started.",
            "format": "date-time",
            "type": "string"
          },
          "description": {
            "description": "Assessment form title.",
            "type": "string"
          },
          "id": {
            "description": "PointClickCare's unique identifier for an assessment. This information is returned as assessmentId from <a href=\"document?operation=com.pointclickcare.docs.apidocs.api.assessment.operationDefinition.GetAssessmentPublicOpDef\">GET Assessment API</a>.",
            "format": "int32",
            "type": "integer"
          },
          "status": {
            "description": "Progress status of the assessment form.",
            "type": "string"
          }
        },
        "title": "IncidentScheduleDetails",
        "type": "object"
      },
      "IncidentSignature": {
        "description": "Details on PointClickCare user who signed off on the incident report.",
        "example": {
          "signedBy": "pcc-demo",
          "signedDate": "2020-11-30T19:06:17.947Z"
        },
        "properties": {
          "signedBy": {
            "description": "PointClickCare user who signed off on the incident report.",
            "type": "string"
          },
          "signedDate": {
            "description": "Date the incident report was signed off.",
            "format": "date-time",
            "type": "string"
          }
        },
        "title": "IncidentSignature",
        "type": "object"
      },
      "IncidentWitness": {
        "description": "Details on witness statement of the incident.",
        "example": {
          "incidentWitnessed": true,
          "witnesses": [
            {
              "date": "2020-11-29T19:06:17.947Z",
              "name": "Ashlea Abel",
              "recorder": "Timothy O'toole",
              "relation": "Resident",
              "statement": "No statement given."
            },
            {
              "date": "2020-11-29T19:06:17.947Z",
              "name": "Malcom Smith",
              "position": "RN",
              "recorder": "Timothy O'toole",
              "relation": "Staff",
              "statement": "No statement given."
            }
          ]
        },
        "properties": {
          "incidentWitnessed": {
            "description": "Flag indicating whether the incident was witnessed.",
            "type": "boolean"
          },
          "witnesses": {
            "description": "Details on the witness and their statement.",
            "items": {
              "$ref": "#/components/schemas/IncidentWitnessDetails"
            },
            "type": "array"
          }
        },
        "title": "IncidentWitness",
        "type": "object"
      },
      "IncidentWitnessDetails": {
        "description": "Details on the witness and their statement.",
        "example": {
          "date": "2020-11-29T19:06:18.875Z",
          "name": "Ashlea Abel",
          "recorder": "Timothy O'toole",
          "relation": "Resident",
          "statement": "No statement given."
        },
        "properties": {
          "date": {
            "description": "Date the witness statement was recorded.",
            "format": "date-time",
            "type": "string"
          },
          "name": {
            "description": "Name of witness.",
            "type": "string"
          },
          "position": {
            "description": "Job title of the witness. Only applicable if relation field is 'staff'.",
            "type": "string"
          },
          "recorder": {
            "description": "Name of the statement recorder.",
            "type": "string"
          },
          "relation": {
            "description": "Type of relation the witness has to the resident. Possible values can be: <br /><ul><li> Staff </li><li> Relative </li><li> Resident </li><li> Guest/Visitor </li></ul>",
            "type": "string"
          },
          "statement": {
            "description": "Details of the witness statement.",
            "type": "string"
          }
        },
        "title": "IncidentWitnessDetails",
        "type": "object"
      },
      "InsuredPartyAddress": {
        "description": "Represents the insured party's address",
        "example": {
          "addressLine1": "123 Street",
          "addressLine2": "addressLine2",
          "addressLine3": "addressLine3",
          "city": "Montgomery",
          "country": "US",
          "county": "County 1",
          "postalCode": "35201-1234",
          "state": "AL"
        },
        "properties": {
          "addressLine1": {
            "description": "Represents the street address for the insured party.",
            "type": "string"
          },
          "addressLine2": {
            "description": "Represents additional address information for the insured party.",
            "type": "string"
          },
          "addressLine3": {
            "description": "Represents additional address information for the insured party.",
            "type": "string"
          },
          "city": {
            "description": "Represents the city for the insured party.",
            "type": "string"
          },
          "country": {
            "description": "Represents the country for the insured party.",
            "type": "string"
          },
          "county": {
            "description": "Represents the county for the insured party.",
            "type": "string"
          },
          "postalCode": {
            "description": "Represents the Postal/Zip code for the insured party.",
            "type": "string"
          },
          "state": {
            "description": "Represents the state or province for the insured party.",
            "type": "string"
          }
        },
        "title": "InsuredPartyAddress",
        "type": "object"
      },
      "InsuredPartyPublic": {
        "description": "Represents the insured party.",
        "example": {
          "address": {
            "addressLine1": "123 Street",
            "addressLine2": "addressLine2",
            "addressLine3": "addressLine3",
            "city": "Montgomery",
            "country": "US",
            "county": "County 1",
            "postalCode": "35201-1234",
            "state": "AL"
          },
          "birthDate": "1940-11-30",
          "firstName": "Ann",
          "gender": "F",
          "lastName": "Smith",
          "middleName": "Lyn",
          "relationship": "Mother",
          "socialBeneficiaryIdentifier": "000456"
        },
        "properties": {
          "birthDate": {
            "description": "Represents the insured party's birth date, if available. The date format is YYYY-MM-DD.",
            "format": "date",
            "type": "string"
          },
          "firstName": {
            "description": "Represents the insured party\\u2019s first name.",
            "type": "string"
          },
          "gender": {
            "description": "Represents the gender of the insured party. Possible responses are 'M', 'F' or 'U'.",
            "type": "string"
          },
          "lastName": {
            "description": "Represents the insured party\\u2019s last name.",
            "type": "string"
          },
          "middleName": {
            "description": "Represents the insured party\\u2019s middle name.",
            "type": "string"
          },
          "relationship": {
            "description": "",
            "type": "string"
          },
          "socialBeneficiaryIdentifier": {
            "description": "The patient's Social Security Number (SSN) for US facilities or Social Insurance Number (SIN) for Canadian facilities. PointClickCare allows facilities to define their own format for the resident identifiers. Facilities can only use spaces, hyphens (\"-\") and dots (\".\") as separators. The value returned in the response includes the separators. SSN is not returned by default for production apps. Please contact your Partnership Manager and submit a business use case to request this.",
            "type": "string"
          }
        },
        "title": "InsuredPartyPublic",
        "type": "object"
      },
      "IssuerAddress": {
        "description": "Represents the issuerâs address.",
        "example": {
          "addressLine1": "123 Street",
          "addressLine2": "addressLine2",
          "addressLine3": "addressLine3",
          "city": "Montgomery",
          "country": "US",
          "county": "County 1",
          "postalCode": "35201-1234",
          "state": "AL"
        },
        "properties": {
          "addressLine1": {
            "description": "Represents the street address for the issuer.",
            "type": "string"
          },
          "addressLine2": {
            "description": "Represents additional address information for the issuer.",
            "type": "string"
          },
          "addressLine3": {
            "description": "Represents additional address information for the issuer.",
            "type": "string"
          },
          "city": {
            "description": "Represents the city for the issuer.",
            "type": "string"
          },
          "country": {
            "description": "Represents the country for the issuer.",
            "type": "string"
          },
          "county": {
            "description": "Represents the county for the issuer.",
            "type": "string"
          },
          "postalCode": {
            "description": "Represents the Postal/Zip code for the issuer.",
            "type": "string"
          },
          "state": {
            "description": "Represents the state or province for the issuer.",
            "type": "string"
          }
        },
        "title": "IssuerAddress",
        "type": "object"
      },
      "IssuerPublic": {
        "description": "Represents the issuer (insurance company).",
        "example": {
          "contactName": "John Doe",
          "group": "17171717",
          "groupName": "Medipan",
          "issuerAddress": {
            "addressLine1": "123 Street",
            "addressLine2": "addressLine2",
            "addressLine3": "addressLine3",
            "city": "Montgomery",
            "country": "US",
            "county": "County 1",
            "postalCode": "35201-1234",
            "state": "AL"
          },
          "issuerId": 1234,
          "issuerName": "Issuer Company 1",
          "phone": "444-888-8888",
          "planEffectiveDate": "2016-08-22T17:32:28.000Z",
          "planExpirationDate": "2017-08-22T17:32:28.000Z",
          "planNumber": "123834",
          "providerNumber": "456789.0"
        },
        "properties": {
          "contactName": {
            "description": "Represents the issuer’s contact name.",
            "type": "string"
          },
          "group": {
            "description": "Represents the insurance group number given by the payer to the patient, if available.",
            "type": "string"
          },
          "groupName": {
            "description": "Represents the insurance group name given by the payer to the patient, if available.",
            "type": "string"
          },
          "issuerAddress": {
            "$ref": "#/components/schemas/IssuerAddress"
          },
          "issuerId": {
            "description": "Represents PointClickCare’s unique identifier for the issuer. The identifier is unique at an organization level.",
            "format": "int32",
            "type": "integer"
          },
          "issuerName": {
            "description": "Represents the name of the issuer.",
            "type": "string"
          },
          "phone": {
            "description": "Represents the issuer’s phone number.",
            "type": "string"
          },
          "planEffectiveDate": {
            "description": "Represents the date when the insurance plan came into effect. The date and time format are expressed in UTC in the following format: YYYY-MM-DDTHH:MM:SS.sssZ.",
            "format": "date-time",
            "type": "string"
          },
          "planExpirationDate": {
            "description": "Represents the date when the insurance plan is effective till. The date and time format are expressed in UTC in the following format: YYYY-MM-DDTHH:MM:SS.sssZ.",
            "format": "date-time",
            "type": "string"
          },
          "planNumber": {
            "description": "Represents the issuer’s policy/plan number, if available.",
            "type": "string"
          },
          "providerNumber": {
            "description": "Represents the provider number for the issuer.",
            "type": "string"
          }
        },
        "title": "IssuerPublic",
        "type": "object"
      },
      "JournalEntriesSummary": {
        "description": "Journal Entry of a summarized account receivable transaction.",
        "title": "JournalEntriesSummary",
        "type": "object",
        "example": {
          "facId": 4,
          "facilityCode": "6688",
          "facilityName": "Facility 1",
          "postingPeriodYear": 2024,
          "postingPeriodMonth": 1,
          "jeCode": "RC",
          "jeName": "Current Period - Accommodation",
          "glAccountNumber": "TP01-111000",
          "glAccountDescription": "A/R - Private Pay",
          "consolidationAccountNumber": "TP01-111000-6688",
          "amount": "12345.67",
          "currency": "CAD",
          "companyCode": "AB",
          "costCenterCode": "XYZ"
        },
        "properties": {
          "facId": {
            "description": "PointClickCare's unique identifier for a facility within the organization.",
            "format": "int32",
            "type": "integer"
          },
          "facilityCode": {
            "description": "Another unique identifier for the facility. Facility code can be configured by an organization in the PointClickCare application. Facility Code will be included if configured by customer.",
            "type": "string"
          },
          "facilityName": {
            "description": "The name of the facility.",
            "type": "string"
          },
          "postingPeriodYear": {
            "description": "Represents the calendar year the transactions were posted.",
            "format": "int32",
            "type": "integer"
          },
          "postingPeriodMonth": {
            "description": "Represents the calendar month the transactions were posted.",
            "format": "int32",
            "type": "integer"
          },
          "jeCode": {
            "description": "Represents the short code for type of Journal Entry (associated to JE Name).<br><br>Possible values: <br><ul><li>RC</li><li>DC</li><li>AC</li><li>OC</li><li>C</li><li>RP</li><li>DP</li><li>AP</li><li>OP</li><li>T</li></ul>",
            "type": "string"
          },
          "jeName": {
            "description": "Represents the description for Journal Entry (associated to JE Code). <br><br> Possible values of JE Name corresponding to the JE Code: <table><tr><th>JE Code</th><th>JE Name</th></tr> <tr><td>RC</td><td>Current Period - Accommodation</td></tr> <tr><td>DC</td><td>Current Period - Days</td></tr> <tr><td>AC</td><td>Current Period - Ancillary</td></tr> <tr><td>OC</td><td>Current Period - Other</td></tr> <tr><td>C</td><td>Cash Receipts</td></tr> <tr><td>RP</td><td>Past Period - Accommodation</td></tr> <tr><td>DP</td><td>Past Period - Days</td></tr> <tr><td>AP</td><td>Past Period - Ancillary</td></tr> <tr><td>OP</td><td>Past Period - Other</td></tr> <tr><td>T</td><td>Trust</td></tr></table>",
            "type": "string"
          },
          "glAccountNumber": {
            "description": "Represents the GL Account Number. Entries for Dollar Amounts or Days are summarized by GL Account Number.  This value is configured by the customer and may not be unique across customers.",
            "type": "string"
          },
          "glAccountDescription": {
            "description": "Represents the description associated to the GL Account number.",
            "type": "string"
          },
          "consolidationAccountNumber": {
            "description": "Represents the Consolidation Account Number. Consolidation Account Number will be included if configured by the customer.  This value is configured by the customer and may not be unique across customers.",
            "type": "string"
          },
          "amount": {
            "description": "Represents the total dollar amount for a given account number and journal entry type combination. Amount will be populated for all entries, except Days, which will be represented as Days. Amount will not include commas and will include digits (within unicode range 00030 through 00039) with a dot separator (full stop character with unicode 0002E) for cents where cents is at most 2 levels of precision. Negative amounts will be preceded by a minus character (unicode 0002D).",
            "type": "string"
          },
          "currency": {
            "description": "The ISO 4217 3 letter code for the currency of the journal entry monetary amount. (Examples are USD for United States Dollar, CAD for Canadian Dollar).",
            "type": "string"
          },
          "days": {
            "description": "Represents the total number of days for a given account number and journal entry type combination. This field will be populated only for Current Period - Days (DC) and Past Period - Days (DP) entries.",
            "format": "int32",
            "type": "integer"
          },
          "companyCode": {
            "description": "Represents the unique identifier assigned to a business unit within a larger organization. Company code will be included if configured by customer.",
            "type": "string"
          },
          "costCenterCode": {
            "description": "Represents the code associated with the Facility's Cost Center. Cost Center Code will be included if configured by customer.",
            "type": "string"
          }
        }
      },
      "JournalEntriesSummaryList": {
        "type": "object",
        "title": "JournalEntriesSummaryList",
        "description": "List of journal entries (summarized account receivable transactions) for the current period for a facility after month-end closing.",
        "properties": {
          "data": {
            "type": "array",
            "description": "List of journal entries (summarized account receivable transactions) for the current period for a facility after month-end closing.",
            "items": {
              "$ref": "#/components/schemas/JournalEntriesSummary"
            }
          },
          "paging": {
            "$ref": "#/components/schemas/PagingResponseByPage"
          }
        },
        "example": {
          "data": [
            {
              "facId": 4,
              "facilityCode": "6688",
              "facilityName": "Facility 1",
              "postingPeriodYear": 2024,
              "postingPeriodMonth": 1,
              "jeCode": "RC",
              "jeName": "Current Period - Accommodation",
              "glAccountNumber": "TP01-111000",
              "glAccountDescription": "A/R - Private Pay",
              "consolidationAccountNumber": "TP01-111000-6688",
              "amount": "12345.67",
              "currency": "CAD",
              "companyCode": "AB",
              "costCenterCode": "XYZ"
            },
            {
              "facId": 4,
              "facilityCode": "6688",
              "facilityName": "Facility 1",
              "postingPeriodYear": 2024,
              "postingPeriodMonth": 1,
              "jeCode": "DC",
              "jeName": "Current Period - Days",
              "glAccountNumber": "TP01-900100",
              "glAccountDescription": "Medicare A Days",
              "consolidationAccountNumber": "TP01-900100-6688",
              "days": 123,
              "companyCode": "AB",
              "costCenterCode": "XYZ"
            }
          ],
          "paging": {
            "hasMore": true,
            "page": 1,
            "pageSize": 2
          }
        }
      },
      "LabLocation": {
        "description": "Details on the laboratory clinic reporting and performing the test observation. If the performing clinic is different than the reporting clinic, then please provide the performing clinic details in the performing clinic property. At least 1 of the labInfo properties must be included in API call.",
        "example": {
          "labId": 4962,
          "labName": "Test performing lab"
        },
        "properties": {
          "labId": {
            "description": "PointClickCare's unique identifier for the laboratory performing the observation.",
            "format": "int32",
            "type": "integer"
          },
          "labName": {
            "description": "Name of observation performing lab.",
            "type": "string"
          },
          "labNPI": {
            "description": "10-digit unique identification number for covered laboratories used for billing Medicare and other Payors.",
            "type": "string"
          },
          "labPhoneNumber": {
            "description": "Telephone number of the performing lab. Numeric digits only. Allowed number of numeric digits: 7, 8, 10, 11, 12, 14, 15. Only numeric digits recommended. However, the following formats are allowed as well. For 7 digits use 123-4567. For 8 digits, use 1234-5678. For 10 digits, use (123) 456-7890. For 11 digits, use (123) 4567-8901. For 12 digits, use (123) 45-67-89-012. For 14 digits, use (123) 45-67-89-01-234. For 15 digits, use (123) 45-6789-012345.",
            "type": "string"
          }
        },
        "title": "LabLocation",
        "type": "object"
      },
      "LabResult": {
        "description": "observation result(s) reported.",
        "example": {
          "abnormalCode": "N",
          "notes": "Notes for test result",
          "observationCode": "94558-4",
          "observationName": "SARS coronavirus 2 Ag",
          "result": "not detected",
          "status": "FINAL"
        },
        "properties": {
          "abnormalCode": {
            "description": "Abnormal code of observation result. Possible values are: <ul><li>N - Normal</li><li>LL - Below lower panic limits</li><li>L - Below Low normal</li><li>H - Above High Normal</li><li>HH - Above upper panic limits</li><li>A - Abnormal - non numeric</li><li>AA - Very Abnormal - non numeric</li><li>BL - Below lowest instrument scale</li><li>AH - Above highest instrument scale</li><li>U - Significant change up</li><li>D - Significant change down</li><li>B - Better</li><li>W - Worse</li><li>I - Intermediate</li><li>MS - Moderately Susceptible</li><li>R - Resistant</li><li>S - Susceptible</li><li>VS - Very Susceptible</li></ul>.",
            "enum": [
              "N",
              "LL",
              "L",
              "H",
              "HH",
              "A",
              "AA",
              "BL",
              "AH",
              "U",
              "D",
              "B",
              "W",
              "I",
              "MS",
              "R",
              "S",
              "VS"
            ],
            "type": "string"
          },
          "notes": {
            "description": "Notes/comments associated with the observation. Line breaks are represented by \\n, carriage returns by \\r and and a combination of both is represented by \\r\\n. Backslashes in the text must be represented as \\\\\\\\.",
            "type": "string"
          },
          "observationCode": {
            "description": "Represents the LOINC code for the observation.",
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "observationMethod": {
            "description": "Represents the observation Method.",
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "observationName": {
            "description": "Represents the observation name.",
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "observationUnits": {
            "description": "Represents the unit of the value for the measured amount of the observation.",
            "maxLength": 60,
            "minLength": 0,
            "type": "string"
          },
          "referenceRange": {
            "description": "Represents the reference range for the observation.",
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "result": {
            "description": "Represents the observation result.",
            "maxLength": 200,
            "minLength": 0,
            "type": "string"
          },
          "status": {
            "description": "Represents the status of the result for an observation. Possible values are: <ul><li>PENDING</li><li>CORRECTED</li><li>FINAL</li><li>INVALID</li></ul>",
            "enum": [
              "PENDING",
              "CORRECTED",
              "FINAL",
              "INVALID"
            ],
            "type": "string"
          }
        },
        "required": [
          "observationName",
          "result",
          "abnormalCode",
          "status"
        ],
        "title": "LabResult",
        "type": "object"
      },
      "LabResultPatient": {
        "description": "Details of the patient for whom the observation results belong.",
        "example": {
          "firstName": "Kaylen",
          "lastName": "Clay",
          "patientId": 846287
        },
        "properties": {
          "firstName": {
            "description": "First name of patient",
            "type": "string"
          },
          "lastName": {
            "description": "Last name of patient",
            "type": "string"
          },
          "medicalRecordNumber": {
            "description": "The patient's medical record number, if available.",
            "type": "string"
          },
          "patientId": {
            "description": "PointClickCare's unique identifier for a patient within the organization. When a patient is admitted to a facility within an organization, they are assigned a patientId which is unique to their stay within that facility. If the same patient were to get admitted to another facility within the same organization in the future, they would be assigned a new patientId. The patientId however is unique at the organization level. That is, no two patients across different facilities within the organization will have the same patientId.",
            "format": "int32",
            "type": "integer"
          },
          "vendorPatientId": {
            "description": "Vendor's unique identifier for the patient.",
            "maxLength": 75,
            "minLength": 0,
            "type": "string"
          }
        },
        "title": "LabResultPatient",
        "type": "object",
        "required": [
          "patientId"
        ]
      },
      "LabResultProvider": {
        "description": "Details on the practitioner that ordered the tests.",
        "example": {
          "firstName": "Randall",
          "lastName": "Bean",
          "npi": "1811996168 "
        },
        "properties": {
          "firstName": {
            "description": "The practitioner's first name.",
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "lastName": {
            "description": "The practitioner's last name.",
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "npi": {
            "description": "National Provider ID for the practitioner.",
            "type": "string"
          }
        },
        "title": "LabResultProvider",
        "type": "object"
      },
      "LabResultReport": {
        "description": "Lab result report",
        "example": {
          "vendorOrderNumber": "243670",
          "vendorReportId": "12345",
          "documentName": "attachment_123.pdf",
          "labInfo": {
            "labId": 4962,
            "labName": "Test performing lab",
            "labNPI": "1811996168",
            "labPhoneNumber": "(404) 999-1234"
          },
          "labResults": [
            {
              "abnormalCode": "N",
              "notes": "Notes for test result",
              "observationCode": "94558-4",
              "observationName": "SARS coronavirus 2 Ag",
              "result": "not detected",
              "status": "FINAL"
            }
          ],
          "notes": "Lab result report note",
          "patientInfo": {
            "firstName": "Kaylen",
            "lastName": "Clay",
            "patientId": 846287
          },
          "practitionerInfo": {
            "firstName": "Randall",
            "lastName": "Bean",
            "npi": "1811996168"
          },
          "reportCategory": "MICROBIOLOGY",
          "reportDate": "2020-10-01T18:01:33.000Z",
          "reportName": "COVID-19 Testing",
          "reportStatus": "COMPLETED",
          "specimenCollectionDate": "2020-10-01T17:56:10.000Z",
          "specimenReceivedDate": "2020-10-01T17:56:10.000Z",
          "performingClinic": "XYZ Clinic"
        },
        "properties": {
          "labInfo": {
            "$ref": "#/components/schemas/LabLocation"
          },
          "labResults": {
            "description": "List of observation result(s) reported.",
            "items": {
              "$ref": "#/components/schemas/LabResult"
            },
            "type": "array"
          },
          "notes": {
            "description": "Notes/comments associated with the observation. Line breaks are represented by \\n, carriage returns by \\r and and a combination of both is represented by \\r\\n. Backslashes in the text must be represented as \\\\\\\\.",
            "type": "string"
          },
          "orderId": {
            "description": "PointClickCare’s Unique Identifier for the Order. This is only applicable for bidirectional integrations where PointClickCare is sending Orders to Vendors and Vendor is returning results to PointClickCare. This field is only to be used for PointClickCare's Order ID. <strong>Order ID is a mandatory field, if VendorOrderNumber is not provided. This field is only to be used for OrderID.</strong>",
            "format": "int32",
            "type": "integer"
          },
          "vendorOrderNumber": {
            "description": "Vendor's unique identifier for the order. <b>VendorOrderNumber is a mandatory field, if orderID is not provided. This field is only to be used for VendorOrderNumber.</b>",
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "patientInfo": {
            "$ref": "#/components/schemas/LabResultPatient"
          },
          "practitionerInfo": {
            "$ref": "#/components/schemas/LabResultProvider"
          },
          "reportCategory": {
            "description": "Represents the category that the report belongs to. Multiple categories may be provided for a report, separate by \",\". Possible values are: <ul><li>CHEMISTRY</li><li>MICROBIOLOGY</li><li>ANATOMIC_PATHOLOGY</li><li>COAGULATION</li><li>CHALLENGE</li><li>HEMATOLOGY</li><li>SEROLOGY</li><li>SEMEN_ANALYSIS</li><li>CANCER_SCREENING_TESTS</li><li>CYTOLOGY</li><li>BLOOD_BANK</li><li>UNKNOWN_CATEGORY</li></ul>",
            "type": "string"
          },
          "reportDate": {
            "description": "Represents the date and time when the report was issued. The reportDate must not be earlier than specimenCollectionDate and specimenReceivedDate. The date and time are expressed in UTC in the following format YYYY-MM-DDTHH:MM:SS.sssZ.",
            "format": "date-time",
            "type": "string"
          },
          "reportName": {
            "description": "Represents the name of the report.",
            "type": "string"
          },
          "reportStatus": {
            "description": "Represents the status of the report. If not provided, the value will be deduced from status of observation results. Possible values are: <ul><li>COMPLETED</li><li>RESULTED</li><li>CANCELLED</li></ul>",
            "enum": [
              "COMPLETED",
              "RESULTED",
              "CANCELLED"
            ],
            "type": "string"
          },
          "specimenCollectionDate": {
            "description": "Represents the date and time of the specimen collection(s). The date and time are expressed in UTC in the following format YYYY-MM-DDTHH:MM:SS.sssZ.",
            "format": "date-time",
            "type": "string"
          },
          "specimenReceivedDate": {
            "description": "Represents the date and time of the specimen collection(s) was received. The date and time are expressed in UTC in the following format YYYY-MM-DDTHH:MM:SS.sssZ.",
            "format": "date-time",
            "type": "string"
          },
          "vendorReportId": {
            "description": "Represents vendors unique identifier for the report.",
            "type": "string"
          },
          "documentName": {
            "description": "Represents the display name of the attached document.  File format should be included as an extension to the document name (example: Document1.pdf). Maximum file size 2MB.",
            "type": "string"
          },
          "performingClinic": {
            "description": "Name of the laboratory clinic performing the test observation.",
            "maxLength": 200,
            "type": "string"
          }
        },
        "required": [
          "labInfo",
          "labResults",
          "reportDate",
          "patientInfo",
          "practitionerInfo",
          "reportCategory",
          "reportName"
        ],
        "title": "LabResultReport",
        "type": "object"
      },
      "RadiologyLocation": {
        "description": "Details on the radiology clinic reporting and performing the test observation. If the performing clinic is different than the reporting clinic, then please provide the performing clinic details in the performing clinic property. At least 1 of the radInfo properties must be included in API call.",
        "example": {
          "radId": 4962,
          "radName": "Sample performing clinic",
          "radNPI": "1811996168",
          "radPhoneNumber": "(555) 999-1234"
        },
        "properties": {
          "radId": {
            "description": "PointClickCare's unique identifier for the radiology clinic performing the observation.",
            "format": "int32",
            "type": "integer"
          },
          "radName": {
            "description": "Name of observation performing radiology clinic.",
            "type": "string"
          },
          "radNPI": {
            "description": "10-digit unique identification number for covered radiology clinics used for billing Medicare and other Payors.",
            "type": "string"
          },
          "radPhoneNumber": {
            "description": "Telephone number of the performing radiology clinic. Numeric digits only. Allowed number of numeric digits: 7, 8, 10, 11, 12, 14, 15. Only numeric digits recommended. However, the following formats are allowed as well. For 7 digits use 123-4567. For 8 digits, use 1234-5678. For 10 digits, use (123) 456-7890. For 11 digits, use (123) 4567-8901. For 12 digits, use (123) 45-67-89-012. For 14 digits, use (123) 45-67-89-01-234. For 15 digits, use (123) 45-6789-012345.",
            "type": "string"
          }
        },
        "title": "RadiologyLocation",
        "type": "object"
      },
      "RadiologyResult": {
        "description": "List of procedure result(s) reported.",
        "example": {
          "procedureCode": "71550",
          "interpretationNotes": "Notes for test result",
          "resultStatus": "FINAL"
        },
        "properties": {
          "procedureCode": {
            "description": "Represents the CPT code for the procedure.",
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "interpretationNotes": {
            "description": "Interpretation/Notes associated with the procedure. Line breaks are represented by \\n, carriage returns by \\r and and a combination of both is represented by \\r\\n. Backslashes in the text must be represented as \\\\\\\\.",
            "type": "string"
          },
          "resultStatus": {
            "description": "Represents the status of the result for an observation. Possible values are: <ul><li>PENDING</li><li>CORRECTED</li><li>FINAL</li><li>INVALID</li></ul>",
            "enum": [
              "PENDING",
              "CORRECTED",
              "FINAL",
              "INVALID"
            ],
            "type": "string"
          }
        },
        "required": [
          "procedureCode",
          "resultStatus"
        ],
        "title": "RadiologyResult",
        "type": "object"
      },
      "RadiologyResultPatient": {
        "description": "Details of the patient for whom the radiology results belong.",
        "example": {
          "firstName": "Kaylen",
          "lastName": "Clay",
          "patientId": 846287
        },
        "properties": {
          "firstName": {
            "description": "First name of patient",
            "type": "string"
          },
          "lastName": {
            "description": "Last name of patient",
            "type": "string"
          },
          "medicalRecordNumber": {
            "description": "The patient's medical record number, if available.",
            "type": "string"
          },
          "patientId": {
            "description": "PointClickCare's unique identifier for a patient within the organization. When a patient is admitted to a facility within an organization, they are assigned a patientId which is unique to their stay within that facility. If the same patient were to get admitted to another facility within the same organization in the future, they would be assigned a new patientId. The patientId however is unique at the organization level. That is, no two patients across different facilities within the organization will have the same patientId.",
            "format": "int32",
            "type": "integer"
          },
          "vendorPatientId": {
            "description": "Vendor's unique identifier for the patient.",
            "maxLength": 75,
            "minLength": 0,
            "type": "string"
          }
        },
        "title": "RadiologyResultPatient",
        "type": "object",
        "required": [
          "patientId"
        ]
      },
      "RadiologyResultProvider": {
        "description": "Details on the practitioner that ordered the tests.",
        "example": {
          "firstName": "Randall",
          "lastName": "Bean",
          "npi": "1811996168 "
        },
        "properties": {
          "firstName": {
            "description": "The practitioner's first name.",
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "lastName": {
            "description": "The practitioner's last name.",
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "npi": {
            "description": "National Provider ID for the practitioner.",
            "type": "string"
          }
        },
        "title": "RadiologyResultProvider",
        "type": "object"
      },
      "RadiologyResultReport": {
        "description": "Radiology result report",
        "example": {
          "vendorReportId": "12345",
          "documentName": "attachment_123.pdf",
          "imageLinkUrl": "https://pointclickcare.com/wp-content/themes/PointClickCare-theme-1.0.0/assets/images/PointClickCareLogo.svg",
          "radInfo": {
            "radId": 4962,
            "radName": "Sample performing clinic",
            "radNPI": "1811996168",
            "radPhoneNumber": "(404) 999-1234"
          },
          "performingClinic": "Test Clinic",
          "radResults": [
            {
              "procedureCode": "71550",
              "interpretationNotes": "Notes for sample result",
              "resultStatus": "FINAL"
            }
          ],
          "notes": "Radiology result report note",
          "vendorOrderNumber": "243670",
          "patientInfo": {
            "firstName": "Kaylen",
            "lastName": "Clay",
            "patientId": 846287
          },
          "practitionerInfo": {
            "firstName": "Randall",
            "lastName": "Bean",
            "npi": "1811996168"
          },
          "examDate": "2023-01-10T13:56:16.120Z",
          "reportDate": "2023-01-10T14:01:33.216Z",
          "reportName": "Sample Radiograph (X-Ray)",
          "admittingProvider": "John Smith",
          "attendingProvider": "John Smith"
        },
        "properties": {
          "radInfo": {
            "$ref": "#/components/schemas/RadiologyLocation"
          },
          "performingClinic": {
            "description": "Name of the radiology clinic performing the test observation.",
            "maxLength": 200,
            "type": "string"
          },
          "radResults": {
            "description": "List of procedure result(s) reported.",
            "items": {
              "$ref": "#/components/schemas/RadiologyResult"
            },
            "type": "array"
          },
          "notes": {
            "description": "Notes/comments associated with the report. Line breaks are represented by \\n, carriage returns by \\r and and a combination of both is represented by \\r\\n. Backslashes in the text must be represented as \\\\\\\\.",
            "type": "string"
          },
          "orderId": {
            "description": "PointClickCare’s Unique Identifier for the Order. This is only applicable for bidirectional integrations where PointClickCare is sending Orders to Vendors and Vendor is returning results to PointClickCare. This field is only to be used for PointClickCare's Order ID. <b>Order ID is a mandatory field, if VendorOrderNumber is not provided. This field is only to be used for OrderID.</b>",
            "format": "int32",
            "type": "integer"
          },
          "vendorOrderNumber": {
            "description": "Vendor's unique identifier for the order. <b>VendorOrderNumber is a mandatory field, if orderID is not provided. This field is only to be used for VendorOrderNumber.</b>",
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "patientInfo": {
            "$ref": "#/components/schemas/RadiologyResultPatient"
          },
          "practitionerInfo": {
            "$ref": "#/components/schemas/RadiologyResultProvider"
          },
          "examDate": {
            "description": "Represents the date and time of the examination. The date and time are expressed in UTC in the following format YYYY-MM-DDTHH:MM:SS.sssZ",
            "format": "date-time",
            "type": "string"
          },
          "reportDate": {
            "description": "Represents the date and time when the report was issued. The reportDate must not be earlier than examDate. The date and time are expressed in UTC in the following format YYYY-MM-DDTHH:MM:SS.sssZ.",
            "format": "date-time",
            "type": "string"
          },
          "reportName": {
            "description": "Represents the name of the report.",
            "type": "string"
          },
          "vendorReportId": {
            "description": "Represents vendors unique identifier for the report.",
            "type": "string"
          },
          "documentName": {
            "description": "Represents the display name of the attached document.  File format should be included as an extension to the document name (example: Document1.pdf). Maximum file size 2MB.",
            "type": "string"
          },
          "imageLinkUrl": {
            "description": "Https link to third-party vendor approved website to view diagnostic imaging results for the resident. Please note: Link domain must be pre-approved by PointClickCare.",
            "type": "string"
          }
        },
        "required": [
          "radInfo",
          "reportDate",
          "patientInfo",
          "practitionerInfo",
          "reportName"
        ],
        "title": "RadiologyResultReport",
        "type": "object"
      },
      "LanguagePickListItem": {
        "description": "",
        "example": {
          "description": "English",
          "id": 1
        },
        "properties": {
          "description": {
            "description": "Description of the pick list value for language.",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the pick list value for language.",
            "format": "int32",
            "type": "integer"
          }
        },
        "title": "LanguagePickListItem",
        "type": "object"
      },
      "LoincCode": {
        "description": "applicable standard coding for patient's observation method",
        "example": {
          "code": "8453-3",
          "display": "Intravascular diastolic^sitting",
          "system": "http://loinc.org",
          "version": "2.68"
        },
        "properties": {
          "code": {
            "description": "Represents the observation method code.",
            "type": "string"
          },
          "display": {
            "description": "Represents the code display name as per coding system.",
            "type": "string"
          },
          "system": {
            "description": "Represents the coding system used to share observation method.",
            "type": "string"
          },
          "version": {
            "description": "Represents the version of coding system used to share observation method.",
            "type": "string"
          }
        },
        "title": "LoincCode",
        "type": "object"
      },
      "MaritalStatusPickListItem": {
        "description": "",
        "example": {
          "description": "Divorced",
          "id": 1
        },
        "properties": {
          "description": {
            "description": "Description of the pick list value for marital status.",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the pick list value for marital status.",
            "format": "int32",
            "type": "integer"
          }
        },
        "title": "MaritalStatusPickListItem",
        "type": "object"
      },
      "Medication": {
        "description": "Medications.",
        "example": {
          "administration": {
            "route": {
              "coding": [
                {
                  "code": "by_mouth",
                  "display": "by mouth",
                  "system": "https://pointclickcare.com/system/administration-route"
                }
              ]
            }
          },
          "clientId": 752418,
          "ddId": 24939,
          "description": "Aspirin Tablet 81 MG",
          "directions": "GIVE 1 TABLET BY MOUTH ONE TIME A DAY FOR SINGLE SCHEDULE FOR 30 DAYS",
          "endDate": "2016-04-17T04:00:00.000Z",
          "generic": "Aspirin",
          "orderId": 3447693,
          "pnId": 1426,
          "residentNumber": "04300427",
          "residentName": "Archer Kareem",
          "rxNormId": "243670",
          "schedules": [
            {
              "directions": "Give 80 mg by mouth one time a day for headache",
              "dose": "81",
              "doseUOM": "mg",
              "endDateTime": "2016-04-17T12:59:00.000Z",
              "frequency": "one time a day",
              "indicationsForUse": "headache",
              "lastAdministration": {
                "administeredAmount": "81mg",
                "administeredBy": "asmith",
                "administeredDateTime": "2020-11-30T19:06:18.875Z",
                "code": "16",
                "codeDescription": "Partial Administration",
                "unableToAdminister": false
              },
              "scheduleType": "Everyday",
              "startDateTime": "2016-03-18T13:00:00.000Z"
            },
            {
              "directions": "Give 80 mg by mouth as needed for headache",
              "dose": "81",
              "doseUOM": "mg",
              "frequency": "one time a day",
              "indicationsForUse": "headache",
              "lastAdministration": {
                "administeredAmount": "81mg",
                "administeredBy": "asmith",
                "administeredDateTime": "2020-11-30T19:06:18.875Z",
                "code": "16",
                "codeDescription": "Partial Administration",
                "unableToAdminister": false
              },
              "scheduleType": "PRN",
              "startDateTime": "2016-04-17T13:00:00.000Z"
            }
          ],
          "orderDate": "2016-03-17T13:00:00.000Z",
          "startDate": "2016-03-18T04:00:00.000Z",
          "status": "ACTIVE",
          "strength": "81",
          "strengthUOM": "MG"
        },
        "properties": {
          "administration": {
            "description": "Medication Administration.",
            "items": {
              "$ref": "#/components/schemas/MedicationAdministration"
            }
          },
          "clientId": {
            "description": "PointClickCare's unique identifier for a patient within the organization.",
            "format": "int32",
            "type": "integer"
          },
          "controlledSubstanceCode": {
            "description": "Value of the narcotic level for the medication.",
            "format": "int32",
            "type": "integer"
          },
          "createdBy": {
            "description": "The recorded client/user name who created the medication order.",
            "type": "string"
          },
          "createdDate": {
            "description": "The recorded date the medication order was created. The date and time are expressed in UTC in the following format YYYY-MM-DDTHH:MM:SS.sssZ.",
            "format": "date-time",
            "type": "string"
          },
          "ddId": {
            "description": "Dispensable Drug Id from Medispan drug database. May be blank if the medication is not from Medispan.",
            "format": "int32",
            "type": "integer"
          },
          "description": {
            "description": "Description of the medication, including form and strength, if applicable.",
            "type": "string"
          },
          "directions": {
            "description": "Administration directions, including schedule, indications for use and other related text.",
            "type": "string"
          },
          "discontinueDate": {
            "description": "The discontinue date and time of the medication. This field is only applicable when status='Discontinued' for the medication. Date and time are expressed in UTC (Coordinated Universal Time), with a special UTC designator (\"Z\").",
            "format": "date-time",
            "type": "string"
          },
          "endDate": {
            "description": "The last valid date and time of the medication. It may be empty if the medication has infinite duration. Date and time are expressed in UTC (Coordinated Universal Time), with a special UTC designator (\"Z\").",
            "format": "date-time",
            "type": "string"
          },
          "generic": {
            "description": "Generic drug name for this medication.",
            "type": "string"
          },
          "importedData": {
            "description": "It provides historical information about start date, end date, status and direction.",
            "type": "object",
            "properties": {
              "startDate": {
                "type": "string",
                "description": "The start data of the order when it was imported."
              },
              "endDate": {
                "type": "string",
                "description": "The end date of the order when it was imported."
              },
              "status": {
                "type": "string",
                "description": "The status of the order when it was imported."
              },
              "directions": {
                "type": "string",
                "description": "The directions provided for the order when it was imported."
              }
            }
          },
          "narcotic": {
            "description": "Indicates if is a narcotic.",
            "type": "boolean"
          },
          "orderDate": {
            "description": "Medication creation date",
            "format": "date-time",
            "type": "string"
          },
          "orderId": {
            "description": "PointClickCare's unique identifier for the medication order.",
            "format": "int32",
            "type": "integer"
          },
          "physicianDetail": {
            "description": "Provides details of the ordering physician including firstname, lastname, fax, npi, address, state license number etc.",
            "type": "object",
            "properties": {
              "address": {
                "type": "object",
                "description": "returns address information.",
                "properties": {
                  "addressLine1": {
                    "type": "string",
                    "description": "Address line 1."
                  },
                  "addressLine2": {
                    "type": "string",
                    "description": "Address line 2."
                  },
                  "addressLine3": {
                    "type": "string",
                    "description": "Address line 3."
                  },
                  "city": {
                    "type": "string",
                    "description": "City name."
                  },
                  "state": {
                    "type": "string",
                    "description": "State code."
                  },
                  "postalCode": {
                    "type": "string",
                    "description": "Postal/ZIP code."
                  },
                  "country": {
                    "type": "string",
                    "description": "Country code."
                  }
                }
              },
              "firstname": {
                "type": "string",
                "description": "First name of the physician."
              },
              "lastname": {
                "type": "string",
                "description": "Last name of the physician."
              },
              "phoneNumber": {
                "type": "string",
                "description": "Cell number of the physician."
              },
              "fax": {
                "type": "string",
                "description": "Fax of the physician."
              },
              "npi": {
                "type": "string",
                "description": "Npi of the physician."
              },
              "taxonomy": {
                "type": "string",
                "description": "Taxonomy Code for the medical professional."
              },
              "stateLicenseNumber": {
                "type": "string",
                "description": "State license number of the physician."
              }
            }
          },
          "pnId": {
            "description": "Product Name Id from Medispan drug database. May be blank if the medication is not from Medispan.",
            "format": "int32",
            "type": "integer"
          },
          "residentName": {
            "description": "Name of the resident to whom the order belongs.",
            "type": "string"
          },
          "residentNumber": {
            "description": "Another unique identifier for a resident that can be used if the internal clientId is not desired.",
            "type": "string"
          },
          "revisionBy": {
            "description": "Represents the user that last modified the medication order.",
            "type": "string"
          },
          "revDate": {
            "description": "Represents the date and time when the medication order was last modified. The date and time are expressed in UTC in the following format YYYY-MM-DDTHH:MM:SS.sssZ.",
            "format": "date-time",
            "type": "string"
          },
          "rxNormId": {
            "description": "RXNorm Id from Unified Medical Language SystemÂ® (UMLSÂ®), https://www.nlm.nih.gov/research/umls/rxnorm/\nMay be blank if the medication is not from Medispan.",
            "type": "string"
          },
          "schedules": {
            "description": "List of schedules for this medication.",
            "items": {
              "$ref": "#/components/schemas/Schedule"
            },
            "type": "array"
          },
          "startDate": {
            "description": "The earliest administration date and time scheduled for this medication. Date and time are expressed in UTC (Coordinated Universal Time), with a special UTC designator (\"Z\").",
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "description": "After the medication is created and has passed all reviews, it becomes \"ACTIVE\"\nIf the administration of the medication has been suspended, it becomes \"ONHOLD\"\nIf the administration of the medication has finished in its course, by schedule, it becomes \"COMPLETED\"\nIf the administration of the medication has finished by manual intervention, it becomes \"DISCONTINUED\"\nIf the newly created medication needs to be confirmed by a doctor, it becomes \"UNCONFIRMED\"\nIf the newly created medication needs to be reviewed by a doctor, it becomes \"PENDING_REVIEW\"\nCertain classes of newly created medications (e.g. narcotics) may require doctor signature before becoming active. Until then, they stay as \"PENDING_SIGNATURE\"\nCertain classes of newly created medications (e.g. narcotics) may require a two-step process to get doctor's signature before becoming active. Before the first phase is complete, they stay as \"PENDING_MARK_TO_SIGN\".",
            "enum": [
              "INITIAL",
              "ACTIVE",
              "DISCONTINUED",
              "COMPLETED",
              "STRUCKOUT",
              "ONHOLD",
              "DRAFT",
              "UNVERIFIED",
              "UNCONFIRMED",
              "PENDING_REVIEW",
              "PENDING_MARK_TO_SIGN",
              "PENDING_SIGNATURE",
              "HISTORICAL"
            ],
            "type": "string"
          },
          "strength": {
            "description": "Strength amount.",
            "type": "string"
          },
          "strengthUOM": {
            "description": "Strength unit of measure.",
            "type": "string"
          }
        },
        "title": "Medication",
        "type": "object"
      },
      "MedicationAdministration": {
        "description": "Medication Administration.",
        "example": {
          "route": {
            "coding": [
              {
                "code": "by_mouth",
                "display": "by mouth",
                "system": "https://pointclickcare.com/system/administration-route"
              }
            ]
          }
        },
        "properties": {
          "route": {
            "description": "Route of administration of medication. Information includes coding system, specific route code and text description of route of administration.",
            "items": {
              "$ref": "#/components/schemas/MedicationDiagnosisPostCodeableConceptExtend",
              "type": "object"
            }
          }
        },
        "title": "MedicationAdministration",
        "type": "object"
      },
      "MedicationAdministrationRoutePostCodeableConceptExtend": {
        "description": "Route of administration of medication. Information includes coding system, specific route code and text description of route of administration.",
        "example": {
          "coding": [
            {
              "code": "by_mouth",
              "display": "by mouth",
              "system": "https://pointclickcare.com/system/administration-route"
            }
          ]
        },
        "properties": {
          "coding": {
            "description": "List of administration routes, can accept up to 3 entries.",
            "items": {
              "$ref": "#/components/schemas/AdministrationRoutePostCoding"
            },
            "type": "array"
          }
        },
        "title": "MedicationAdministrationRoutePostCodeableConceptExtend",
        "type": "object"
      },
      "MedicationDiagnosisExtend": {
        "description": "Diagnosis associated with medication.",
        "example": {
          "identifier": {
            "coding": [
              {
                "code": "S06.0x1A",
                "display": "Concussion with loss of consciousness of 30 minutes or less, initial encounter",
                "system": "https://www.cms.gov/Medicare/Coding/ICD10/2018-ICD-10-CM-and-GEMs.html"
              }
            ]
          }
        },
        "properties": {
          "identifier": {
            "$ref": "#/components/schemas/MedicationDiagnosisPostCodeableConceptExtend"
          }
        },
        "title": "MedicationDiagnosisExtend",
        "type": "object"
      },
      "MedicationDiagnosisPostCodeableConceptExtend": {
        "description": "Identifier of the diagnosis.",
        "example": {
          "coding": [
            {
              "code": "S06.0x1A",
              "display": "Concussion with loss of consciousness of 30 minutes or less, initial encounter",
              "system": "https://www.cms.gov/Medicare/Coding/ICD10/2018-ICD-10-CM-and-GEMs.html"
            }
          ]
        },
        "properties": {
          "coding": {
            "description": "List of medication Diagnosis, can accept up to 3 entries.",
            "items": {
              "$ref": "#/components/schemas/AdministrationRoutePostCoding"
            },
            "type": "array"
          }
        },
        "title": "MedicationDiagnosisPostCodeableConceptExtend",
        "type": "object"
      },
      "MedicationDiagnosisPostCoding": {
        "description": "Medication Diagnosis, can accept up to 3 entries.",
        "example": {
          "code": "S06.0x1A",
          "display": "Concussion with loss of consciousness of 30 minutes or less, initial encounter",
          "system": "https://www.cms.gov/Medicare/Coding/ICD10/2018-ICD-10-CM-and-GEMs.html"
        },
        "properties": {
          "code": {
            "description": "Specific code for the diagnosis.",
            "type": "string"
          },
          "display": {
            "description": "Text description of the diagnosis.",
            "type": "string"
          },
          "system": {
            "description": "Type of coding system being used e.g. ICD-10. Can be a URL. Supported systems are: <ul><li>ICD-10: \"https://www.cms.gov/Medicare/Coding/ICD10/2018-ICD-10-CM-and-GEMs.html\"</li></ul>",
            "type": "string"
          }
        },
        "title": "MedicationDiagnosisPostCoding",
        "type": "object"
      },
      "MedicationList": {
        "description": "List of medications.",
        "example": {
          "data": [
            {
              "administration": {
                "route": {
                  "coding": [
                    {
                      "code": "by_mouth",
                      "display": "by mouth",
                      "system": "https://pointclickcare.com/system/administration-route"
                    },
                    {
                      "code": "C38288",
                      "display": "Oral",
                      "system": "https://ncit.nci.nih.gov"
                    }
                  ]
                }
              },
              "clientId": 752418,
              "createdBy": "lcalrissian",
              "createdDate": "2016-03-17T04:00:00.000Z",
              "ddId": 24939,
              "description": "Aspirin Tablet 81 MG",
              "directions": "GIVE 1 TABLET BY MOUTH ONE TIME A DAY FOR SINGLE SCHEDULE FOR 30 DAYS",
              "endDate": "2016-04-17T04:00:00.000Z",
              "generic": "Aspirin",
              "importedData": {
                "endDate": "2023-09-25T18:21:12.298+00:00",
                "startDate": "2023-09-25T18:21:12.298+00:00",
                "status": "ACTIVE",
                "directions": "This is demo direction"
              },
              "orderDate": "2016-03-17T04:00:00.000Z",
              "orderId": 3447693,
              "physicianDetail": {
                "firstName": "John",
                "lastName": "Smith",
                "address": {
                  "addressLine1": "180 Lime Street",
                  "city": "Toronto",
                  "state": "Ontario",
                  "postalCode": "M2N33Z",
                  "country": "Canada"
                },
                "phoneNumber": 1234567890,
                "fax": 123456789,
                "npi": 1234567890,
                "stateLicenseNumber": "123456"
              },
              "pnId": 1426,
              "residentNumber": "04300427",
              "residentName": "Archer Kareem",
              "revisionBy": "lcalrissian",
              "revisionDate": "2016-03-17T04:00:00.000Z",
              "rxNormId": "243670",
              "schedules": [
                {
                  "directions": "Give 80 mg by mouth one time a day for headache",
                  "dose": "81",
                  "doseUOM": "mg",
                  "codeableDoseUOM": {
                    "coding": [
                      {
                        "code": "mg",
                        "display": "mg",
                        "system": "https://pointclickcare.com/system/unit-of-measure"
                      },
                      {
                        "code": "C28253",
                        "display": "Milligram",
                        "system": "https://ncit.nci.nih.gov"
                      },
                      {
                        "code": "mg",
                        "display": "milligram",
                        "system": "https://ucum.org/ucum"
                      }
                    ]
                  },
                  "endDateTime": "2016-04-17T12:59:00.000Z",
                  "frequency": "one time a day",
                  "indicationsForUse": "headache",
                  "lastAdministration": {
                    "administeredAmount": "81mg",
                    "administeredBy": "asmith",
                    "administeredDateTime": "2020-11-30T19:06:19.207Z",
                    "code": "16",
                    "codeDescription": "Partial Administration",
                    "unableToAdminister": false
                  },
                  "orderScheduleId": 465486,
                  "scheduleType": "Everyday",
                  "startDateTime": "2016-03-18T13:00:00.000Z"
                },
                {
                  "directions": "Give 80 mg by mouth as needed for headache",
                  "dose": "81",
                  "doseUOM": "mg",
                  "frequency": "one time a day",
                  "indicationsForUse": "headache",
                  "lastAdministration": {
                    "administeredAmount": "81mg",
                    "administeredBy": "asmith",
                    "administeredDateTime": "2020-11-30T19:06:19.207Z",
                    "code": "16",
                    "codeDescription": "Partial Administration",
                    "unableToAdminister": false
                  },
                  "orderScheduleId": 465487,
                  "scheduleType": "PRN",
                  "startDateTime": "2016-04-17T13:00:00.000Z"
                }
              ],
              "startDate": "2016-03-18T04:00:00.000Z",
              "status": "ACTIVE",
              "strength": "81",
              "strengthUOM": "MG"
            },
            {
              "administration": {
                "route": {
                  "coding": [
                    {
                      "code": "by_mouth",
                      "display": "by mouth",
                      "system": "https://pointclickcare.com/system/administration-route"
                    },
                    {
                      "code": "C38288",
                      "display": "Oral",
                      "system": "https://ncit.nci.nih.gov"
                    }
                  ]
                }
              },
              "clientId": 752418,
              "createdBy": "lcalrissian",
              "createdDate": "2016-03-17T04:00:00.000Z",
              "ddId": 24939,
              "description": "Kaletra",
              "directions": "200-50 MG Tablet Oral HUMAN IMMUNODEFICIENCY VIRUS [HIV] (042) ***GIVE TWO TABS***",
              "discontinueDate": "2016-03-18T04:00:00.000Z",
              "endDate": "2016-04-17T04:00:00.000Z",
              "generic": "Lopinavir-Ritonavir",
              "orderDate": "2016-03-17T04:00:00.000Z",
              "orderId": 1386267,
              "pnId": 21987,
              "residentNumber": "04300427",
              "residentName": "Archer Kareem",
              "revisionBy": "lcalrissian",
              "revisionDate": "2016-03-17T04:00:00.000Z",
              "rxNormId": "243670",
              "schedules": [
                {
                  "directions": "Give 80 mg by mouth one time a day for headache",
                  "dose": "81",
                  "doseUOM": "mg",
                  "codeableDoseUOM": {
                    "coding": [
                      {
                        "code": "mg",
                        "display": "mg",
                        "system": "https://pointclickcare.com/system/unit-of-measure"
                      },
                      {
                        "code": "C28253",
                        "display": "Milligram",
                        "system": "https://ncit.nci.nih.gov"
                      },
                      {
                        "code": "mg",
                        "display": "milligram",
                        "system": "https://ucum.org/ucum"
                      }
                    ]
                  },
                  "endDateTime": "2016-04-17T12:59:00.000Z",
                  "frequency": "one time a day",
                  "indicationsForUse": "headache",
                  "lastAdministration": {
                    "administeredAmount": "81mg",
                    "administeredBy": "asmith",
                    "administeredDateTime": "2020-11-30T19:06:19.207Z",
                    "code": "16",
                    "codeDescription": "Partial Administration",
                    "unableToAdminister": false
                  },
                  "orderScheduleId": 465489,
                  "scheduleType": "Everyday",
                  "startDateTime": "2016-03-18T13:00:00.000Z"
                },
                {
                  "directions": "Give 80 mg by mouth as needed for headache",
                  "dose": "81",
                  "doseUOM": "mg",
                  "frequency": "one time a day",
                  "indicationsForUse": "headache",
                  "lastAdministration": {
                    "administeredAmount": "81mg",
                    "administeredBy": "asmith",
                    "administeredDateTime": "2020-11-30T19:06:19.207Z",
                    "code": "16",
                    "codeDescription": "Partial Administration",
                    "unableToAdminister": false
                  },
                  "orderScheduleId": 465490,
                  "scheduleType": "PRN",
                  "startDateTime": "2016-04-17T13:00:00.000Z"
                }
              ],
              "startDate": "2016-03-18T04:00:00.000Z",
              "status": "DISCONTINUED",
              "strength": "200-50",
              "strengthUOM": "MG"
            }
          ],
          "paging": {
            "hasMore": false,
            "page": 1,
            "pageSize": 50
          }
        },
        "properties": {
          "data": {
            "description": "List of medications.",
            "items": {
              "$ref": "#/components/schemas/Medication"
            },
            "type": "array"
          },
          "paging": {
            "$ref": "#/components/schemas/PagingResponseByPage"
          }
        },
        "title": "MedicationList",
        "type": "object"
      },
      "MedicationScheduleExtend": {
        "description": "Schedules for this medication. Up to 15 schedules accepted.",
        "example": {
          "additionalDirections": "No directions specified for order.",
          "dose": "1.0",
          "doseUOM": "gram",
          "endDateTime": "2020-11-30T19:06:19.097Z",
          "frequency": "every 5 hours",
          "lastAdministration": {
            "administeredDateTime": "2020-11-30T19:06:19.097Z"
          },
          "medicationRelatedDiagnoses": [
            {
              "identifier": {
                "coding": [
                  {
                    "code": "S06.0x1A",
                    "display": "Concussion with loss of consciousness of 30 minutes or less, initial encounter",
                    "system": "https://www.cms.gov/Medicare/Coding/ICD10/2018-ICD-10-CM-and-GEMs.html"
                  }
                ]
              }
            }
          ],
          "schedule": "Routine",
          "scheduleType": "EveryDay",
          "startDateTime": "2020-11-30T19:06:19.097Z"
        },
        "properties": {
          "additionalDirections": {
            "description": "Free text field to capture any additional directions associated with the schedule description.<br/>Note: Limit of 200 characters.",
            "type": "string"
          },
          "alternateFrequency": {
            "description": "Frequencies not included in the PointClickCare list. Only used if 'Other' is passed as the frequency.",
            "type": "string"
          },
          "alternateScheduleType": {
            "description": "Medication administration schedule types not included in the PointClickCare list. Only used if 'Other' is passed as the schedule type.",
            "type": "string"
          },
          "applyTo": {
            "description": "Indicates location of topical application. Limit of 25 characters.<br/>Note: If the administration route is set to 'topically' this field is required.",
            "type": "string"
          },
          "dose": {
            "description": "The quantity of the medication.<br/>Note: This should be a numeric value. Limit of 6 characters, including the decimal point (if value is a decimal).<br/>Note: If the administration.route is set to 'topically', this field should not be used.<br />Note: Dose is only accepted, if the request does not include a dose min and max.",
            "type": "string"
          },
          "doseMax": {
            "description": "The maximum acceptable value for the prescribed medication dose range. This should be a numerical value. Limit of 6 characters, including the decimal point (if value is a decimal).<br />Note: If a dose maximum is supplied, a dose minimum is required.",
            "type": "string"
          },
          "doseMin": {
            "description": "The minimum acceptable value for the prescribed medication dose range. This should be a numerical value. Limit of 6 characters, including the decimal point (if value is a decimal).<br />Note: There is a minimum value of 0.<br />Note: If a dose minimum is supplied, a dose maximum is required.",
            "type": "string"
          },
          "doseUOM": {
            "description": "Unit of measure for medication quantity. Can be in metric units, imperial units or 'each' e.g. 'Capsule'.<br/>PointClickCare supported Units of measure are listed below:<ul><li>application</li><li>applicator</li><li>applicatorful</li><li>bar</li><li>blister</li><li>buccal system</li><li>can</li><li>caplet</li><li>capsule</li><li>cc</li><li>centimeter</li><li>device</li><li>dose</li><li>drop</li><li>each</li><li>gram</li><li>film</li><li>gum</li><li>implant</li><li>inch</li><li>inhalation</li><li>insert</li><li>IU</li><li>IUD</li><li>kilogram</li><li>kit</li><li>lancet</li><li>liter</li><li>lozenge</li><li>mcg</li><li>mcg/hr</li><li>mcg/min</li><li>mCi</li><li>mEq</li><li>mg</li><li>mg/ml</li><li>ml/hr</li><li>mMol</li><li>million units</li><li>ml</li><li>milligram</li><li>milliliter</li><li>milliunit</li><li>oral strips</li><li>other</li><li>ounce</li><li>packet</li><li>pad</li><li>patch</li><li>PE units</li><li>pen needle</li><li>piece</li><li>puff</li><li>pump</li><li>ribbon</li><li>ring</li><li>sachet</li><li>scoop</li><li>sponge</li><li>spray</li><li>stick</li><li>strip</li><li>suppository</li><li>swab</li><li>syringe</li><li>tablet</li><li>tampon</li><li>tbsp</li><li>troche</li><li>tsp</li><li>unit</li><li>unspecified</li><li>vial</li><li>wafer</li></ul>Note: If dose details are being sent, this field is required.<br/>Note: If the administration.route is set to 'topically', this field should not be used.<br/>Note: If the desired UOM is not available, 'other' can be selected.",
            "type": "string"
          },
          "doseUOMOther": {
            "description": "Unit of Measure types not included in the PointClickCare list. Only used if 'Other' is passed as the doseUOM type.<br /><br />Maximum 20 characters.",
            "type": "string"
          },
          "endDateTime": {
            "description": "Date & time when administration of the medication ended/should end. If this is blank, it will be assumed the medication has to continue indefinitely.<br/>Note: If the schedule is 'Titration', this field is required.",
            "format": "date-time",
            "type": "string"
          },
          "frequency": {
            "description": "Predefined list of possible medication administration frequencies from PointClickCare. If sent Frequency does not match a value in the list, value should be sent as 'Other'.<br/>PointClickCare supported Units of measure are listed below:<ul><li>one time a day</li><li>in the morning</li><li>in the afternoon</li><li>in the evening</li><li>at bedtime</li><li>two times a day</li><li>three times a day</li><li>before meals</li><li>after meals</li><li>with meals</li><li>four times a day</li><li>before meals and at bedtime</li><li>five times a day</li><li>every hour</li><li>after meals and at bedtime</li><li>every morning and at bedtime</li><li>every shift</li><li>every day shift</li><li>every evening shift</li><li>every night shift</li><li>every day and night shift</li><li>every day and evening shift</li><li>every evening and night shift</li><li>every 2 hours</li><li>every 3 hours</li><li>every 4 hours</li><li>every 5 hours</li><li>every 6 hours</li><li>every 8 hours</li><li>every 10 hours</li><li>every 12 hours</li><li>every 16 hours</li><li>every 18 hours</li><li>every 24 hours</li><li>every 30 hours</li><li>every 36 hours</li><li>every 48 hours</li><li>every 60 hours</li><li>every 72 hours</li><li>every 96 hours</li><li>Other</li></ul>",
            "type": "string"
          },
          "lastAdministration": {
            "$ref": "#/components/schemas/Administration"
          },
          "indicationsForUse": {
            "description": "Indications for which medication was administered. Limit of 60 characters.",
            "type": "string"
          },
          "isPrnWithDirections": {
            "description": "Supported values are True/False.<br/>Note: If the Schedule is 'PRN', this field is required. Either a True/False value must always be passed. If the value is set to 'False', the prnTimingValue and prnTiming fields must be used.<br/>Note: If this field is set to 'True', additionalDirections must be used to send details of Frequency of Administration.",
            "type": "boolean"
          },
          "medicationRelatedDiagnoses": {
            "description": "List of diagnosis associated with medication.",
            "items": {
              "$ref": "#/components/schemas/MedicationDiagnosisExtend"
            },
            "type": "array"
          },
          "prnTiming": {
            "description": "Supported values are 'Hours' or 'Minutes'.<br/>Note: If the Schedule is 'PRN', this field is applicable.<br/>Note: With a PRN schedule, if isPrnWithDirections is not used, prnTiming must be used.",
            "type": "string"
          },
          "prnTimingValue": {
            "description": "If prnTiming is 'Hours', allowed values are 1 to 168 (equates to 7 days).<br />If prnTiming is ‘Minutes’, allowed values are 1 to 10080 (equates to 7 days).<br />Note: If the schedule is 'PRN', this field is applicable.<br />Note: With a PRN schedule, if isPrnWithDirections is not used, prnTimingValue must be used.",
            "format": "int32",
            "type": "integer"
          },
          "schedule": {
            "description": "Type of schedule to be followed for the medication. Supported schedules are:<br/><ul><li>Routine - A recurring schedule of administration of the medication.</li><li>PRN - Pro Re Nata - Medication to be administered as needed.</li><li>One Time Only - A one time administration of the medication.</li><li>Titration - A schedule with varying dosages. There must be more than one and they must be passed in order from the first to last Titration schedule. The limit is 15 Titration schedules.</li><li>STAT - Post incident record of the administration of a medication.</li></ul>Note: If Schedule details are being sent, this field is required.",
            "type": "string"
          },
          "scheduleType": {
            "description": "Predefined list of possible medication administration schedule types from PointClickCare.<br/>PointClickCare supported schedule types are listed below:<ul><li>Everyday</li><li>Odd Days</li><li>Even Days</li><li>Every Other Day</li><li>Other</li></ul><br/>Note: If the schedule is 'Routine' or 'Titration', this field is required.",
            "type": "string"
          },
          "sequenceNumber": {
            "description": "Unique Titration identifier. Required if Titration schedule is being sent.",
            "format": "int32",
            "type": "integer"
          },
          "startDateTime": {
            "description": "Date & time when administration of the medication commenced.<br/>Note: If the Schedule is 'Titration', this field has to be later than the endDateTime of the prior Titration Schedule.",
            "format": "date-time",
            "type": "string"
          }
        },
        "title": "MedicationScheduleExtend",
        "type": "object"
      },
      "MethodCode": {
        "description": "Represents the applicable standard code of a patient's observation.",
        "example": {
          "codings": [
            {
              "code": "9279-1",
              "display": "Breaths",
              "system": "http://loinc.org",
              "version": "2.68"
            }
          ]
        },
        "properties": {
          "codings": {
            "description": "List of applicable standard coding for patient's observation method",
            "items": {
              "$ref": "#/components/schemas/LoincCode"
            },
            "type": "array"
          }
        },
        "title": "MethodCode",
        "type": "object"
      },
      "MiscDocument": {
        "description": "Metadata that will be associated with the document.",
        "example": {
          "documentCategory": 1,
          "documentName": "report5",
          "effectiveDate": "2018-05-15T06:13:41.451Z"
        },
        "properties": {
          "documentName": {
            "description": "Name of the document.",
            "type": "string"
          },
          "documentCategory": {
            "description": "PointClickCare Facility or System defined category under which a document can be classified.",
            "type": "integer"
          },
          "effectiveDate": {
            "description": "Date as of which the document is in effect.",
            "type": "string"
          }
        },
        "title": "MiscDocument",
        "type": "object",
        "required": [
          "documentName",
          "documentCategory",
          "effectiveDate"
        ]
      },
      "MiscDocumentResponse": {
        "description": "PointClickCare's unique identifier for a document.",
        "example": {
          "documentId": 1
        },
        "properties": {
          "documentId": {
            "description": "PointClickCare's unique identifier for a document.",
            "format": "int32",
            "type": "integer"
          }
        },
        "title": "MiscDocumentResponse",
        "type": "object"
      },
      "NutritionOrder": {
        "description": "all active and on hold nutrition orders for a patient.",
        "example": {
          "nutritionOrderId": 123,
          "oralDiet": {
            "additionalDirections": "4 OZ of Prune Juice with breakfast",
            "endDateTime": "2020-11-30T19:06:18.892Z",
            "fluidConsistencyType": "Pudding consistency",
            "startDateTime": "2021-01-30T19:06:18.892Z",
            "texture": {
              "modifier": "Pureed texture"
            },
            "type": "Regular Diet"
          },
          "orderDateTime": "2020-11-30T19:06:18.892Z",
          "orderedBy": "Peterman, Herminia",
          "orderedById": 567,
          "patientId": 12345,
          "status": "active"
        },
        "properties": {
          "nutritionOrderId": {
            "description": "PointClickCare's unique identifier for a Nutrition Order.",
            "format": "int32",
            "type": "integer"
          },
          "oralDiet": {
            "$ref": "#/components/schemas/OralDiet"
          },
          "orderDateTime": {
            "description": "Represents the date/time when the nutrition order was ordered. The date and time should be expressed in UTC in the following format: YYYY-MM-DDTHH:MM:SS.sssZ.",
            "format": "date-time",
            "type": "string"
          },
          "orderedBy": {
            "description": "Represents the PointClickCare user who ordered the nutrition order. This is typically the practitioner or medical professional assigned to the patient.",
            "type": "string"
          },
          "orderedById": {
            "description": "Unique identifier for the practitioner or medical professional that ordered the nutrition order.",
            "format": "int32",
            "type": "integer"
          },
          "patientId": {
            "description": "PointClickCare's unique identifier for a patient within the organization.<br/><br/>When a patient is admitted to a facility within an organization, they are assigned a patientId which is unique to their stay within that facility. If the same patient were to get admitted to another facility within the same organization in the future, they would be assigned a new patientId. The patientId however is unique at the organization level. That is, no two patients across different facilities within the organization will have the same patientId.",
            "format": "int32",
            "type": "integer"
          },
          "status": {
            "description": "Represents the status of the Nutrition order for the patient. Possible values are \"active\", \"pending confirmation\", and \"on hold\".",
            "type": "string"
          }
        },
        "title": "NutritionOrder",
        "type": "object"
      },
      "NutritionOrderList": {
        "description": "NutritionOrder List",
        "example": {
          "data": [
            {
              "nutritionOrderId": 123,
              "oralDiet": {
                "additionalDirections": "4 OZ of Prune Juice with breakfast",
                "fluidConsistencyType": "Pudding consistency",
                "startDateTime": "2021-01-30T19:06:19.088Z",
                "texture": {
                  "modifier": "Pureed texture"
                },
                "type": "Regular Diet"
              },
              "orderDateTime": "2020-11-30T19:06:19.088Z",
              "orderedBy": "Peterman, Herminia",
              "orderedById": 567,
              "patientId": 12345,
              "status": "active"
            },
            {
              "nutritionOrderId": 124,
              "oralDiet": {
                "additionalDirections": "small portions",
                "endDateTime": "2020-11-30T19:06:19.088Z",
                "fluidConsistencyType": "NPO consistency",
                "startDateTime": "2020-08-30T18:06:19.088Z",
                "texture": {
                  "modifier": "NPO texture"
                },
                "type": "NPO diet"
              },
              "orderDateTime": "2020-08-30T18:06:19.088Z",
              "orderedBy": "Kimmel, Rachel",
              "orderedById": 678,
              "patientId": 12346,
              "status": "on hold"
            }
          ]
        },
        "properties": {
          "data": {
            "description": "List of all active and on hold nutrition orders for a patient.",
            "items": {
              "$ref": "#/components/schemas/NutritionOrder"
            },
            "type": "array"
          }
        },
        "title": "NutritionOrderList",
        "type": "object"
      },
      "ObservationBaselinesList": {
        "description": "List of observation baselines.",
        "example": {
          "data": [
            {
              "diastolicValue": 80,
              "method": "Sitting l/arm",
              "patientId": 5916583,
              "revisionDate": "2016-09-30T08:11:00.000Z",
              "systolicValue": 120,
              "type": "bloodPressure",
              "unit": "mmHg"
            },
            {
              "patientId": 5916583,
              "revisionDate": "2016-09-30T08:11:00.000Z",
              "thresholdHigh": 100,
              "thresholdLow": 80,
              "type": "bloodSugar",
              "unit": "mg/dl",
              "value": 140
            },
            {
              "method": "irregular - new onset",
              "patientId": 5916583,
              "revisionDate": "2016-09-30T08:11:00.000Z",
              "type": "heartrate",
              "unit": "bpm",
              "value": 72
            },
            {
              "method": "Standing",
              "patientId": 5916583,
              "revisionDate": "2016-09-30T08:11:00.000Z",
              "type": "height",
              "unit": "cm",
              "value": 180
            },
            {
              "method": "Oxygen via mask",
              "patientId": 5916583,
              "revisionDate": "2016-09-30T08:11:00.000Z",
              "thresholdHigh": 5,
              "thresholdLow": 4,
              "type": "oxygenSaturation",
              "unit": "%",
              "value": 92.3
            },
            {
              "method": "Numerical",
              "patientId": 5916583,
              "revisionDate": "2016-09-30T08:11:00.000Z",
              "thresholdHigh": 6,
              "type": "painLevel",
              "value": 4
            },
            {
              "patientId": 5916583,
              "revisionDate": "2016-09-30T08:11:00.000Z",
              "type": "respirations",
              "unit": "Breaths/min",
              "value": 19
            },
            {
              "method": "Oral",
              "patientId": 5916583,
              "revisionDate": "2016-09-30T08:11:00.000Z",
              "type": "temperature",
              "unit": "Â°C",
              "value": 37.5
            },
            {
              "goalHigh": 180,
              "goalLow": 150,
              "method": "Standing",
              "patientId": 5916583,
              "revisionDate": "2016-09-30T08:11:00.000Z",
              "type": "weight",
              "unit": "lbs",
              "value": 111
            }
          ]
        },
        "properties": {
          "data": {
            "description": "List of observation Baselines.",
            "items": {
              "$ref": "#/components/schemas/ObservationBaselinesResponse"
            },
            "type": "array"
          }
        },
        "title": "ObservationBaselinesList",
        "type": "object"
      },
      "ObservationBaselinesResponse": {
        "description": "Observation Baselines.",
        "example": {
          "goalHigh": 180,
          "goalLow": 150,
          "method": "Standing",
          "patientId": 5916583,
          "revisionDate": "2016-09-30T08:11:00.000Z",
          "type": "weight",
          "unit": "lbs",
          "value": 111
        },
        "properties": {
          "diastolicValue": {
            "description": "The recorded baseline diastolic Blood Pressure for the given patient.",
            "format": "int32",
            "type": "integer"
          },
          "goalHigh": {
            "description": "Represents the goals high value. Only applies to the Weight observation.",
            "format": "double",
            "type": "number"
          },
          "goalLow": {
            "description": "Represents the goals low value. Only applies to the Weight observation.",
            "format": "double",
            "type": "number"
          },
          "method": {
            "description": "Represents the method used to record the observation. This field is applicable for Heart Rate, Blood Pressure, Weight, Height, Oxygen Saturation and Pain Level. </br></br>For Heart Rate, values are:<ul><li>regular</li><li>irregular - new onset</li><li>irregular - chronic</li><li>irregular - UTD onset</li><li>UTD - unable to determine</li><li>Not applicable</li></ul>For Blood Pressure, values are:<ul><li>Standing l/arm</li><li>Standing r/arm</li><li>Sitting l/arm</li><li>Sitting r/arm</li><li>Lying l/arm</li><li>Lying r/arm</li><li>Other</li></ul>For Height, values are:<ul><li>Standing</li><li>Lying down</li><li>Wing span</li><li>Knee height</li><li>Ulnar segment</li></ul>For Oxygen Saturation, values are:</br><ul><li>Room Air</li><li>Oxygen via Mask</li><li>Oxygen via Nasal Cannula</li><li>Trach</li><li>CPAP</li><li>BiPAP</li><li>High Flow Oxygen</li><li>Vent</li></ul>For Weight, possible values are below, call the GET Facility API to determine the weight scale types used by the facility <ul><li>Standing</li><li>Wing span</li><li>Knee Height</li><li>Ulnar segment</li></ul>For Temperature, values are:<ul><li>Oral</li><li>Rectal</li><li>Tympanic</li><li>Axilla</li><li>Temporal Artery</li><li>Forehead (non-contact)</li></ul>For Pain Level, values are:<ul><li>Numerical</li><li>PAINAD</li></ul>",
            "type": "string"
          },
          "patientId": {
            "description": "PointClickCare's unique identifier for a patient within the organization.</br></br>When a patient is admitted to a facility within an organization, they are assigned a patientId which is unique to their stay within that facility. If the same patient were to get admitted to another facility within the same organization in the future, they would be assigned a new patientId. The patientId however is unique at the organization level. That is, no two patients across different facilities within the organization will have the same patientId.",
            "format": "int32",
            "type": "integer"
          },
          "revisionDate": {
            "description": "Recorded date for the baseline observation.",
            "format": "date-time",
            "type": "string"
          },
          "systolicValue": {
            "description": "The recorded baseline systolic Blood Pressure for the given patient.",
            "format": "int32",
            "type": "integer"
          },
          "thresholdHigh": {
            "description": "Represents the thresholds high value. Applies to Blood Sugar, Oxygen Saturation and Pain Level.",
            "format": "double",
            "type": "number"
          },
          "thresholdLow": {
            "description": "Represents the thresholds low value. Applies to Blood Sugar and Oxygen Saturation.",
            "format": "double",
            "type": "number"
          },
          "type": {
            "description": "Represents the type of observation. Expected values are heartrate, bloodPressure, bloodSugar, oxygenSaturation, weight, height, painLevel, temperature, respirations.",
            "enum": [
              "weight",
              "respirations",
              "bloodPressure",
              "temperature",
              "heartrate",
              "bloodSugar",
              "height",
              "oxygenSaturation",
              "painLevel"
            ],
            "type": "string"
          },
          "unit": {
            "description": "Represents the unit of measure for the baseline observation. Possible values are: <br>For blood pressure: mmHg<br>For blood sugar: mg/dL or mmol/l<br>For heart rate: bpm<br>For height: cm or inches<br>For oxygen saturation: %<br>For respiration: Breaths/min<br>For temperature: °C or °F<br>For weight : Kg or Lbs",
            "type": "string"
          },
          "value": {
            "description": "Recorded baseline reading for the observation.",
            "format": "double",
            "type": "number"
          }
        },
        "title": "ObservationBaselinesResponse",
        "type": "object"
      },
      "ObservationBloodPressure": {
        "description": "Observation",
        "example": {
          "deviceId": "device01",
          "deviceName": "Device Name",
          "diastolicValue": 80,
          "method": "Sitting l/arm",
          "patientId": 1901810,
          "recordedDate": "2016-09-30T08:11:00.000Z",
          "systolicValue": 120,
          "type": "bloodPressure",
          "unit": "mmHg"
        },
        "properties": {
          "type": {
            "description": "Represents the type of observation. For pushing a Blood Pressure observation, the acceptable value for this field is 'bloodPressure'.",
            "type": "string"
          },
          "deviceId": {
            "description": "A unique identifier for the hardware device used to record the observation. The device ID gets displayed in the PointClickCare application next to the recorded observation. Maximum 20 characters.",
            "type": "string"
          },
          "deviceName": {
            "description": "Display name for the device used to record the observation. The device name gets displayed in the PointClickCare application next to the recorded observation. Maximum 20 characters.",
            "type": "string"
          },
          "diastolicValue": {
            "description": "The recorded diastolic Blood Pressure for the given patient. This field can accept integer values only. Maximum acceptable value is 999.",
            "type": "number"
          },
          "method": {
            "description": "Represents the method used to record the Blood Pressure observation. Possible values for this field are:<br><ul><li>Standing l/arm</li><li>Standing r/arm</li><li>Sitting l/arm</li><li>Sitting r/arm</li><li>Lying l/arm</li><li>Lying r/arm</li><li>Other</li></ul>This field is optional for Blood Pressure observations.",
            "type": "string"
          },
          "patientId": {
            "description": "PointClickCare's unique identifier for a patient within the organization.</br></br>When a patient is admitted to a facility within an organization, they are assigned a patientId which is unique to their stay within that facility. If the same patient were to get admitted to another facility within the same organization in the future, they would be assigned a new patientId. The patientId however is unique at the organization level. That is, no two patients across different facilities within the organization will have the same patientId.",
            "format": "int32",
            "minimum": 0,
            "type": "integer"
          },
          "recordedDate": {
            "description": "Date and time when the observation was recorded. The Date and Time should be expressed in UTC in the following format YYYY-MM-DDTHH:MM:SS.sssZ.<br/>Note: Lenient dates are not allowed and will result in an error message. Example of a lenient date is 2016-13-33T12:67:77.000Z.",
            "format": "date-time",
            "type": "string"
          },
          "systolicValue": {
            "description": "The recorded systolic Blood Pressure for the given patient. This field can accept integer values only. Maximum acceptable value is 999.",
            "type": "number"
          },
          "unit": {
            "description": "Represents the unit of measure for the Blood Pressure observation. Expected value is 'mmHg'.",
            "type": "string"
          }
        },
        "required": [
          "patientId",
          "deviceId",
          "deviceName",
          "recordedDate",
          "type",
          "diastolicValue",
          "systolicValue",
          "unit"
        ],
        "title": "ObservationBloodPressure",
        "type": "object"
      },
      "ObservationBloodPressureResponse": {
        "description": "New observation record.",
        "example": {
          "observationId": 8989111,
          "warnings": [
            "+10.0% change from baseline value"
          ]
        },
        "properties": {
          "observationId": {
            "description": "Represents the unique identifier for the created resource.",
            "format": "int32",
            "type": "integer"
          },
          "warnings": {
            "description": "Represents any warnings related to patient's last Blood Pressure reading. Warnings are displayed when the reading exceeds an enabled system level threshold for Blood Pressure.<br/><br/>Depending on the Blood Pressure exception thresholds enabled by the patient's facility, the system can generate the following warnings for a Blood Pressure reading:<ul><li>\"10% change from baseline value.\"</li></ul>",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "title": "ObservationBloodPressureResponse",
        "type": "object"
      },
      "ObservationBloodSugar": {
        "description": "Observation",
        "example": {
          "deviceId": "device01",
          "deviceName": "Device Name",
          "patientId": 1901810,
          "recordedDate": "2016-09-30T08:11:00.000Z",
          "type": "bloodSugar",
          "unit": "mg/DL",
          "value": 140
        },
        "properties": {
          "type": {
            "description": "Represents the type of observation. For creating a Blood Sugar observation, the acceptable value for this field is 'bloodSugar'.",
            "type": "string"
          },
          "deviceId": {
            "description": "A unique identifier for the hardware device used to record the observation. The device ID gets displayed in the PointClickCare application next to the recorded observation. Maximum 20 characters.",
            "type": "string"
          },
          "deviceName": {
            "description": "Display name for the device used to record the observation. The device name gets displayed in the PointClickCare application next to the recorded observation. Maximum 20 characters.",
            "type": "string"
          },
          "patientId": {
            "description": "PointClickCare's unique identifier for a patient within the organization.</br></br>When a patient is admitted to a facility within an organization, they are assigned a patientId which is unique to their stay within that facility. If the same patient were to get admitted to another facility within the same organization in the future, they would be assigned a new patientId. The patientId however is unique at the organization level. That is, no two patients across different facilities within the organization will have the same patientId.",
            "format": "int32",
            "minimum": 0,
            "type": "integer"
          },
          "recordedDate": {
            "description": "Date and time when the observation was recorded. The Date and Time should be expressed in UTC in the following format YYYY-MM-DDTHH:MM:SS.sssZ.<br/>Note: Lenient dates are not allowed and will result in an error message. Example of a lenient date is 2016-13-33T12:67:77.000Z.",
            "format": "date-time",
            "type": "string"
          },
          "unit": {
            "description": "Represents the unit of measure for the Blood Sugar observation. Expected values are 'mg/dL' or 'mmol/l'. The default unit is 'mg/dL' for facilities using Imperial units and 'mmol/L' for facilities using Metric units. Note: the facilities have the ability to override the default unit used for Blood Sugar. Call the GET Facility API to determine the units of measure used by the facility.",
            "type": "string"
          },
          "value": {
            "description": "The recorded Blood Sugar for the given patient. This field can accept values of type double. Maximum acceptable value is 9999.0.",
            "type": "number"
          }
        },
        "required": [
          "patientId",
          "deviceId",
          "deviceName",
          "recordedDate",
          "type",
          "value",
          "unit"
        ],
        "title": "ObservationBloodSugar",
        "type": "object"
      },
      "ObservationBloodSugarResponse": {
        "description": "New observation record.",
        "example": {
          "observationId": 8989111,
          "warnings": [
            "High of 130.0 exceeded"
          ]
        },
        "properties": {
          "observationId": {
            "description": "Represents the unique identifier for the created resource.",
            "format": "int32",
            "type": "integer"
          },
          "warnings": {
            "description": "Represents any warnings related to the Blood Sugar reading. Warnings are usually displayed when the reading exceeds the threshold Blood Sugar values set for the patient.<br>If threshold values for Blood Sugar have been captured for the patient, the system can generate the following warnings for a Blood Sugar reading:<ul><li>\"Low of {LowThresholdValue} exceeded\"</li><li>\"High of {HighThresholdValue} exceeded\"</li></ul>",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "title": "ObservationBloodSugarResponse",
        "type": "object"
      },
      "ObservationHeartRate": {
        "description": "Observation",
        "example": {
          "deviceId": "device01",
          "deviceName": "Device Name",
          "method": "irregular - new onset",
          "patientId": 1901810,
          "recordedDate": "2016-09-30T08:11:00.000Z",
          "type": "heartRate",
          "unit": "bpm",
          "value": 72
        },
        "properties": {
          "type": {
            "description": "Represents the type of observation. For pushing a Heart Rate observation, the acceptable value for this field is 'heartRate'.",
            "type": "string"
          },
          "deviceId": {
            "description": "A unique identifier for the hardware device used to record the observation. The device ID gets displayed in the PointClickCare application next to the recorded observation. Maximum 20 characters.",
            "type": "string"
          },
          "deviceName": {
            "description": "Display name for the device used to record the observation. The device name gets displayed in the PointClickCare application next to the recorded observation. Maximum 20 characters.",
            "type": "string"
          },
          "method": {
            "description": "Represents the method used to record the heart rate observation. For Heart Rate, acceptable values are:<br><ul><li>regular</li><li>irregular - new onset</li><li>irregular - chronic</li><li>irregular - UTD onset</li><li>UTD - unable to determine</li><li>Not applicable</li></ul>",
            "type": "string"
          },
          "patientId": {
            "description": "PointClickCare's unique identifier for a patient within the organization.</br></br>When a patient is admitted to a facility within an organization, they are assigned a patientId which is unique to their stay within that facility. If the same patient were to get admitted to another facility within the same organization in the future, they would be assigned a new patientId. The patientId however is unique at the organization level. That is, no two patients across different facilities within the organization will have the same patientId.",
            "format": "int32",
            "minimum": 0,
            "type": "integer"
          },
          "recordedDate": {
            "description": "Date and time when the observation was recorded. The Date and Time should be expressed in UTC in the following format YYYY-MM-DDTHH:MM:SS.sssZ.<br/>Note: Lenient dates are not allowed and will result in an error message. Example of a lenient date is 2016-13-33T12:67:77.000Z.",
            "format": "date-time",
            "type": "string"
          },
          "unit": {
            "description": "Represents the unit of measure for the Respirations observation. Expected value is 'bpm'.",
            "type": "string"
          },
          "value": {
            "description": "The recorded Heart Rate value for the given patient. This field can accept integer values only. Maximum acceptable value is 999.",
            "type": "number"
          }
        },
        "required": [
          "patientId",
          "deviceId",
          "deviceName",
          "recordedDate",
          "type",
          "value",
          "unit"
        ],
        "title": "ObservationHeartRate",
        "type": "object"
      },
      "ObservationHeight": {
        "description": "Observation",
        "example": {
          "deviceId": "device01",
          "deviceName": "Device Name",
          "method": "Standing",
          "patientId": 1901810,
          "recordedDate": "2016-09-30T08:11:00.000Z",
          "type": "height",
          "unit": "cm",
          "value": 180
        },
        "properties": {
          "type": {
            "description": "Represents the type of observation. For pushing a Height observation, the acceptable value for this field is 'height'.",
            "type": "string"
          },
          "deviceId": {
            "description": "A unique identifier for the hardware device used to record the observation. The device ID gets displayed in the PointClickCare application next to the recorded observation. Maximum 20 characters.",
            "type": "string"
          },
          "deviceName": {
            "description": "Display name for the device used to record the observation. The device name gets displayed in the PointClickCare application next to the recorded observation. Maximum 20 characters.",
            "type": "string"
          },
          "method": {
            "description": "Represents the method used to record the height. Possible values for this field are:<br><ul><li>Standing</li><li>Lying down</li><li>Wing span</li><li>Knee height</li><li>Ulnar segment</li></ul>",
            "type": "string"
          },
          "patientId": {
            "description": "PointClickCare's unique identifier for a patient within the organization.</br></br>When a patient is admitted to a facility within an organization, they are assigned a patientId which is unique to their stay within that facility. If the same patient were to get admitted to another facility within the same organization in the future, they would be assigned a new patientId. The patientId however is unique at the organization level. That is, no two patients across different facilities within the organization will have the same patientId.",
            "format": "int32",
            "minimum": 0,
            "type": "integer"
          },
          "recordedDate": {
            "description": "Date and time when the observation was recorded. The Date and Time should be expressed in UTC in the following format YYYY-MM-DDTHH:MM:SS.sssZ.<br/>Note: Lenient dates are not allowed and will result in an error message. Example of a lenient date is 2016-13-33T12:67:77.000Z.",
            "format": "date-time",
            "type": "string"
          },
          "unit": {
            "description": "Represents the unit of measure for the Height observation. Expected values are 'cm' or 'inches'. The unit is 'inches' for facilities using Imperial units and 'cm' for facilities using Metric units. Note: Call the GET Facility API to determine the units of measure used by the facility.",
            "type": "string"
          },
          "value": {
            "description": "The recorded Height for the given patient. This field can accept values of type double. Maximum acceptable value is 99999.0.",
            "type": "number"
          }
        },
        "required": [
          "patientId",
          "deviceId",
          "deviceName",
          "recordedDate",
          "type",
          "method",
          "value",
          "unit"
        ],
        "title": "ObservationHeight",
        "type": "object"
      },
      "ObservationList": {
        "description": "List of observations.",
        "example": {
          "data": [
            {
              "diastolicValue": 80,
              "method": "Sitting l/arm",
              "methodCode": {
                "codings": [
                  {
                    "code": "8453-3",
                    "display": "Intravascular diastolic^sitting",
                    "system": "http://loinc.org",
                    "version": "2.68"
                  },
                  {
                    "code": "8459-0",
                    "display": "Intravascular systolic^sitting",
                    "system": "http://loinc.org",
                    "version": "2.68"
                  }
                ]
              },
              "observationId": 8912204,
              "patientId": 5916583,
              "recordedBy": "GeorgeM",
              "recordedDate": "2016-09-10T07:50:00.000Z",
              "systolicValue": 120,
              "type": "bloodPressure",
              "unit": "mmHg"
            },
            {
              "observationId": 8912223,
              "patientId": 5916583,
              "recordedBy": "GeorgeM",
              "recordedDate": "2016-09-14T23:23:00.000Z",
              "type": "bloodSugar",
              "unit": "mg/DL",
              "value": 140
            },
            {
              "method": "irregular - new onset",
              "methodCode": {
                "codings": [
                  {
                    "code": "8867-4",
                    "display": "Heart rate",
                    "system": "http://loinc.org",
                    "version": "2.68"
                  }
                ]
              },
              "observationId": 8912225,
              "patientId": 5916583,
              "recordedBy": "GeorgeM",
              "recordedDate": "2016-09-19T08:17:00.000Z",
              "type": "heartrate",
              "unit": "bpm",
              "value": 72
            },
            {
              "method": "Standing",
              "methodCode": {
                "codings": [
                  {
                    "code": "8308-9",
                    "display": "Body height^standing",
                    "system": "http://loinc.org",
                    "version": "2.68"
                  }
                ]
              },
              "observationId": 8912236,
              "patientId": 5916583,
              "recordedBy": "GeorgeM",
              "recordedDate": "2016-09-23T16:44:00.000Z",
              "type": "height",
              "unit": "cm",
              "value": 180
            },
            {
              "method": "Oxygen via mask",
              "methodCode": {
                "codings": [
                  {
                    "code": "59408-5",
                    "display": "Oxygen saturation",
                    "system": "http://loinc.org",
                    "version": "2.68"
                  }
                ]
              },
              "observationId": 8912256,
              "patientId": 5916583,
              "recordedBy": "GeorgeM",
              "recordedDate": "2016-09-28T07:55:00.000Z",
              "type": "oxygenSaturation",
              "unit": "%",
              "value": 92.3,
              "warnings": [
                {
                  "cleared": false,
                  "description": "+15.0% change over 90 day(s)"
                }
              ]
            },
            {
              "method": "Numerical",
              "observationId": 8912109,
              "patientId": 5916583,
              "recordedBy": "GeorgeM",
              "recordedDate": "2016-09-30T20:18:00.000Z",
              "type": "painLevel",
              "value": 4
            },
            {
              "methodCode": {
                "codings": [
                  {
                    "code": "9279-1",
                    "display": "Breaths",
                    "system": "http://loinc.org",
                    "version": "2.68"
                  }
                ]
              },
              "observationId": 8912208,
              "patientId": 5916583,
              "recordedBy": "GeorgeM",
              "recordedDate": "2016-10-30T09:45:00.000Z",
              "type": "respirations",
              "unit": "Breaths/min",
              "value": 19
            },
            {
              "method": "Oral",
              "methodCode": {
                "codings": [
                  {
                    "code": "8331-1",
                    "display": "Body temperature",
                    "system": "http://loinc.org",
                    "version": "2.68"
                  }
                ]
              },
              "observationId": 8912352,
              "patientId": 5916583,
              "recordedBy": "GeorgeM",
              "recordedDate": "2016-10-30T18:35:00.000Z",
              "type": "temperature",
              "unit": "Â°C",
              "value": 37.5
            },
            {
              "method": "Standing",
              "methodCode": {
                "codings": [
                  {
                    "code": "29463-7",
                    "display": "Body weight",
                    "system": "http://loinc.org",
                    "version": "2.68"
                  }
                ]
              },
              "observationId": 8912201,
              "patientId": 5916583,
              "recordedBy": "GeorgeM",
              "recordedDate": "2016-12-31T04:11:00.000Z",
              "type": "weight",
              "unit": "lbs",
              "value": 111,
              "warnings": [
                {
                  "cleared": true,
                  "clearedBy": "GeorgeM",
                  "description": "-10.0% change over 30 day(s)"
                },
                {
                  "cleared": true,
                  "clearedBy": "GeorgeM",
                  "description": "-18.5% change over 90 day(s)"
                }
              ]
            }
          ],
          "paging": {
            "hasMore": false,
            "page": 1,
            "pageSize": 50
          }
        },
        "properties": {
          "data": {
            "description": "List of observation.",
            "items": {
              "$ref": "#/components/schemas/ObservationResponse"
            },
            "type": "array"
          },
          "paging": {
            "$ref": "#/components/schemas/PagingResponseByPage"
          }
        },
        "title": "ObservationList",
        "type": "object"
      },
      "ObservationOxygenSaturation": {
        "description": "Observation",
        "example": {
          "deviceId": "device01",
          "deviceName": "Device Name",
          "method": "Oxygen via mask",
          "patientId": 1901810,
          "recordedDate": "2016-09-30T08:11:00.000Z",
          "type": "oxygenSaturation",
          "unit": "%",
          "value": 92.3
        },
        "properties": {
          "type": {
            "description": "Represents the type of observation. For pushing an Oxygen Saturation observation, the acceptable value for this field is 'oxygenSaturation'.",
            "type": "string"
          },
          "deviceId": {
            "description": "A unique identifier for the hardware device used to record the observation. The device ID gets displayed in the PointClickCare application next to the recorded observation. Maximum 20 characters.",
            "type": "string"
          },
          "deviceName": {
            "description": "Display name for the device used to record the observation. The device name gets displayed in the PointClickCare application next to the recorded observation. Maximum 20 characters.",
            "type": "string"
          },
          "method": {
            "description": "Represents the method used to record the Oxygen Saturation observation. Possible values are:</br><ul><li>Room Air</li><li>Oxygen via Mask</li><li>Oxygen via Nasal Cannula</li><li>Trach</li><li>CPAP</li><li>BiPAP</li><li>High Flow Oxygen</li><li>Vent</li></ul>",
            "type": "string"
          },
          "patientId": {
            "description": "PointClickCare's unique identifier for a patient within the organization.</br></br>When a patient is admitted to a facility within an organization, they are assigned a patientId which is unique to their stay within that facility. If the same patient were to get admitted to another facility within the same organization in the future, they would be assigned a new patientId. The patientId however is unique at the organization level. That is, no two patients across different facilities within the organization will have the same patientId.",
            "format": "int32",
            "minimum": 0,
            "type": "integer"
          },
          "recordedDate": {
            "description": "Date and time when the observation was recorded. The Date and Time should be expressed in UTC in the following format YYYY-MM-DDTHH:MM:SS.sssZ.<br/>Note: Lenient dates are not allowed and will result in an error message. Example of a lenient date is 2016-13-33T12:67:77.000Z.",
            "format": "date-time",
            "type": "string"
          },
          "unit": {
            "description": "Represents the unit of measure for the Respirations observation. Expected value is '%'.",
            "type": "string"
          },
          "value": {
            "description": "The recorded Oxygen Saturation value for the given patient. This field can accept values of type double. Maximum acceptable value is 100.0.",
            "type": "number"
          }
        },
        "required": [
          "patientId",
          "deviceId",
          "deviceName",
          "recordedDate",
          "type",
          "method",
          "value",
          "unit"
        ],
        "title": "ObservationOxygenSaturation",
        "type": "object"
      },
      "ObservationOxygenSaturationResponse": {
        "description": "New observation record.",
        "example": {
          "observationId": 8989111,
          "warnings": [
            "High of 90.0 exceeded"
          ]
        },
        "properties": {
          "observationId": {
            "description": "Represents the unique identifier for the created resource.",
            "format": "int32",
            "type": "integer"
          },
          "warnings": {
            "description": "Represents any warnings related to the Oxygen Saturation observation. Warnings are displayed when the reading exceeds the threshold Oxygen Saturation values set for the patient.<br>If threshold values for Oxygen Saturation have been captured for the patient, the system can generate the following warnings for a Oxygen Saturation reading:<br><ul><li>\"Low of {LowThresholdValue} exceeded\"</li><li>\"High of {HighThresholdValue} exceeded\"</li></ul>",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "title": "ObservationOxygenSaturationResponse",
        "type": "object"
      },
      "ObservationPainLevel": {
        "description": "Observation",
        "example": {
          "deviceId": "device01",
          "deviceName": "Device Name",
          "method": "Numerical",
          "patientId": 1901810,
          "recordedDate": "2016-09-30T08:11:00.000Z",
          "type": "painLevel",
          "value": 1
        },
        "properties": {
          "type": {
            "description": "Represents the type of observation. For pushing a Pain Level observation, the acceptable value for this field is 'painLevel'.",
            "type": "string"
          },
          "bodyLanguage": {
            "description": "PAINAD pain level score for Body Language. Value must be in range of 0-2. This field is only applicable and is required when a PAINAD method is provided.<ul><li>0 - Relaxed.</li><li>1 - Tensed, Distressed Pacing.</li><li>2 - Rigid, Fists Clenched, Knees Pulled Up, Pulling or Pushing Away, Striking Out.</li>",
            "format": "int32",
            "maximum": 2,
            "minimum": 0,
            "type": "integer"
          },
          "breathing": {
            "description": "PAINAD pain level score for Breathing. Value must be in range of 0-2. This field is only applicable and is required when a PAINAD method is provided.<ul><li>0 - Normal.</li><li>1 - Occasional Laboured Breathing. Short Period of Hyperventilation.</li><li>2 - Noisy Laboured Breathing. Long Period of Hyperventilation. Cheyne Stokes Respiration.</li></ul>",
            "format": "int32",
            "maximum": 2,
            "minimum": 0,
            "type": "integer"
          },
          "consolability": {
            "description": "PAINAD pain level score for Consolability. Value must be in range of 0-2. This field is only applicable and is required when a PAINAD method is provided.<ul><li>0 - No Need to Console.</li><li>1 - Distracted or Reassured by Voice or Touch.</li><li>2 - Unable to Console, Distract or Reassure.</li>",
            "format": "int32",
            "maximum": 2,
            "minimum": 0,
            "type": "integer"
          },
          "deviceId": {
            "description": "A unique identifier for the hardware device used to record the observation. The device ID gets displayed in the PointClickCare application next to the recorded observation. Maximum 20 characters.",
            "type": "string"
          },
          "deviceName": {
            "description": "Display name for the device used to record the observation. The device name gets displayed in the PointClickCare application next to the recorded observation. Maximum 20 characters.",
            "type": "string"
          },
          "facialExpression": {
            "description": "PAINAD pain level score for Facial Expression. Value must be in range of 0-2. This field is only applicable and is required�when a PAINAD�method is provided.<ul><li>0 - Smiling or Inexpressive.</li><li>1 - Sad, Frightened, Frown.</li><li>2 - Facial Grimacing.</li>",
            "format": "int32",
            "maximum": 2,
            "minimum": 0,
            "type": "integer"
          },
          "method": {
            "description": "Represents the pain scale used to record the Pain Level. Possible values are 'Numerical' or 'PAINAD'.",
            "type": "string"
          },
          "negativeVocalization": {
            "description": "PAINAD pain level score for Negative Vocalization. Value must be in range of 0-2. This field is only applicable and is required�when a PAINAD�method is provided.<ul><li>0 - None.</li><li>1 - Occasional Moan or Groan. Low Level of Speech with a Negative Quality.</li><li>2 - Repeated Troubled Calling Out. Loud Moaning or Groaning. Crying.</li>",
            "format": "int32",
            "maximum": 2,
            "minimum": 0,
            "type": "integer"
          },
          "patientId": {
            "description": "PointClickCare's unique identifier for a patient within the organization.</br></br>When a patient is admitted to a facility within an organization, they are assigned a patientId which is unique to their stay within that facility. If the same patient were to get admitted to another facility within the same organization in the future, they would be assigned a new patientId. The patientId however is unique at the organization level. That is, no two patients across different facilities within the organization will have the same patientId.",
            "format": "int32",
            "minimum": 0,
            "type": "integer"
          },
          "recordedDate": {
            "description": "Date and time when the observation was recorded. The Date and Time should be expressed in UTC in the following format YYYY-MM-DDTHH:MM:SS.sssZ.<br/>Note: Lenient dates are not allowed and will result in an error message. Example of a lenient date is 2016-13-33T12:67:77.000Z.",
            "format": "date-time",
            "type": "string"
          },
          "value": {
            "description": "The recorded Pain Level value for the given patient. This field can accept integer values only. Maximum acceptable value is 10.This field is only applicable and is required when a Numerical method is provided.",
            "type": "number"
          }
        },
        "required": [
          "patientId",
          "deviceId",
          "deviceName",
          "method",
          "recordedDate",
          "type"
        ],
        "title": "ObservationPainLevel",
        "type": "object"
      },
      "ObservationPostBody": {
        "discriminator": {
          "mapping": {
            "bloodPressure": "#/components/schemas/ObservationBloodPressure",
            "bloodSugar": "#/components/schemas/ObservationBloodSugar",
            "heartRate": "#/components/schemas/ObservationHeartRate",
            "height": "#/components/schemas/ObservationHeight",
            "oxygenSaturation": "#/components/schemas/ObservationOxygenSaturation",
            "painLevel": "#/components/schemas/ObservationPainLevel",
            "respirations": "#/components/schemas/ObservationRespirations",
            "temperature": "#/components/schemas/ObservationTemperature",
            "weight": "#/components/schemas/ObservationWeight"
          },
          "propertyName": "type"
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/ObservationBloodSugar"
          },
          {
            "$ref": "#/components/schemas/ObservationHeight"
          },
          {
            "$ref": "#/components/schemas/ObservationHeartRate"
          },
          {
            "$ref": "#/components/schemas/ObservationBloodPressure"
          },
          {
            "$ref": "#/components/schemas/ObservationOxygenSaturation"
          },
          {
            "$ref": "#/components/schemas/ObservationPainLevel"
          },
          {
            "$ref": "#/components/schemas/ObservationRespirations"
          },
          {
            "$ref": "#/components/schemas/ObservationTemperature"
          },
          {
            "$ref": "#/components/schemas/ObservationWeight"
          }
        ]
      },
      "ObservationRespirations": {
        "description": "Observation",
        "example": {
          "deviceId": "device01",
          "deviceName": "Device Name",
          "patientId": 1901810,
          "recordedDate": "2016-09-30T08:11:00.000Z",
          "type": "respirations",
          "unit": "Breaths/min",
          "value": 29
        },
        "properties": {
          "type": {
            "description": "Represents the type of observation. For pushing a Respirations observation, the acceptable value for this field is 'respirations'.",
            "type": "string"
          },
          "deviceId": {
            "description": "A unique identifier for the hardware device used to record the observation. The device ID gets displayed in the PointClickCare application next to the recorded observation. Maximum 20 characters.",
            "type": "string"
          },
          "deviceName": {
            "description": "Display name for the device used to record the observation. The device name gets displayed in the PointClickCare application next to the recorded observation. Maximum 20 characters.",
            "type": "string"
          },
          "patientId": {
            "description": "PointClickCare's unique identifier for a patient within the organization.</br></br>When a patient is admitted to a facility within an organization, they are assigned a patientId which is unique to their stay within that facility. If the same patient were to get admitted to another facility within the same organization in the future, they would be assigned a new patientId. The patientId however is unique at the organization level. That is, no two patients across different facilities within the organization will have the same patientId.",
            "format": "int32",
            "minimum": 0,
            "type": "integer"
          },
          "recordedDate": {
            "description": "Date and time when the observation was recorded. The Date and Time should be expressed in UTC in the following format YYYY-MM-DDTHH:MM:SS.sssZ.<br/>Note: Lenient dates are not allowed and will result in an error message. Example of a lenient date is 2016-13-33T12:67:77.000Z.",
            "format": "date-time",
            "type": "string"
          },
          "unit": {
            "description": "Represents the unit of measure for the Respirations observation. Expected value is 'Breaths/min'.",
            "type": "string"
          },
          "value": {
            "description": "The recorded Respirations value for the given patient. This field can accept integer values only. Maximum acceptable value is 999.",
            "type": "number"
          }
        },
        "required": [
          "patientId",
          "deviceId",
          "deviceName",
          "recordedDate",
          "type",
          "value",
          "unit"
        ],
        "title": "ObservationRespirations",
        "type": "object"
      },
      "ObservationRespirationsResponse": {
        "description": "New observation record.",
        "example": {
          "observationId": 8989111,
          "warnings": [
            "High of 28.0 exceeded"
          ]
        },
        "properties": {
          "observationId": {
            "description": "Represents the unique identifier for the created resource.",
            "format": "int32",
            "type": "integer"
          },
          "warnings": {
            "description": "Represents any warnings related to the Respirations observation. Warnings are displayed when the reading exceeds an enabled system level threshold for Respirations.<br>Depending on the Respirations exception thresholds enabled by the patient's facility, the system can generate the following warnings for a Respirations reading:<br><ul><li>\"High of 28.0 exceeded\"</li><li>\"Low of 12.0 exceeded\"</li></ul>",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "title": "ObservationRespirationsResponse",
        "type": "object"
      },
      "ObservationResponse": {
        "description": "Observation.",
        "example": {
          "method": "Standing",
          "observationId": 8912201,
          "patientId": 5916583,
          "recordedBy": "ViolaYang",
          "recordedDate": "2016-09-30T08:11:00.000Z",
          "type": "weight",
          "unit": "lbs",
          "value": 111,
          "warnings": [
            {
              "cleared": true,
              "clearedBy": "GeorgeM",
              "description": "-10.0% change over 30 day(s)"
            }
          ]
        },
        "properties": {
          "deviceId": {
            "description": "A unique identifier for the hardware device used to record the observation. This field will be available only if the observation was created through a third party application.",
            "type": "string"
          },
          "deviceName": {
            "description": "Display name for the device used to record the observation. This field will be available only if the observation was created through a third party application.",
            "type": "string"
          },
          "diastolicValue": {
            "description": "The recorded diastolic Blood Pressure for the given patient.",
            "format": "int32",
            "type": "integer"
          },
          "method": {
            "description": "Represents the method used to record the observation. This field is applicable for Heart Rate, Blood Pressure, Weight, Height, Oxygen Saturation and Pain Level. </br></br>For Heart Rate, values are:<ul><li>regular</li><li>irregular - new onset</li><li>irregular - chronic</li><li>irregular - UTD onset</li><li>UTD - unable to determine</li><li>Not applicable</li></ul>For Blood Pressure, values are:<ul><li>Standing l/arm</li><li>Standing r/arm</li><li>Sitting l/arm</li><li>Sitting r/arm</li><li>Lying l/arm</li><li>Lying r/arm</li><li>Other</li></ul>For Height, values are:<ul><li>Standing</li><li>Lying down</li><li>Wing span</li><li>Knee height</li><li>Ulnar segment</li></ul>For Oxygen Saturation, values are:</br><ul><li>Room Air</li><li>Oxygen via Mask</li><li>Oxygen via Nasal Cannula</li><li>Trach</li><li>CPAP</li><li>BiPAP</li><li>High Flow Oxygen</li><li>Vent</li></ul>For Weight, possible values are below, call the GET Facility API to determine the weight scale types used by the facility <ul><li>Standing</li><li>Wing span</li><li>Knee Height</li><li>Ulnar segment</li></ul>For Temperature, values are:<ul><li>Oral</li><li>Rectal</li><li>Tympanic</li><li>Axilla</li><li>Temporal Artery</li><li>Forehead (non-contact)</li></ul>For Pain Level, values are:<ul><li>Numerical</li><li>PAINAD</li></ul>",
            "type": "string"
          },
          "observationId": {
            "description": "The unique identifier for the observation.",
            "format": "int32",
            "type": "integer"
          },
          "patientId": {
            "description": "PointClickCare's unique identifier for a patient within the organization.</br></br>When a patient is admitted to a facility within an organization, they are assigned a patientId which is unique to their stay within that facility. If the same patient were to get admitted to another facility within the same organization in the future, they would be assigned a new patientId. The patientId however is unique at the organization level. That is, no two patients across different facilities within the organization will have the same patientId.",
            "format": "int32",
            "type": "integer"
          },
          "recordedBy": {
            "description": "The user who recorded the observation.",
            "type": "string"
          },
          "recordedDate": {
            "description": "Date and time when the observation was recorded. The Date and Time should be expressed in UTC in the following format YYYY-MM-DDTHH:MM:SS.sssZ.",
            "format": "date-time",
            "type": "string"
          },
          "systolicValue": {
            "description": "The recorded systolic Blood Pressure for the given patient.",
            "format": "int32",
            "type": "integer"
          },
          "type": {
            "description": "Represents the type of observation. Acceptable values are heartrate, bloodPressure, bloodSugar, oxygenSaturation, weight, height, painLevel, temperature, respirations.",
            "enum": [
              "weight",
              "respirations",
              "bloodPressure",
              "temperature",
              "heartrate",
              "bloodSugar",
              "height",
              "oxygenSaturation",
              "painLevel"
            ],
            "type": "string"
          },
          "unit": {
            "description": "Represents the unit of measure for the observation. Possible values are: <br>For blood pressure: mmHg<br>For blood sugar: mg/dL or mmol/l<br>For heart rate: bpm<br>For height: cm or inches<br>For oxygen saturation: %<br>For respiration: Breaths/min<br>For temperature: °C or °F<br>For weight : Kg or Lbs",
            "type": "string"
          },
          "value": {
            "description": "Recorded reading for the observation.",
            "format": "double",
            "type": "number"
          },
          "warnings": {
            "description": "List of warnings related to patient's observation reading.",
            "items": {
              "$ref": "#/components/schemas/ObservationWarning"
            },
            "type": "array"
          }
        },
        "title": "ObservationResponse",
        "type": "object"
      },
      "ObservationResponseById": {
        "description": "Observation.",
        "example": {
          "method": "Standing",
          "observationId": 8912201,
          "patientId": 5916583,
          "recordedBy": "ViolaYang",
          "recordedDate": "2016-09-30T08:11:00.000Z",
          "type": "weight",
          "unit": "lbs",
          "value": 111,
          "warnings": [
            {
              "cleared": true,
              "clearedBy": "GeorgeM",
              "description": "-10.0% change over 30 day(s)"
            }
          ]
        },
        "properties": {
          "deviceId": {
            "description": "A unique identifier for the hardware device used to record the observation. This field will be available only if the observation was created through a third party application.",
            "type": "string"
          },
          "deviceName": {
            "description": "Display name for the device used to record the observation. This field will be available only if the observation was created through a third party application.",
            "type": "string"
          },
          "diastolicValue": {
            "description": "The recorded diastolic Blood Pressure for the given patient.",
            "format": "int32",
            "type": "integer"
          },
          "method": {
            "description": "Represents the method used to record the observation. This field is applicable for Heart Rate, Blood Pressure, Weight, Height, Oxygen Saturation and Pain Level. </br></br>For Heart Rate, values are:<ul><li>regular</li><li>irregular - new onset</li><li>irregular - chronic</li><li>irregular - UTD onset</li><li>UTD - unable to determine</li><li>Not applicable</li></ul>For Blood Pressure, values are:<ul><li>Standing l/arm</li><li>Standing r/arm</li><li>Sitting l/arm</li><li>Sitting r/arm</li><li>Lying l/arm</li><li>Lying r/arm</li><li>Other</li></ul>For Height, values are:<ul><li>Standing</li><li>Lying down</li><li>Wing span</li><li>Knee height</li><li>Ulnar segment</li></ul>For Oxygen Saturation, values are:</br><ul><li>Room Air</li><li>Oxygen via Mask</li><li>Oxygen via Nasal Cannula</li><li>Trach</li><li>CPAP</li><li>BiPAP</li><li>High Flow Oxygen</li><li>Vent</li></ul>For Weight, possible values are below, call the GET Facility API to determine the weight scale types used by the facility <ul><li>Standing</li><li>Wing span</li><li>Knee Height</li><li>Ulnar segment</li></ul>For Temperature, values are:<ul><li>Oral</li><li>Rectal</li><li>Tympanic</li><li>Axilla</li><li>Temporal Artery</li><li>Forehead (non-contact)</li></ul>For Pain Level, values are:<ul><li>Numerical</li><li>PAINAD</li></ul>",
            "type": "string"
          },
          "observationId": {
            "description": "The unique identifier for the observation.",
            "format": "int32",
            "type": "integer"
          },
          "patientId": {
            "description": "PointClickCare's unique identifier for a patient within the organization.</br></br>When a patient is admitted to a facility within an organization, they are assigned a patientId which is unique to their stay within that facility. If the same patient were to get admitted to another facility within the same organization in the future, they would be assigned a new patientId. The patientId however is unique at the organization level. That is, no two patients across different facilities within the organization will have the same patientId.",
            "format": "int32",
            "type": "integer"
          },
          "recordedBy": {
            "description": "The user who recorded the observation.",
            "type": "string"
          },
          "recordedDate": {
            "description": "Date and time when the observation was recorded. The Date and Time should be expressed in UTC in the following format YYYY-MM-DDTHH:MM:SS.sssZ.",
            "format": "date-time",
            "type": "string"
          },
          "systolicValue": {
            "description": "The recorded systolic Blood Pressure for the given patient.",
            "format": "int32",
            "type": "integer"
          },
          "type": {
            "description": "Represents the type of observation. Acceptable values are heartrate, bloodPressure, bloodSugar, oxygenSaturation, weight, height, painLevel, temperature, respirations.",
            "enum": [
              "weight",
              "respirations",
              "bloodPressure",
              "temperature",
              "heartrate",
              "bloodSugar",
              "height",
              "oxygenSaturation",
              "painLevel"
            ],
            "type": "string"
          },
          "unit": {
            "description": "Represents the unit of measure for the observation. Possible values are: <br>For blood pressure: mmHg<br>For blood sugar: mg/dL or mmol/l<br>For heart rate: bpm<br>For height: cm or inches<br>For oxygen saturation: %<br>For respiration: Breaths/min<br>For temperature: °C or °F<br>For weight : Kg or Lbs",
            "type": "string"
          },
          "value": {
            "description": "Recorded reading for the observation.",
            "format": "double",
            "type": "number"
          },
          "warnings": {
            "description": "List of warnings related to patient's observation reading.",
            "items": {
              "$ref": "#/components/schemas/ObservationWarning"
            },
            "type": "array"
          }
        },
        "title": "ObservationResponseById",
        "type": "object"
      },
      "ObservationTemperature": {
        "description": "Observation",
        "example": {
          "deviceId": "device01",
          "deviceName": "Device Name",
          "method": "Oral",
          "patientId": 1901810,
          "recordedDate": "2016-09-30T08:11:00.000Z",
          "type": "temperature",
          "unit": "°C",
          "value": 38.5
        },
        "properties": {
          "type": {
            "description": "Represents the type of observation. For pushing a Temperature observation, the acceptable value for this field is 'temperature'.",
            "type": "string"
          },
          "deviceId": {
            "description": "A unique identifier for the hardware device used to record the observation. The device ID gets displayed in the PointClickCare application next to the recorded observation. Maximum 20 characters.",
            "type": "string"
          },
          "deviceName": {
            "description": "Display name for the device used to record the observation. The device name gets displayed in the PointClickCare application next to the recorded observation. Maximum 20 characters.",
            "type": "string"
          },
          "method": {
            "description": "Represents the route used to record the Temperature. Possible values are: <br><ul><li>Oral</li><li>Rectal</li><li>Tympanic</li><li>Axilla</li><li>Temporal Artery</li><li>Forehead (non-contact)</li></ul>",
            "type": "string"
          },
          "patientId": {
            "description": "PointClickCare's unique identifier for a patient within the organization.</br></br>When a patient is admitted to a facility within an organization, they are assigned a patientId which is unique to their stay within that facility. If the same patient were to get admitted to another facility within the same organization in the future, they would be assigned a new patientId. The patientId however is unique at the organization level. That is, no two patients across different facilities within the organization will have the same patientId.",
            "format": "int32",
            "minimum": 0,
            "type": "integer"
          },
          "recordedDate": {
            "description": "Date and time when the observation was recorded. The Date and Time should be expressed in UTC in the following format YYYY-MM-DDTHH:MM:SS.sssZ.<br/>Note: Lenient dates are not allowed and will result in an error message. Example of a lenient date is 2016-13-33T12:67:77.000Z.",
            "format": "date-time",
            "type": "string"
          },
          "unit": {
            "description": "Represents the unit of measure for the Temperature observation. Expected values are '°C' and '°F'. The unit is '°F' for facilities using Imperial units, and '°C' for facilities using Metric units. Note: Call the GET Facility API to determine the units of measure used by the facility.",
            "type": "string"
          },
          "value": {
            "description": "The recorded Temperature value for the given patient. This field can accept values of type double. Maximum acceptable value is 99999.0.",
            "type": "number"
          }
        },
        "required": [
          "patientId",
          "deviceId",
          "deviceName",
          "method",
          "value",
          "unit",
          "recordedDate",
          "type"
        ],
        "title": "ObservationTemperature",
        "type": "object"
      },
      "ObservationTemperatureResponse": {
        "description": "New observation record.",
        "example": {
          "observationId": 8989111,
          "warnings": [
            "High of 38.0 exceeded"
          ]
        },
        "properties": {
          "observationId": {
            "description": "Represents the unique identifier for the created resource.",
            "format": "int32",
            "type": "integer"
          },
          "warnings": {
            "description": "Represents any warnings related to the Temperature observation. Warnings are displayed when the reading exceeds an enabled system level threshold for Temperature.<br>Depending on the Temperature exception thresholds enabled by the facility, the system can generate the following warnings for a Temperature reading:<br><ul><li>\"Low of {LowThresholdValue} exceeded\"</li><li>\"High of {HighThresholdValue} exceeded\" </li></ul>",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "title": "ObservationTemperatureResponse",
        "type": "object"
      },
      "ObservationWarning": {
        "description": "Warnings related to patient's observation reading.",
        "example": {
          "cleared": true,
          "clearedBy": "GeorgeM",
          "description": "-10.0% change over 30 day(s)"
        },
        "properties": {
          "cleared": {
            "description": "Represents if a warning has been cleared.",
            "type": "boolean"
          },
          "clearedBy": {
            "description": "The user who cleared the warning.",
            "type": "string"
          },
          "description": {
            "description": "The warning message associated with this observation reading.",
            "type": "string"
          }
        },
        "title": "ObservationWarning",
        "type": "object"
      },
      "ObservationWeight": {
        "description": "Observation",
        "example": {
          "deviceId": "device01",
          "deviceName": "Device Name",
          "method": "Standing",
          "patientId": 1901810,
          "recordedDate": "2016-09-30T08:11:00.000Z",
          "type": "weight",
          "unit": "lbs",
          "value": 170
        },
        "properties": {
          "type": {
            "description": "Represents the type of observation. For pushing a Weight observation, the acceptable value for this field is 'weight'.",
            "type": "string"
          },
          "deviceId": {
            "description": "A unique identifier for the hardware device used to record the observation. The device ID gets displayed in the PointClickCare application next to the recorded observation. Maximum 20 characters.",
            "type": "string"
          },
          "deviceName": {
            "description": "Display name for the device used to record the observation. The device name gets displayed in the PointClickCare application next to the recorded observation. Maximum 20 characters.",
            "type": "string"
          },
          "method": {
            "description": "Represents the type of weighing scale used to record the Weight observation. PointClickCare allows facilities to customize the weight scales available in the application. The value passed in this field must match one of the weight scales used by the facility. Note: Call the GET Facility API to determine the weight scale types used by the facility.<br><br>This field is optional for Weight observations.",
            "type": "string"
          },
          "patientId": {
            "description": "PointClickCare's unique identifier for a patient within the organization.</br></br>When a patient is admitted to a facility within an organization, they are assigned a patientId which is unique to their stay within that facility. If the same patient were to get admitted to another facility within the same organization in the future, they would be assigned a new patientId. The patientId however is unique at the organization level. That is, no two patients across different facilities within the organization will have the same patientId.",
            "format": "int32",
            "minimum": 0,
            "type": "integer"
          },
          "recordedDate": {
            "description": "Date and time when the observation was recorded. The Date and Time should be expressed in UTC in the following format YYYY-MM-DDTHH:MM:SS.sssZ.<br/>Note: Lenient dates are not allowed and will result in an error message. Example of a lenient date is 2016-13-33T12:67:77.000Z.",
            "format": "date-time",
            "type": "string"
          },
          "unit": {
            "description": "Represents the unit of measure for the Weight observation. Expected values are 'Kg' or 'Lbs'. The unit is 'Lbs' for facilities using Imperial units, and 'Kg' for facilities using Metric units. Note: Call the GET Facility API to determine the units of measure used by the facility.",
            "type": "string"
          },
          "value": {
            "description": "The recorded Weight for the given patient. This field can accept values of type double. Maximum acceptable value is 999999.0.",
            "type": "number"
          }
        },
        "required": [
          "patientId",
          "deviceId",
          "deviceName",
          "value",
          "unit",
          "recordedDate",
          "type"
        ],
        "title": "ObservationWeight",
        "type": "object"
      },
      "ObservationWeightResponse": {
        "description": "New observation record.",
        "example": {
          "observationId": 8989111,
          "warnings": [
            "+10.0% change from baseline value"
          ]
        },
        "properties": {
          "observationId": {
            "description": "Represents the unique identifier for the created resource.",
            "format": "int32",
            "type": "integer"
          },
          "warnings": {
            "description": "Represents any warnings related to the Weight observation. Warnings are displayed when the reading exceeds an enabled system level threshold for Weight.<br>Depending on the Weight exception thresholds enabled by the facility, the system can generate the following warnings for a Weight reading:<br><ul><li>\"+3.0% change from last weight\"</li><li>\"-3.0% change from last weight\"</li><li>\"+3.0% change over 30 days\"</li><li>\"-3.0% change over 30 days\"</li><li>\"+7.5% change over 90 days\"</li><li>\"-7.5% change over 90 days\"</li><li>\"+10.0% change overdays\"</li><li>\"-10.0% change overdays\"</li><li>\"+5% change over 30 days\"</li><li>\"-5% change over 30 days\"</li></ul>",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "title": "ObservationWeightResponse",
        "type": "object"
      },
      "OidList": {
        "description": "List of OIDs.",
        "example": {
          "data": [
            {
              "oid": "2.16.840.1.113883.3.6448.5.2597352509",
              "id": "1",
              "autoAssigned": true,
              "defaultOid": true,
              "childOids": [
                {
                  "facilityname": "FACILITY_1",
                  "facId": 1,
                  "facilityOid": "2.16.840.1.113883.3.6448.5.2597352509.4.1",
                  "patientIdOid": "2.16.840.1.113883.3.6448.5.2597352509.4.1.20",
                  "medicalRecordNumberOid": "2.16.840.1.113883.3.6448.5.2597352509.4.1.21"
                },
                {
                  "facilityname": "FACILITY_2",
                  "facId": 2,
                  "facilityOid": "2.16.840.1.113883.3.6448.5.2597352509.4.2",
                  "patientIdOid": "2.16.840.1.113883.3.6448.5.2597352509.4.2.20",
                  "medicalRecordNumberOid": "2.16.840.1.113883.3.6448.5.2597352509.4.2.21"
                }
              ]
            }
          ]
        },
        "properties": {
          "data": {
            "description": "List of OIDs.",
            "items": {
              "$ref": "#/components/schemas/Oid"
            },
            "type": "array"
          }
        },
        "title": "OidList",
        "type": "object"
      },
      "Oid": {
        "description": "OIDs.",
        "example": {
          "oid": "2.16.840.1.113883.3.6448.5.2597352509",
          "id": "1",
          "autoAssigned": true,
          "defaultOid": true,
          "childOids": [
            {
              "facilityname": "FACILITY_1",
              "facId": 1,
              "facilityOid": "2.16.840.1.113883.3.6448.5.2597352509.4.1",
              "patientIdOid": "2.16.840.1.113883.3.6448.5.2597352509.4.1.20",
              "medicalRecordNumberOid": "2.16.840.1.113883.3.6448.5.2597352509.4.1.21"
            },
            {
              "facilityname": "FACILITY_2",
              "facId": 2,
              "facilityOid": "2.16.840.1.113883.3.6448.5.2597352509.4.2",
              "patientIdOid": "2.16.840.1.113883.3.6448.5.2597352509.4.2.20",
              "medicalRecordNumberOid": "2.16.840.1.113883.3.6448.5.2597352509.4.2.21"
            }
          ]
        },
        "properties": {
          "oid": {
            "description": "A root oid configured within the organization.",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier for the root oid within the organization",
            "type": "string"
          },
          "autoAssigned": {
            "description": "Identifies if the root oid was auto-assigned to the organization.",
            "type": "boolean"
          },
          "defaultOid": {
            "description": "Identifies if the root oid is the current default oid for the organization",
            "type": "boolean"
          },
          "childOids": {
            "description": "List of child oids.",
            "items": {
              "$ref": "#/components/schemas/ChildOid"
            },
            "type": "array"
          }
        },
        "title": "Oid",
        "type": "object"
      },
      "Omp": {
        "description": "OMP ID Information",
        "example": {
          "birthDate": "1949-10-07",
          "createdBy": "Admin",
          "createdDate": "2019-07-09T00:44:48.458Z",
          "deleted": true,
          "firstName": "Winstein",
          "gender": "MALE",
          "hasMoreInaccessibleFacilities": true,
          "lastName": "Barngully",
          "lastUpdatedBy": "mfrederick",
          "lastUpdatedDate": "2019-10-09T00:44:48.458Z",
          "links": [
            {
              "linkId": 1,
              "linkType": "replaces",
              "metadata": {
                "createdBy": "pcc-demo",
                "createdDate": "2016-01-01T05:00:00.000Z",
                "deleted": true,
                "lastUpdatedBy": "pcc-demo",
                "lastUpdatedDate": "2016-01-02T05:00:00.000Z",
                "medicareNumber": "287820823V",
                "ompId": 10001,
                "socialBeneficiaryIdentifier": "002-66-0380"
              }
            },
            {
              "linkId": 2,
              "linkType": "replaced-by",
              "metadata": {
                "createdBy": "pcc-demo",
                "createdDate": "2019-10-09T00:44:48.458Z",
                "deleted": false,
                "lastUpdatedBy": "pcc-demo",
                "lastUpdatedDate": "2019-10-09T00:44:48.458Z",
                "medicareNumber": "6144242V",
                "ompId": 10003,
                "socialBeneficiaryIdentifier": "000-456-454"
              }
            }
          ],
          "medicareNumber": "6144242V",
          "middleName": "Jay",
          "ompId": 10002,
          "patientStays": [
            {
              "facId": 2,
              "hasMoreInaccessiblePatients": false,
              "patients": [
                {
                  "admissionDate": "2017-01-30",
                  "dischargeDate": "2017-04-20",
                  "patientId": 23456
                },
                {
                  "admissionDate": "2018-02-15",
                  "dischargeDate": "2018-02-20",
                  "patientId": 45234
                }
              ]
            },
            {
              "facId": 3,
              "hasMoreInaccessiblePatients": true,
              "patients": [
                {
                  "admissionDate": "2016-01-20",
                  "dischargeDate": "2016-04-20",
                  "patientId": 2895
                },
                {
                  "admissionDate": "2017-09-20",
                  "dischargeDate": "2017-11-30",
                  "patientId": 8475
                },
                {
                  "admissionDate": "2019-12-20",
                  "patientId": 4562
                }
              ]
            }
          ],
          "socialBeneficiaryIdentifier": "00-010-2424"
        },
        "properties": {
          "birthDate": {
            "description": "Date representing the patient's birth date. The date format is YYYY-MM-DD.",
            "format": "date",
            "type": "string"
          },
          "createdBy": {
            "description": "The user that created the master patient identifier.",
            "type": "string"
          },
          "createdDate": {
            "description": "Date and time when the master patient identifier was created. The Date and Time should be expressed in UTC in the following format YYYY-MM-DDTHH:MM:SS.sssZ.",
            "format": "date-time",
            "type": "string"
          },
          "deleted": {
            "description": "Identifies if the record is deleted. Possible responses are 'true' or 'false'.",
            "type": "boolean"
          },
          "firstName": {
            "description": "The patient's first name.",
            "type": "string"
          },
          "gender": {
            "description": "The patient's gender. Possible responses are 'MALE', 'FEMALE' or 'UNKNOWN'.",
            "enum": [
              "MALE",
              "FEMALE"
            ],
            "type": "string"
          },
          "hasMoreInaccessibleFacilities": {
            "description": "Identifies if there are additional facility records that are available but the user may not have access to them. Possible responses are 'true' or 'false'.",
            "type": "boolean"
          },
          "lastName": {
            "description": "The patient's last name.",
            "type": "string"
          },
          "lastUpdatedBy": {
            "description": "The user that last updated the master patient identifier.",
            "type": "string"
          },
          "lastUpdatedDate": {
            "description": "Date and time when the master patient identifier was last updated. The Date and Time should be expressed in UTC in the following format YYYY-MM-DDTHH:MM:SS.sssZ.",
            "format": "date-time",
            "type": "string"
          },
          "links": {
            "description": "A list of links an MPI record has to other records. ie. Replaces or replaced by.",
            "items": {
              "$ref": "#/components/schemas/OmpLink"
            },
            "type": "array"
          },
          "medicareNumber": {
            "description": "The Medicare number for the patient. This field is applicable for US facilities only.",
            "type": "string"
          },
          "middleName": {
            "description": "The patient's middle name.",
            "type": "string"
          },
          "ompId": {
            "description": "A system generated identifier assigned to a resident in a multi-facility organization to uniquely identify a resident across facilities within an organization.",
            "format": "int32",
            "type": "integer"
          },
          "patientStays": {
            "description": "List of patient stays of the organization master patient identifier.",
            "items": {
              "$ref": "#/components/schemas/OmpPatientStay"
            },
            "type": "array"
          },
          "socialBeneficiaryIdentifier": {
            "description": "The patient's Social Security Number (SSN) for US facilities or Social Insurance Number (SIN) for Canadian facilities. PointClickCare allows facilities to define their own format for the resident identifiers. Facilities can only use spaces, hyphens (\"-\") and dots (\".\") as separators. The value returned in the response includes the separators. SSN is not returned by default for production apps. Please contact your Partnership Manager and submit a business use case to request this.",
            "type": "string"
          }
        },
        "title": "Omp",
        "type": "object"
      },
      "OmpLink": {
        "example": {
          "linkId": 1,
          "linkType": "replaces",
          "metadata": {
            "createdBy": "pcc-demo",
            "createdDate": "2016-01-01T05:00:00.000Z",
            "deleted": true,
            "lastUpdatedBy": "pcc-demo",
            "lastUpdatedDate": "2016-01-02T05:00:00.000Z",
            "medicareNumber": "287820823V",
            "ompId": 10001,
            "socialBeneficiaryIdentifier": "002-66-0380"
          }
        },
        "properties": {
          "linkId": {
            "description": "Unique identifier for the organization master patient identifier link.",
            "format": "int32",
            "type": "integer"
          },
          "linkType": {
            "description": "FHIR type that defines the link. ie. replaces, replaced-by, refer or see-also.",
            "type": "string"
          },
          "metadata": {
            "$ref": "#/components/schemas/OmpLinkMetaData"
          }
        },
        "title": "OmpLink",
        "type": "object"
      },
      "OmpLinkMetaData": {
        "example": {
          "createdBy": "pcc-demo",
          "createdDate": "2016-01-01T05:00:00.000Z",
          "deleted": true,
          "lastUpdatedBy": "pcc-demo",
          "lastUpdatedDate": "2016-01-02T05:00:00.000Z",
          "medicareNumber": "287820823V",
          "ompId": 10001,
          "socialBeneficiaryIdentifier": "002-66-0380"
        },
        "properties": {
          "createdBy": {
            "description": "The user that merged the Organization master patient identifier records.",
            "type": "string"
          },
          "createdDate": {
            "description": "Date and time the organization master patient identifier merge history record was created. The Date and Time should be expressed in UTC in the following format YYYY-MM-DDTHH:MM:SS.sssZ.",
            "format": "date-time",
            "type": "string"
          },
          "deleted": {
            "description": "Identifies if the records have been unmerged.",
            "type": "boolean"
          },
          "lastUpdatedBy": {
            "description": "The user that last updated the organization master patient identifier merge record.",
            "type": "string"
          },
          "lastUpdatedDate": {
            "description": "Date and time when the master patient identifier merge history record was last updated. The Date and Time should be expressed in UTC in the following format YYYY-MM-DDTHH:MM:SS.sssZ.",
            "format": "date-time",
            "type": "string"
          },
          "medicareNumber": {
            "description": "Original medicare number of the merged record.",
            "type": "string"
          },
          "ompId": {
            "description": "Organization master patient identifier of the record referenced in the link.",
            "format": "int32",
            "type": "integer"
          },
          "socialBeneficiaryIdentifier": {
            "description": "Original Social Beneficiary Identifier of the merged record.",
            "type": "string"
          }
        },
        "title": "OmpLinkMetaData",
        "type": "object"
      },
      "OmpPatientStay": {
        "example": {
          "facId": 2,
          "hasMoreInaccessiblePatients": true,
          "patients": [
            {
              "admissionDate": "2017-01-30",
              "dischargeDate": "2017-04-20",
              "patientId": 23456
            },
            {
              "admissionDate": "2018-02-15",
              "dischargeDate": "2018-02-20",
              "patientId": 45234
            },
            {
              "admissionDate": "2016-01-20",
              "dischargeDate": "2016-04-20",
              "patientId": 2895
            },
            {
              "admissionDate": "2017-09-20",
              "dischargeDate": "2017-11-30",
              "patientId": 8475
            },
            {
              "admissionDate": "2019-12-20",
              "patientId": 4562
            }
          ]
        },
        "properties": {
          "facId": {
            "description": "PointClickCare's unique identifier for a facility within the organization.",
            "format": "int32",
            "type": "integer"
          },
          "hasMoreInaccessiblePatients": {
            "description": "Identifies if there are additional patient records that are available but the user may not have access to them. Possible responses are 'true' or 'false'.",
            "type": "boolean"
          },
          "patients": {
            "description": "List of patient information.",
            "items": {
              "$ref": "#/components/schemas/OmpPatientStayDetails"
            },
            "type": "array"
          }
        },
        "title": "OmpPatientStay",
        "type": "object"
      },
      "OmpPatientStayDetails": {
        "example": {
          "admissionDate": "2010-01-30",
          "dischargeDate": "2012-04-20",
          "patientId": 230181
        },
        "properties": {
          "admissionDate": {
            "description": "The date the patient was admitted. The date format is YYYY-MM-DD.",
            "format": "date",
            "type": "string"
          },
          "dischargeDate": {
            "description": "The date the patient was discharged. The date format is YYYY-MM-DD.",
            "format": "date",
            "type": "string"
          },
          "patientId": {
            "description": "PointClickCare's unique identifier for a patient within the organization. When a patient is admitted to a facility within an organization, they are assigned a patientId which is unique to their stay within that facility. If the same patient were to get admitted to another facility within the same organization in the future, they would be assigned a new patientId. The patientId however is unique at the organization level. That is, no two patients across different facilities within the organization will have the same patientId.",
            "format": "int32",
            "type": "integer"
          }
        },
        "title": "OmpPatientStayDetails",
        "type": "object"
      },
      "OralDiet": {
        "description": "Oral diet components.",
        "example": {
          "additionalDirections": "4 OZ of Prune Juice with breakfast",
          "endDateTime": "2020-11-30T19:06:17.944Z",
          "fluidConsistencyType": "Pudding consistency",
          "startDateTime": "2021-01-30T19:06:17.944Z",
          "texture": {
            "modifier": "Pureed texture"
          },
          "type": "Regular Diet"
        },
        "properties": {
          "additionalDirections": {
            "description": "Free text directions entered for the Diet Order. Directions can be added at the time of entering an order or as an update after the order has been promoted to the patient's chart.",
            "type": "string"
          },
          "endDateTime": {
            "description": "The last valid date and time of the nutrition order. It may be empty if the medication has infinite duration. Date and time are expressed in UTC.",
            "format": "date-time",
            "type": "string"
          },
          "fluidConsistencyType": {
            "description": "The required consistency of fluids and liquids provided to the patient.",
            "type": "string"
          },
          "startDateTime": {
            "description": "The earliest date and time scheduled for the nutrition order. Date and time are expressed in UTC.",
            "format": "date-time",
            "type": "string"
          },
          "texture": {
            "$ref": "#/components/schemas/OralDietTexture"
          },
          "type": {
            "description": "Represent the type of diet that the patient is on, eg. Gluten, vegetarian, etc.",
            "type": "string"
          }
        },
        "title": "OralDiet",
        "type": "object"
      },
      "OralDietTexture": {
        "description": "Required texture modifications.",
        "example": {
          "modifier": "Pureed texture"
        },
        "properties": {
          "modifier": {
            "description": "Description indicating how to alter the texture of the foods, e.g. pureed.",
            "type": "string"
          }
        },
        "title": "OralDietTexture",
        "type": "object"
      },
      "OrderConfiguration": {
        "description": "A list of clinical order configurations associated with the facility.",
        "example": {
          "defaultMedicationLibrary": 4,
          "defaultMedicationLibraryDescription": "MediSpanAPI",
          "epcsEnabled": true,
          "pdmpEnabled": true,
          "quantityAndRefillRequired": false,
          "dischargeOrderEnabled": true,
          "oneSignatureEnabled": true,
          "oneReviewEnabled": true
        },
        "properties": {
          "defaultMedicationLibrary": {
            "description": "Indicates default medication library id.",
            "format": "int32",
            "type": "integer"
          },
          "defaultMedicationLibraryDescription": {
            "description": "Indicates default medication library description.",
            "type": "string"
          },
          "epcsEnabled": {
            "description": "Indicates whether the e-prescribe workflow is enabled.",
            "type": "boolean"
          },
          "pdmpEnabled": {
            "description": "Indicates if PDMP is enabled. The flag is true on the following conditions:<br>-  user has Vendor Protocol PDMP enabled;<br>-  user has CreateOrder and ConfirmOwnPhysOrder access;<br>-  user is a medical professional or is tied to a medical professional.",
            "type": "boolean"
          },
          "quantityAndRefillRequired": {
            "description": "Indicates whether the quantity and refill are required for order creation.",
            "type": "boolean"
          },
          "dischargeOrderEnabled": {
            "description": "Indicates whether the discharge order is enabled.",
            "type": "boolean"
          },
          "oneSignatureEnabled": {
            "description": "Indicates whether the one signature is enabled.",
            "type": "boolean"
          },
          "oneReviewEnabled": {
            "description": "Indicates whether the one review is enabled.",
            "type": "boolean"
          }
        },
        "title": "OrderConfiguration",
        "type": "object"
      },
      "OrderingPractitioner": {
        "description": "Details on the practitioner that ordered the diagnostic report.",
        "example": {
          "firstName": "John",
          "lastName": "Smith",
          "middleName": "Jacob",
          "npi": 9876543210,
          "practitionerId": 12345
        },
        "properties": {
          "firstName": {
            "description": "The practitioner's first name.",
            "type": "string"
          },
          "lastName": {
            "description": "The practitioner's last name.",
            "type": "string"
          },
          "middleName": {
            "description": "The practitioner's middle name.",
            "type": "string"
          },
          "npi": {
            "description": "National Provider ID for the practitioner.",
            "type": "integer"
          },
          "practitionerId": {
            "description": "The unique identifier for the practitioner within the organization.",
            "format": "int32",
            "type": "integer"
          }
        },
        "title": "OrderingPractitioner",
        "type": "object"
      },
      "Outbound": {
        "description": "All pain management assessment questions and responses for a patient recorded in PointClickCare.",
        "example": {
          "mdsQuestionKey": "J0300",
          "questionDescription": "Resident complained of pain?",
          "response": {
            "description": true,
            "recordedBy": "pcc-demo",
            "recordedDate": "2020-11-30T19:06:19.126Z",
            "value": 1
          }
        },
        "properties": {
          "mdsQuestionKey": {
            "description": "Unique identifier for an MDS question. This key is only available if the pain management assessment question maps to a standard MDS question.",
            "type": "string"
          },
          "questionDescription": {
            "description": "Description of the assessment question in PointClickCare.",
            "type": "string"
          },
          "response": {
            "$ref": "#/components/schemas/OutboundResponse"
          }
        },
        "title": "Outbound",
        "type": "object"
      },
      "OutboundResponse": {
        "description": "All responses recorded for a pain management assessment question.",
        "example": {
          "description": "Yes",
          "recordedBy": "pcc-demo",
          "recordedDate": "2020-11-30T19:06:19.093Z",
          "value": 1
        },
        "properties": {
          "description": {
            "description": "Description of the response value in PointClickCare.",
            "type": "string"
          },
          "recordedBy": {
            "description": "The PointClickCare user who recorded the response for the patient.",
            "type": "string"
          },
          "recordedDate": {
            "description": "The date and time when the response was recorded by the user. The date is expressed in UTC in the following format: YYYY-MM-DDTHH:MM:SS.sssZ.",
            "format": "date-time",
            "type": "string"
          },
          "value": {
            "description": "Represents the response value recorded for the pain management assessment question.",
            "format": "int32",
            "type": "integer"
          }
        },
        "title": "OutboundResponse",
        "type": "object"
      },
      "PagingResponseByPage": {
        "description": "Represents the indexing and size of records returned.",
        "example": {
          "hasMore": true,
          "page": 1,
          "pageSize": 2
        },
        "properties": {
          "hasMore": {
            "description": "Indicator if there are further records in the list that weren't returned in this response.",
            "example": false,
            "type": "boolean"
          },
          "page": {
            "description": "Part of pagination control. Skip (page - 1) * pageSize records from the beginning of the list before returning the rest. Default is 1.",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "pageSize": {
            "description": "Part of pagination control. How many records to return in response to this request. Default is 50. Maximum value allowed is 200.",
            "example": 50,
            "format": "int32",
            "type": "integer"
          }
        },
        "title": "PagingResponseByPage",
        "type": "object"
      },
      "ProgressNoteTypes": {
        "description": "Progress Notes Types List",
        "example": {
          "data": [
            {
              "facId": 1,
              "highPriority": true,
              "noteType": "Physician Order",
              "orgUuid": "12345678-AAAA-4444-AAAA-000010000001",
              "progressNoteTypeId": 12,
              "sections": [
                "Data",
                "Action",
                "Recommendation"
              ],
              "showOn24HourReport": true,
              "showOnShiftReport": true
            },
            {
              "facId": 1,
              "highPriority": false,
              "noteType": "Service plan update note",
              "orgUuid": "12345678-AAAA-4444-AAAA-000010000001",
              "progressNoteTypeId": 296,
              "showOn24HourReport": false,
              "showOnShiftReport": true
            },
            {
              "facId": 1,
              "highPriority": false,
              "noteType": "TF",
              "orgUuid": "12345678-AAAA-4444-AAAA-000010000001",
              "progressNoteTypeId": 449,
              "sections": [
                "TF Order",
                "H2O Flush",
                "Free H2O/ % of Est. Needs"
              ],
              "showOn24HourReport": true,
              "showOnShiftReport": false
            }
          ],
          "paging": {
            "hasMore": true,
            "page": 1,
            "pageSize": 2
          }
        },
        "properties": {
          "data": {
            "description": "List of all progress note types data",
            "items": {
              "$ref": "#/components/schemas/ProgressNoteTypesSummary"
            },
            "type": "array"
          },
          "paging": {
            "$ref": "#/components/schemas/PagingResponseByPage"
          }
        },
        "title": "ProgressNoteTypes",
        "type": "object"
      },
      "PainManagementList": {
        "description": "Patient Pain Assessments",
        "example": {
          "data": [
            {
              "mdsQuestionKey": "J0300",
              "questionDescription": "Resident complained of pain?",
              "response": {
                "description": true,
                "recordedBy": "pcc-demo",
                "recordedDate": "2020-11-30T19:06:19.201Z",
                "value": 1
              }
            },
            {
              "mdsQuestionKey": "J0300",
              "questionDescription": "Resident complained of pain?",
              "response": {
                "description": false,
                "recordedBy": "pcc-demo",
                "recordedDate": "2020-11-29T19:06:19.201Z",
                "value": 0
              }
            }
          ],
          "paging": {
            "hasMore": false,
            "page": 1,
            "pageSize": 50
          }
        },
        "properties": {
          "data": {
            "description": "List of all pain management assessment questions and responses for a patient recorded in PointClickCare.",
            "items": {
              "$ref": "#/components/schemas/Outbound"
            },
            "type": "array"
          },
          "paging": {
            "$ref": "#/components/schemas/PagingResponseByPage"
          }
        },
        "title": "PainManagementList",
        "type": "object"
      },
      "PainadComponent": {
        "description": "Text description of the numerical value.",
        "example": {
          "description": "Normal",
          "value": "0"
        },
        "properties": {
          "description": {
            "description": "Text description of the numerical value.",
            "type": "string"
          },
          "value": {
            "description": "Value associated for specified subsection.",
            "type": "string"
          }
        },
        "title": "PainadComponent",
        "type": "object"
      },
      "PatchCalendarEvent": {
        "description": "Updates a calendar event",
        "example": {
          "cancelFlag": true,
          "reasonForCancellation": "Test"
        },
        "properties": {
          "cancelFlag": {
            "description": "Indicates whether the event is cancelled. All future occurrences will be marked as cancelled in the event series. Can be 'True' or 'False'.",
            "type": "boolean"
          },
          "reasonForCancellation": {
            "description": "Reason for cancelling the event. This field is required if cancelFlag is set to 'True'. Limit of 200 characters.",
            "maxLength": 200,
            "minLength": 0,
            "type": "string"
          }
        },
        "required": [
          "cancelFlag"
        ],
        "title": "PatchCalendarEvent",
        "type": "object"
      },
      "PatchCalendarEventOccurrence": {
        "description": "Patch Calendar Event Occurrence",
        "example": {
          "attendeeIds": [
            123456,
            3434443
          ]
        },
        "properties": {
          "attendeeIds": {
            "description": "PointClickCare's unique identifiers for participants that have attended the event.",
            "items": {
              "format": "int32",
              "type": "integer"
            },
            "type": "array"
          },
          "cancelFlag": {
            "description": "Indicates whether the occurrence is cancelled. Can be 'True' or 'False'.",
            "type": "boolean"
          },
          "reasonForCancellation": {
            "description": "Reason for cancelling the occurrence. This field is required if cancelFlag is set to 'True'. Limit of 200 characters.",
            "maxLength": 200,
            "minLength": 0,
            "type": "string"
          }
        },
        "title": "PatchCalendarEventOccurrence",
        "type": "object"
      },
      "PatchDestination": {
        "description": "Destinations",
        "example": {
          "accessingEntityId": "06300e93-950a-11e8-ac63-0242ac140002",
          "destinationName": "California State HIE",
          "integrationDestinationType": "ADT",
          "isConsentRequired": true
        },
        "properties": {
          "accessingEntityId": {
            "description": "PointClickCare's unique identifier for an external organization with a signed data sharing agreement. </br></br>Note: Currently limited to hospitals participating in data exchange with PointClickCare.",
            "type": "string"
          },
          "destinationName": {
            "description": "Represents the full display name of the destination. PointClickCare application shows the display name of the destination to users when activating a new HIE or Health System. Maximum allowed characters are 200.",
            "type": "string"
          },
          "integrationDestinationType": {
            "description": "The Integration Destination type of either ADT or CCD.<br />ADT: Integration engine sending admission, discharge, and transfer messages.<br />CCD: Residents clinical continuity documents.",
            "type": "string"
          },
          "isConsentRequired": {
            "description": "Represents if the Health Information Exchange requires PointClickCare facility to collect consent. If set to 'true', the consent is required to be collected from residents.",
            "type": "boolean"
          }
        },
        "title": "PatchDestination",
        "type": "object"
      },
      "PatchStrikeOutProgressNotesAndEncounterNotes": {
        "example": {
          "providerName": "John Doe"
        },
        "properties": {
          "providerName": {
            "description": "Name of the Provider who provided the service.",
            "type": "string"
          }
        },
        "required": [
          "providerName"
        ],
        "title": "PatchStrikeOutProgressNotesAndEncounterNotes",
        "type": "object"
      },
      "Patient": {
        "description": "Patient information.",
        "example": {
          "admissionDate": "2005-12-06",
          "admissionDateTime": "2005-12-06T05:00:00.000Z",
          "bedDesc": "A",
          "bedId": 201,
          "birthDate": "1919-05-03",
          "birthPlace": "Denver",
          "cellPhone": "(453) 112-8492",
          "citizenship": "U.S.",
          "deathDateTime": "2010-01-30T05:00:00.000Z",
          "deceased": true,
          "dischargeDate": "2010-01-30",
          "dischargeDateTime": "2010-01-30T05:00:00.000Z",
          "email": "jadr@haddo.eu",
          "ethnicityDesc": "Black, not of Hispanic origin",
          "facId": 1,
          "firstName": "James",
          "floorDesc": "2nd",
          "floorId": 3,
          "gender": "MALE",
          "hasPhoto": false,
          "homePhone": "(475) 529-8541",
          "isOnLeave": false,
          "languageCode": "en",
          "languageDesc": "English",
          "lastName": "Bond",
          "maritalStatus": "Widowed",
          "medicaidNumber": "SCRUBBED_50582",
          "medicalRecordNumber": "ALC3442",
          "medicareBeneficiaryIdentifier": "1254778",
          "medicareNumber": "581185786V",
          "occupation": "Farmer",
          "ompId": 100401,
          "orgUuid": "1750abe8-1b7c-4e26-969c-9d7076ff8c02",
          "outpatient": false,
          "patientExternalId": "1",
          "patientId": 1,
          "patientStatus": "Discharged",
          "preferredName": "James",
          "prefix": "Mr.",
          "previousAddress": {
            "addressLine1": "565 Stratton Building",
            "addressLine2": "696 Roderick Avenue",
            "city": "ATLANTA",
            "country": "U.S.",
            "county": "Dekalb",
            "postalCode": "30306",
            "state": "GA"
          },
          "religion": "Protestant",
          "roomDesc": "225",
          "roomId": 211,
          "smokingStatusCode": "449868002",
          "smokingStatusDesc": "Current every day smoker",
          "socialBeneficiaryIdentifier": "000-456-454",
          "suffix": "Jr.",
          "unitDesc": "ICF Left",
          "unitId": 789,
          "waitingList": false
        },
        "properties": {
          "admissionDate": {
            "description": "The date the patient was admitted. The date format is YYYY-MM-DD.",
            "format": "date",
            "type": "string"
          },
          "admissionDateTime": {
            "description": "The date and time the patient was admitted. The date time format is YYYY-MM-DDTHH:MM:SS.sssZ.",
            "format": "date-time",
            "type": "string"
          },
          "bedDesc": {
            "description": "The patient's current bed details.",
            "type": "string"
          },
          "bedId": {
            "description": "PointClickCare's unique identifier for a bed within a facility.",
            "format": "int32",
            "type": "integer"
          },
          "birthDate": {
            "description": "Date representing the patient's birth date. The date format is YYYY-MM-DD.",
            "format": "date-time",
            "type": "string"
          },
          "birthPlace": {
            "description": "Represents the birth place of a patient.",
            "type": "string"
          },
          "canadianHCN": {
            "description": "For transactions in the province of Ontario, Canada only. 10-digit unique number assigned to an individual by the province of Ontario when they are enrolled in the provincial insurance model (OHIP).",
            "$ref": "#/components/schemas/CodeableConcept"
          },
          "citizenship": {
            "description": "Represents the citizenship of a patient. The values that a facility can choose for a patient's citizenship are configurable at a facility level in PointClickCare.",
            "type": "string"
          },
          "deathDateTime": {
            "description": "Represents the date and time when the patient was deceased. This field will only be available if a patient is deceased.",
            "format": "date-time",
            "type": "string"
          },
          "deceased": {
            "description": "Represents if a patient is deceased. Possible values are 'true' or 'false'.",
            "type": "boolean"
          },
          "dischargeDate": {
            "description": "The date the patient was discharged. The date format is YYYY-MM-DD.",
            "format": "date",
            "type": "string"
          },
          "dischargeDateTime": {
            "description": "The date and time the patient was discharged. The date time format is YYYY-MM-DDTHH:MM:SS.sssZ.",
            "format": "date-time",
            "type": "string"
          },
          "ethnicityDesc": {
            "description": "Represents the patient's ethnicity. The values that a facility can choose for a patient's ethnicity are configurable at a facility level in PointClickCare.",
            "type": "string"
          },
          "facId": {
            "description": "PointClickCare's unique identifier for a facility within the organization.",
            "format": "int32",
            "type": "integer"
          },
          "firstName": {
            "description": "The patient's first name.",
            "type": "string"
          },
          "floorDesc": {
            "description": "The patient's current floor details.",
            "type": "string"
          },
          "floorId": {
            "description": "PointClickCare's unique identifier for a floor within a facility.",
            "format": "int32",
            "type": "integer"
          },
          "gender": {
            "description": "The patient's gender. Possible responses are 'MALE', 'FEMALE' or 'UNKNOWN'.",
            "enum": [
              "MALE",
              "FEMALE",
              "UNKNOWN"
            ],
            "type": "string"
          },
          "hasPhoto": {
            "description": "Represents whether the patient has a photo or not. Possible values are 'true' or 'false'.",
            "type": "boolean"
          },
          "isOnLeave": {
            "description": "Represents if a patient is on a leave of absence from the facility. Possible values are 'true' or 'false'.",
            "type": "boolean"
          },
          "languageCode": {
            "description": "Represents the ISO 639-1 language code for the patient's primary language, if available.",
            "type": "string"
          },
          "languageDesc": {
            "description": "Represents the primary language of the patient.",
            "type": "string"
          },
          "lastName": {
            "description": "The patient's last name.",
            "type": "string"
          },
          "maritalStatus": {
            "description": "Represents the marital status of a patient. The values that a facility can choose for a patient's marital status are configurable at a facility level in PointClickCare.",
            "type": "string"
          },
          "medicaidNumber": {
            "description": "The Medicaid number for the patient. This field is applicable for US facilities only.",
            "type": "string"
          },
          "medicalRecordNumber": {
            "description": "The patient's medical record number, if available.",
            "type": "string"
          },
          "medicareBeneficiaryIdentifier": {
            "description": "Represents the Medicare Beneficiary Identifier for the patient. Medicare Beneficiary Identifier (MBI) replaces the SSN-based Medicare Number. PointClickCare facilities have the capability to record Medicare Beneficiary Identifier for patients and will maintain the capability to record Medicare number as well through December 31, 2019.  Starting January 1, 2020, the facilities will be strictly required to record Medicare Beneficiary Identifier only. During this time, if a Medicare Beneficiary Identifier has been recorded for a patient, the API will ONLY return this field. If a Medicare Beneficiary Identifier has not been recorded for a patient and only the older Medicare number has been recorded, then it will be returned in the <i>medicareNumber</i> field. There will never be a case when both <i>medicareNumber</i> and <i>medicareBeneficiaryIdentifier</i> fields will be returned in the API response. This field is applicable for US facilities only. SSN is not returned by default, please create a developer support ticket to request this",
            "type": "string"
          },
          "medicareNumber": {
            "description": "The Medicare number for the patient. This field is applicable for US facilities only.",
            "type": "string"
          },
          "middleName": {
            "description": "The patient's middle name.",
            "type": "string"
          },
          "occupation": {
            "description": "Represents the occupation of a patient.",
            "type": "string"
          },
          "ompId": {
            "description": "A system generated identifier assigned to a resident in a multi-facility organization to uniquely identify a resident across facilities within an organization.",
            "format": "int32",
            "type": "integer"
          },
          "orgUuid": {
            "description": "PointClickCare's unique identifier for the organization.",
            "type": "string"
          },
          "outpatient": {
            "description": "Represents whether if the patient is an outpatient. Possible responses are 'true' or 'false'.",
            "type": "boolean"
          },
          "patientExternalId": {
            "description": "Another unique identifier for a patient that can be used if the internal patientId is not desired.",
            "type": "string"
          },
          "patientId": {
            "description": "PointClickCare's unique identifier for a patient within the organization.</br></br>When a patient is admitted to a facility within an organization, they are assigned a patientId which is unique to their stay within that facility. If the same patient were to get admitted to another facility within the same organization in the future, they would be assigned a new patientId. The patientId however is unique at the organization level. That is, no two patients across different facilities within the organization will have the same patientId.",
            "format": "int32",
            "type": "integer"
          },
          "patientStatus": {
            "description": "The patient's status within the facility. If the patient has not been admitted and has not been discharged then the patient's status is returned as \"New\". If the patient has been admitted and has not yet been discharged, then the patient's status is returned as \"Current\". If the patient has been discharged then the patient's status is returned as \"Discharged\". Note: This reflects the patient's most recent status only. For example, if the same patient had previously been admitted and later discharged, and currently has come to the facility again, the patient's status will be New and then Current once admitted.",
            "type": "string"
          },
          "preferredName": {
            "description": "The preferred name for the patient, if available.",
            "type": "string"
          },
          "prefix": {
            "description": "The name prefix for the patient.",
            "type": "string"
          },
          "previousAddress": {
            "$ref": "#/components/schemas/PatientAddress"
          },
          "religion": {
            "description": "Represents the religion of a patient. The values that a facility can choose for a patient's religion are configurable at a facility level in PointClickCare.",
            "type": "string"
          },
          "roomDesc": {
            "description": "The patient's current room details.",
            "type": "string"
          },
          "roomId": {
            "description": "PointClickCare's unique identifier for a room within a facility.",
            "format": "int32",
            "type": "integer"
          },
          "suffix": {
            "description": "The name suffix for the patient.",
            "type": "string"
          },
          "unitDesc": {
            "description": "The patient's current unit details.",
            "type": "string"
          },
          "unitId": {
            "description": "PointClickCare's unique identifier for a unit within a facility.",
            "format": "int32",
            "type": "integer"
          },
          "waitingList": {
            "description": "Represents whether if the patient is on a waiting list. Possible responses are 'true' or 'false'.",
            "type": "boolean"
          }
        },
        "title": "Patient",
        "type": "object"
      },
      "PatientAddress": {
        "description": "Represents the previous mailing address of a patient.",
        "example": {
          "addressLine1": "433 Waldgrave Building",
          "addressLine2": "369 Morgan Building",
          "city": "Phoenix",
          "country": "United States",
          "county": "Maricopa",
          "postalCode": "85004",
          "state": "AZ"
        },
        "properties": {
          "addressLine1": {
            "description": "Street address for the patient's previous mailing address.",
            "type": "string"
          },
          "addressLine2": {
            "description": "Additional address information for patient's previous mailing address.",
            "type": "string"
          },
          "city": {
            "description": "City for the patient's previous mailing address.",
            "type": "string"
          },
          "country": {
            "description": "Country for the patient's previous mailing address.",
            "type": "string"
          },
          "county": {
            "description": "County for the patient's previous mailing address.",
            "type": "string"
          },
          "postalCode": {
            "description": "Postal Code for the patient's previous mailing address.",
            "type": "string"
          },
          "state": {
            "description": "State/Province for the patient's previous mailing address.",
            "type": "string"
          }
        },
        "title": "PatientAddress",
        "type": "object"
      },
      "PatientLegalMailingAddress": {
        "description": "Represents the legal mailing address of a patient.",
        "example": {
          "addressLine1": "433 Waldgrave Building",
          "addressLine2": "369 Morgan Building",
          "city": "Phoenix",
          "country": "United States",
          "county": "Maricopa",
          "postalCode": "85004",
          "state": "AZ"
        },
        "properties": {
          "addressLine1": {
            "description": "Street address for the patient's legal mailing address.",
            "type": "string"
          },
          "addressLine2": {
            "description": "Additional address information for patient's legal mailing address.",
            "type": "string"
          },
          "city": {
            "description": "City for the patient's legal mailing address.",
            "type": "string"
          },
          "country": {
            "description": "Country for the patient's legal mailing address.",
            "type": "string"
          },
          "county": {
            "description": "County for the patient's legal mailing address.",
            "type": "string"
          },
          "postalCode": {
            "description": "Postal Code for the patient's legal mailing address.",
            "type": "string"
          },
          "state": {
            "description": "State/Province for the patient's legal mailing address.",
            "type": "string"
          }
        },
        "title": "PatientLegalMailingAddress",
        "type": "object"
      },
      "PatientCarePlan": {
        "description": "Details of the default care plan used for a patient.",
        "example": {
          "applicableToCareGivers": true,
          "id": -52,
          "type": "CARE_PLAN"
        },
        "properties": {
          "applicableToCareGivers": {
            "description": "Determines whether the resident care plan is applicable to care givers.",
            "type": "boolean"
          },
          "id": {
            "description": "PointClickCare's unique identifier for the care plan within the organization. If type is ASSESSMENT, this respresents the templateAssessId.",
            "format": "int32",
            "type": "integer"
          },
          "type": {
            "description": "The type of care plan that is applicable: CARE_PLAN (i.e., the default care plan), ASSESSMENT (i.e., an assessment-driven care plan).",
            "type": "string"
          }
        },
        "title": "PatientCarePlan",
        "type": "object"
      },
      "PatientContact": {
        "description": "",
        "example": {
          "addressLine1": "433 Waldgrave Building",
          "addressLine2": "690 Dixie Street",
          "addressLine3": "856 Heaton Lane",
          "cellPhone": "(404) 555-9658",
          "city": "Phoenix",
          "comments": "Comments about this patient contact.",
          "contactId": 159279,
          "contactType": [
            "A/R Guarantor",
            "Alternate Contact"
          ],
          "country": "United States",
          "county": "Maricopa",
          "email": "mayme.ali@msn.com",
          "birthDate": "1968-11-04",
          "firstName": "Mayme",
          "gender": "MALE",
          "homePhone": "(678) 555-8675",
          "isSurveyContact": true,
          "lastName": "Ali",
          "namePrefix": "Dr.",
          "postalCode": "85004",
          "relationship": "Son",
          "state": "AZ"
        },
        "properties": {
          "addressLine1": {
            "description": "Street address for the patient's contact, if available.",
            "type": "string"
          },
          "addressLine2": {
            "description": "Additional address information for the patient's contact, if available.",
            "type": "string"
          },
          "addressLine3": {
            "description": "Further address information for the patient's contact, if available.",
            "type": "string"
          },
          "cellPhone": {
            "description": "Cell phone number for the patient's contact, if available.",
            "type": "string"
          },
          "city": {
            "description": "City for the patient's contact, if available.",
            "type": "string"
          },
          "comments": {
            "description": "Represents the patient contact comments entered for this patient contact.",
            "type": "string"
          },
          "contactId": {
            "description": "Unique identifier for the patient's contact.",
            "format": "int32",
            "type": "integer"
          },
          "contactNumber": {
            "description": "User facing, unique numerical identifier for the patient's contact.",
            "type": "string"
          },
          "contactType": {
            "description": "An array of contact types (for e.g. next of kin, guarantor). The values that a facility can choose for contact types are configurable at a facility level.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "country": {
            "description": "Country for the patient's contact, if available.",
            "type": "string"
          },
          "county": {
            "description": "County for the patient's contact, if available.",
            "type": "string"
          },
          "email": {
            "description": "Email address for the patient's contact, if available.",
            "type": "string"
          },
          "birthDate": {
            "description": "Date of birth for the patient's contact, if available.",
            "format": "date",
            "type": "string"
          },
          "firstName": {
            "description": "Patient's contact's first name.",
            "type": "string"
          },
          "gender": {
            "description": "Patient's contact's gender. Possible values are Male, Female or Unknown.",
            "enum": [
              "MALE",
              "FEMALE",
              "UNKNOWN"
            ],
            "type": "string"
          },
          "homePhone": {
            "description": "Home phone number for the patient's contact, if available.",
            "type": "string"
          },
          "isGuarantor": {
            "description": "Represents if the patient's contact is a guarantor or not. Possible values are 'true' or 'false'. PointClickCare allows multiple contacts to be selected as guarantors for a patient.",
            "type": "boolean"
          },
          "isSurveyContact": {
            "description": "Indicates whether the Contact is configured as the party to receive Surveys from the Facility. The values that a facility can choose for Surveys are configurable at a facility level.",
            "type": "boolean"
          },
          "lastName": {
            "description": "Patient's contact's last name.",
            "type": "string"
          },
          "namePrefix": {
            "description": "Prefix for the patient's contact, if available.",
            "type": "string"
          },
          "officePhone": {
            "description": "Office phone number for the patient's contact, if available.",
            "type": "string"
          },
          "postalCode": {
            "description": "Postal code for the patient's contact, if available.",
            "type": "string"
          },
          "relationship": {
            "description": "Relationship to the patient.",
            "type": "string"
          },
          "state": {
            "description": "Province or state for the patient's contact, if available.",
            "type": "string"
          }
        },
        "title": "PatientContact",
        "type": "object"
      },
      "PatientContactDetails": {
        "description": "patient's contacts.",
        "example": {
          "addressLine1": "690 Dixie Street",
          "cellPhone": "(404) 555-9658",
          "city": "Phoenix",
          "contactId": 68930,
          "contactNumber": 123456,
          "country": "United States",
          "county": "Maricopa",
          "email": "mayme.ali@msn.com",
          "birthDate": "1968-11-04",
          "firstName": "Mayme",
          "gender": "MALE",
          "guarantor": true,
          "homePhone": "(678) 555-8675",
          "lastName": "Ali",
          "namePrefix": "Dr.",
          "postalCode": "85004",
          "relationship": "Son",
          "state": "AZ",
          "type": [
            {
              "contactType": "A/R Guarantor",
              "isSurveyContact": false,
              "standardContactType": "Agent"
            }
          ]
        },
        "properties": {
          "addressLine1": {
            "description": "Street address for the patient's contact, if available.",
            "type": "string"
          },
          "addressLine2": {
            "description": "Additional address information for the patient's contact, if available.",
            "type": "string"
          },
          "addressLine3": {
            "description": "Further address information for the patient's contact, if available.",
            "type": "string"
          },
          "cellPhone": {
            "description": "Cell phone number for the patient's contact, if available.",
            "type": "string"
          },
          "city": {
            "description": "City for the patient's contact, if available.",
            "type": "string"
          },
          "contactId": {
            "description": "Unique identifier for the patient's contact.",
            "format": "int32",
            "type": "integer"
          },
          "contactNumber": {
            "description": "User facing, unique numerical identifier for the patient's contact.",
            "type": "string"
          },
          "country": {
            "description": "Country for the patient's contact, if available.",
            "type": "string"
          },
          "county": {
            "description": "County for the patient's contact, if available.",
            "type": "string"
          },
          "email": {
            "description": "Email address for the patient's contact, if available.",
            "type": "string"
          },
          "birthDate": {
            "description": "Date of birth for the patient's contact, if available.",
            "format": "date",
            "type": "string"
          },
          "faxNumber": {
            "description": "Fax number for the patient's contact, if available.",
            "type": "string"
          },
          "firstName": {
            "description": "Patient's contact's first name.",
            "type": "string"
          },
          "gender": {
            "description": "Patient's contact's gender. Possible values are Male, Female or Unknown.",
            "enum": [
              "MALE",
              "FEMALE",
              "UNKNOWN"
            ],
            "type": "string"
          },
          "guarantor": {
            "description": "Represents if the patient's contact is a guarantor or not. Possible values are 'true' or 'false'. PointClickCare allows multiple contacts to be selected as guarantors for a patient.",
            "type": "boolean"
          },
          "homePhone": {
            "description": "Home phone number for the patient's contact, if available.",
            "type": "string"
          },
          "lastName": {
            "description": "Patient's contact's last name.",
            "type": "string"
          },
          "namePrefix": {
            "description": "Prefix for the patient's contact, if available.",
            "type": "string"
          },
          "officePhone": {
            "description": "Business phone number for the patient's contact, if available.",
            "type": "string"
          },
          "postalCode": {
            "description": "Postal code for the patient's contact, if available.",
            "type": "string"
          },
          "relationship": {
            "description": "Relationship to the patient.",
            "type": "string"
          },
          "state": {
            "description": "Province or state for the patient's contact, if available.",
            "type": "string"
          },
          "type": {
            "description": "Array of contact types assigned to the contact in PointClickCare.",
            "items": {
              "$ref": "#/components/schemas/PatientContactType"
            },
            "type": "array"
          }
        },
        "title": "PatientContactDetails",
        "type": "object"
      },
      "PatientContactDetailsList": {
        "description": "List of contacts.",
        "example": {
          "data": [
            {
              "addressLine1": "690 Dixie Street",
              "addressLine2": "357 Scarborough Lane",
              "addressLine3": "856 Heaton Lane",
              "cellPhone": "(404) 555-9658",
              "city": "Phoenix",
              "contactId": 68930,
              "contactNumber": 123456,
              "country": "United States",
              "county": "Maricopa",
              "email": "mayme.ali@msn.com",
              "birthDate": "1968-11-04",
              "faxNumber": "(678) 555-8585",
              "firstName": "Mayme",
              "gender": "MALE",
              "guarantor": true,
              "homePhone": "(678) 555-8675",
              "lastName": "Ali",
              "namePrefix": "Dr.",
              "officePhone": "(678) 555-8868",
              "postalCode": "85004",
              "relationship": "Son",
              "state": "AZ",
              "type": [
                {
                  "contactType": "A/R Guarantor",
                  "isSurveyContact": false,
                  "standardContactType": "Agent"
                }
              ]
            },
            {
              "addressLine1": "4890 James Watson Street",
              "cellPhone": "(404) 555-5842",
              "city": "New Orleans",
              "contactId": 68931,
              "contactNumber": 789012,
              "country": "United States",
              "county": "Maricopa",
              "email": "wadiya.broker@msn.com",
              "birthDate": "1974-10-06",
              "firstName": "Wadiya",
              "gender": "MALE",
              "guarantor": false,
              "homePhone": "(678) 555-1278",
              "lastName": "Brokder",
              "namePrefix": "Dr.",
              "officePhone": "(678) 555-2532",
              "postalCode": "52588",
              "relationship": "Friend",
              "state": "LA",
              "type": [
                {
                  "contactType": "A/R Guarantor",
                  "isSurveyContact": false,
                  "standardContactType": "Agent"
                },
                {
                  "contactType": "Emergency Contact # 1",
                  "isSurveyContact": true,
                  "standardContactType": "Emergency Contact"
                }
              ]
            }
          ],
          "paging": {
            "hasMore": true,
            "page": 1,
            "pageSize": 2
          }
        },
        "properties": {
          "data": {
            "description": "List of patient's contacts.",
            "items": {
              "$ref": "#/components/schemas/PatientContactDetails"
            },
            "type": "array"
          },
          "paging": {
            "$ref": "#/components/schemas/PagingResponseByPage"
          }
        },
        "title": "PatientContactDetailsList",
        "type": "object"
      },
      "PatientContactType": {
        "description": "",
        "example": {
          "contactType": "Care Conference Person",
          "isSurveyContact": true,
          "standardContactType": "Agent"
        },
        "properties": {
          "contactType": {
            "description": "Contact type (for e.g. next of kin, guarantor) of the contact. The values that a facility can choose for contact types are configurable at a facility level.",
            "type": "string"
          },
          "isSurveyContact": {
            "description": "Indicates whether the Contact is configured as the party to receive Surveys from the Facility. The values that a facility can choose for Surveys are configurable at a facility level.",
            "type": "boolean"
          },
          "standardContactType": {
            "description": "Represents the standard contact type associated to the contact type. PointClickCare allows facilities to define custom contact types that they can assign to a patient's contacts. Each custom contact type is mapped to a standard contact type. Possible values for this field are:<ul><li>Agent</li><li>Caregiver</li><li>Emergency Contact</li><li>Guardian</li><li>Next of kin</li><li>Personal</li></ul>",
            "type": "string"
          }
        },
        "title": "PatientContactType",
        "type": "object"
      },
      "PatientDemographic": {
        "description": "Patient Demographic information.",
        "example": {
          "birthDate": "1919-05-03",
          "cellPhone": "(437) 994-1231",
          "desiredBooking": {
            "dateRequested": "2018-05-03",
            "desiredLocation": 1,
            "desiredMoveDate": "2018-06-03"
          },
          "firstName": "James",
          "gender": "MALE",
          "homePhone": "(475) 529-8541",
          "languageDesc": "English",
          "lastName": "Bond",
          "maritalStatus": "Widowed",
          "medicaidNumber": "SCRUBBED_50582",
          "medicareBeneficiaryIdentifier": "1254778",
          "medicareNumber": "581185786V",
          "middleName": "Richard",
          "patientRaces": [
            {
              "raceDesc": "White, Irish origin"
            },
            {
              "raceDesc": "Brown, Egyptian origin"
            },
            {
              "raceDesc": "Black, not of Hispanic origin"
            }
          ],
          "prefix": "Mr.",
          "previousAddress": {
            "addressLine1": "565 Stratton Building",
            "addressLine2": "696 Roderick Avenue",
            "city": "ATLANTA",
            "country": "United States",
            "county": "Dekalb",
            "postalCode": "30306",
            "state": "GA"
          },
          "religion": "Protestant",
          "socialBeneficiaryIdentifier": "000-456-454",
          "suffix": "Jr."
        },
        "properties": {
          "admissionDateTime": {
            "description": "The date and time the patient was admitted. The date time format is YYYY-MM-DDTHH:MM:SS.sssZ.",
            "format": "date-time",
            "type": "string"
          },
          "birthDate": {
            "description": "Date representing the patient's birth date. The date format is YYYY-MM-DD.",
            "format": "date",
            "type": "string"
          },
          "cellPhone": {
            "description": "Represents the mobile phone number of the patient.",
            "type": "string"
          },
          "desiredBooking": {
            "$ref": "#/components/schemas/DesiredBooking"
          },
          "firstName": {
            "description": "The patient's first name.",
            "type": "string"
          },
          "gender": {
            "description": "The patient's gender. Possible responses are 'MALE', 'FEMALE' or 'UNKNOWN'.",
            "enum": [
              "MALE",
              "FEMALE",
              "UNKNOWN"
            ],
            "type": "string"
          },
          "healthCardNumber": {
            "description": "Represents the patient's health card number. This field is available for Canadian facilities ONLY. Spaces, hyphens (\"-\") and dots (\".\") may be present as separators. Maximum 30 characters.",
            "type": "string"
          },
          "homePhone": {
            "description": "Represents the home phone number of the patient.",
            "type": "string"
          },
          "languageDesc": {
            "description": "Represents the primary language of the patient.",
            "type": "string"
          },
          "lastName": {
            "description": "The patient's last name.",
            "type": "string"
          },
          "maritalStatus": {
            "description": "Represents the marital status of a patient. The values that a facility can choose for a patient's marital status are configurable at a facility level in PointClickCare.",
            "type": "string"
          },
          "medicaidNumber": {
            "description": "The Medicaid number for the patient. This field is applicable for US facilities only.",
            "type": "string"
          },
          "medicareBeneficiaryIdentifier": {
            "description": "Represents the Medicare Beneficiary Identifier for the patient. Medicare Beneficiary Identifier (MBI) replaces the SSN-based Medicare Number. PointClickCare facilities have the capability to record Medicare Beneficiary Identifier for patients and will maintain the capability to record Medicare number as well through December 31, 2019.  Starting January 1, 2020, the facilities will be strictly required to record Medicare Beneficiary Identifier only. During this time, if a Medicare Beneficiary Identifier has been recorded for a patient, the API will ONLY return this field. If a Medicare Beneficiary Identifier has not been recorded for a patient and only the older Medicare number has been recorded, then it will be returned in the <i>medicareNumber</i> field. There will never be a case when both <i>medicareNumber</i> and <i>medicareBeneficiaryIdentifier</i> fields will be returned in the API response. This field is applicable for US facilities only.",
            "type": "string"
          },
          "medicareNumber": {
            "description": "The Medicare number for the patient. This field is applicable for US facilities only.",
            "type": "string"
          },
          "middleName": {
            "description": "The patient's middle name.",
            "type": "string"
          },
          "orgUuid": {
            "description": "PointClickCare's unique identifier for the organization.",
            "type": "string"
          },
          "patientRaces": {
            "description": "An array of the patient's races.",
            "items": {
              "$ref": "#/components/schemas/PatientRace"
            },
            "type": "array"
          },
          "prefix": {
            "description": "The name prefix for the patient.",
            "type": "string"
          },
          "previousAddress": {
            "$ref": "#/components/schemas/PatientAddress"
          },
          "religion": {
            "description": "Represents the religion of a patient. The values that a facility can choose for a patient's religion are configurable at a facility level in PointClickCare.",
            "type": "string"
          },
          "socialBeneficiaryIdentifier": {
            "description": "The patient's Social Security Number (SSN) for US facilities or Social Insurance Number (SIN) for Canadian facilities. PointClickCare allows facilities to define their own format for the resident identifiers. Facilities can only use spaces, hyphens (\"-\") and dots (\".\") as separators. The value returned in the response includes the separators. SSN is not returned by default for production apps. Please contact your Partnership Manager and submit a business use case to request this.",
            "type": "string"
          },
          "specialInstructions": {
            "description": "Any special instructions available for the patient.",
            "type": "string"
          },
          "suffix": {
            "description": "The name suffix for the patient.",
            "type": "string"
          }
        },
        "title": "PatientDemographic",
        "type": "object"
      },
      "PatientDetails": {
        "description": "Patient Information",
        "example": {
          "admissionDate": "2005-12-06",
          "admissionDateTime": "2005-12-06T10:15:00.000Z",
          "bedDesc": "A",
          "bedId": 201,
          "birthDate": "1919-05-03",
          "birthPlace": "Denver",
          "canadianHCN": {
            "coding": [
              {
                "system": "https://fhir.infoway-inforoute.ca/NamingSystem/ca-on-patient-hcn",
                "code": 3243982726
              }
            ]
          },
          "cellPhone": "(437) 998-1231",
          "citizenship": "U.S.",
          "createdBy": "PCC-bhojaa",
          "createdDate": "2003-10-08T04:00:00.000Z",
          "deathDateTime": "2010-01-30T05:00:00.000Z",
          "deceased": true,
          "desiredBooking": {
            "dateRequested": "2018-05-03",
            "desiredLocation": 1,
            "desiredMoveDate": "2018-06-03"
          },
          "dischargeDate": "2010-01-30",
          "dischargeDateTime": "2010-01-30T05:00:00.000Z",
          "email": "jadr@haddo.eu",
          "ethnicityDesc": "Black, not of Hispanic origin",
          "ethnicityCode": {
            "codings": [
              {
                "system": "http://snomed.info/sct",
                "version": "1",
                "code": "2186-5",
                "display": "Not Hispanic or Latino"
              }
            ]
          },
          "facId": 1,
          "firstName": "James",
          "floorDesc": "2nd",
          "floorId": 3,
          "gender": "MALE",
          "hasPhoto": false,
          "homePhone": "(475) 529-8541",
          "ituPhone": "(475) 529 8541",
          "languageCode": "en",
          "languageDesc": "English",
          "lastName": "Bond",
          "legalMailingAddress": {
            "addressLine1": "565 Stratton Building",
            "addressLine2": "696 Roderick Avenue",
            "city": "ATLANTA",
            "country": "U.S.",
            "county": "Dekalb",
            "postalCode": "30306",
            "state": "GA"
          },
          "maidenName": "Born",
          "maritalStatus": "Widowed",
          "medicaidNumber": "SCRUBBED_50582",
          "medicalRecordNumber": "ALC3442",
          "medicareBeneficiaryIdentifier": "1254778",
          "medicareNumber": "581185786V",
          "occupation": "Farmer",
          "ompId": 878885,
          "orgUuid": "1750abe8-1b7c-4e26-969c-9d7076ff8c02",
          "outpatient": false,
          "patientContacts": [
            {
              "addressLine1": "433 Waldgrave Building",
              "addressLine2": "690 Dixie Street",
              "addressLine3": "856 Heaton Lane",
              "cellPhone": "(404) 555-9658",
              "city": "Phoenix",
              "comments": "Comments about this patient contact.",
              "contactId": 159279,
              "contactNumber": 12356,
              "contactType": [
                "A/R Guarantor",
                "Alternate Contact"
              ],
              "country": "United States",
              "county": "Maricopa",
              "email": "mayme.ali@msn.com",
              "firstName": "Mayme",
              "gender": "MALE",
              "homePhone": "(678) 555-8675",
              "isSurveyContact": true,
              "lastName": "Ali",
              "namePrefix": "Dr.",
              "officePhone": "(678) 555-5555",
              "postalCode": "85004",
              "relationship": "Son",
              "state": "AZ"
            },
            {
              "addressLine1": "912 Simcoe Street",
              "cellPhone": "(404) 555-9658",
              "city": "Boston",
              "comments": "Comments about this patient contact.",
              "contactId": 223422,
              "contactNumber": 987654,
              "contactType": [
                "Next of kin"
              ],
              "country": "United States",
              "county": "Suffolk County",
              "firstName": "John",
              "gender": "MALE",
              "homePhone": "(678) 555-8675",
              "isSurveyContact": false,
              "lastName": "Smith",
              "namePrefix": "Mr.",
              "postalCode": "85009",
              "relationship": "Brother",
              "state": "MA"
            }
          ],
          "patientExternalId": "1",
          "patientId": 1,
          "patientRaces": [
            {
              "raceDesc": "White, Irish origin"
            },
            {
              "raceDesc": "Brown, Egyptian origin"
            },
            {
              "raceDesc": "Black, not of Hispanic origin"
            }
          ],
          "raceCode": {
            "codings": [
              {
                "system": "http://phinvads.cdc.gov",
                "version": "1",
                "code": "2054-5",
                "display": "Black or African American"
              },
              {
                "system": "http://phinvads.cdc.gov",
                "version": "1",
                "code": "2106-3",
                "display": "White"
              }
            ]
          },
          "patientStatus": "Discharged",
          "phoneNumberType": "home",
          "preferredName": "James",
          "prefix": "Mr.",
          "previousAddress": {
            "addressLine1": "565 Stratton Building",
            "addressLine2": "696 Roderick Avenue",
            "city": "ATLANTA",
            "country": "U.S.",
            "county": "Dekalb",
            "postalCode": "30306",
            "state": "GA"
          },
          "religion": "Protestant",
          "revisionBy": "PCC-bhojaa",
          "revisionDate": "2003-10-08T04:00:00.000Z",
          "roomDesc": "225",
          "roomId": 211,
          "smokingStatusCode": "449868002",
          "smokingStatusDesc": "Current every day smoker",
          "socialBeneficiaryIdentifier": "000-456-454",
          "suffix": "Jr.",
          "unitDesc": "ICF Left",
          "unitId": 789,
          "userDefinedFields": [
            {
              "name": "Admission Type",
              "description": "Long Term"
            },
            {
              "name": "Key Fob",
              "description": "IU3HS6JU"
            },
            {
              "name": "Meal Plan",
              "description": "mealPlan/1"
            }
          ],
          "waitingList": false
        },
        "properties": {
          "additionalBedDesc": {
            "description": "The patient's additional bed details.",
            "type": "string"
          },
          "additionalBedId": {
            "description": "PointClickCare's unique identifier for a bed within a facility.",
            "format": "int32",
            "type": "integer"
          },
          "additionalFloorDesc": {
            "description": "The patient's additional floor details.",
            "type": "string"
          },
          "additionalFloorId": {
            "description": "PointClickCare's unique identifier for a floor within a facility.",
            "format": "int32",
            "type": "integer"
          },
          "additionalRoomDesc": {
            "description": "The patient's additional room details.",
            "type": "string"
          },
          "additionalRoomId": {
            "description": "PointClickCare's unique identifier for a room within a facility.",
            "format": "int32",
            "type": "integer"
          },
          "additionalUnitDesc": {
            "description": "The patient's additional unit details.",
            "type": "string"
          },
          "additionalUnitId": {
            "description": "PointClickCare's unique identifier for a unit within a facility.",
            "format": "int32",
            "type": "integer"
          },
          "admissionDate": {
            "description": "The date the patient was admitted. The date format is YYYY-MM-DD.",
            "format": "date",
            "type": "string"
          },
          "admissionDateTime": {
            "description": "The date and time the patient was admitted. The date time format is YYYY-MM-DDTHH:MM:SS.sssZ.",
            "format": "date-time",
            "type": "string"
          },
          "bedDesc": {
            "description": "The patient's current bed details.",
            "type": "string"
          },
          "bedId": {
            "description": "PointClickCare's unique identifier for a bed within a facility.",
            "format": "int32",
            "type": "integer"
          },
          "birthDate": {
            "description": "Date representing the patient's birth date. The date format is YYYY-MM-DD.",
            "format": "date",
            "type": "string"
          },
          "birthPlace": {
            "description": "Represents the birth place of a patient.",
            "type": "string"
          },
          "canadianHCN": {
            "description": "For transactions in the province of Ontario, Canada only. 10-digit unique number assigned to an individual by the province of Ontario when they are enrolled in the provincial insurance model (OHIP).",
            "$ref": "#/components/schemas/CodeableConcept"
          },
          "cellPhone": {
            "description": "Represents the mobile phone number of the patient.",
            "type": "string"
          },
          "citizenship": {
            "description": "Represents the citizenship of a patient. The values that a facility can choose for a patient's citizenship are configurable at a facility level in PointClickCare.",
            "type": "string"
          },
          "createdBy": {
            "description": "The recorded client/user name who created the patient.",
            "type": "string"
          },
          "createdDate": {
            "description": "The recorded date the patient was created. The date and time are expressed in UTC in the following format YYYY-MM-DDTHH:MM:SS.sssZ.",
            "format": "date-time",
            "type": "string"
          },
          "deathDateTime": {
            "description": "Represents the date and time when the patient was deceased. This field will only be available if a patient is deceased.",
            "format": "date-time",
            "type": "string"
          },
          "deceased": {
            "description": "Represents if a patient is deceased. Possible values are 'true' or 'false'.",
            "type": "boolean"
          },
          "dischargeDate": {
            "description": "The date the patient was discharged. The date format is YYYY-MM-DD.",
            "format": "date",
            "type": "string"
          },
          "dischargeDateTime": {
            "description": "The date and time the patient was discharged. The date time format is YYYY-MM-DDTHH:MM:SS.sssZ.",
            "format": "date-time",
            "type": "string"
          },
          "email": {
            "description": "Represents the email address for a patient, if available.",
            "type": "string"
          },
          "ethnicityDesc": {
            "description": "Represents the patient's ethnicity. The values that a facility can choose for a patient's ethnicity are configurable at a facility level in PointClickCare.",
            "type": "string"
          },
          "ethnicityCode": {
            "description": "Represents the applicable standard code of a patient's ethnicity.",
            "$ref": "#/components/schemas/SwitcherooCodeableConcept"
          },
          "facId": {
            "description": "PointClickCare's unique identifier for a facility within the organization.",
            "format": "int32",
            "type": "integer"
          },
          "firstName": {
            "description": "The patient's first name.",
            "type": "string"
          },
          "floorDesc": {
            "description": "The patient's current floor details.",
            "type": "string"
          },
          "floorId": {
            "description": "PointClickCare's unique identifier for a floor within a facility.",
            "format": "int32",
            "type": "integer"
          },
          "gender": {
            "description": "The patient's gender. Possible responses are 'MALE', 'FEMALE' or 'UNKNOWN'.",
            "enum": [
              "MALE",
              "FEMALE",
              "UNKNOWN"
            ],
            "type": "string"
          },
          "hasPhoto": {
            "description": "Represents whether the patient has a photo or not. Possible values are 'true' or 'false'.",
            "type": "boolean"
          },
          "homePhone": {
            "description": "Represents the home phone number of the patient.",
            "type": "string"
          },
          "isOnLeave": {
            "description": "Represents if a patient is on a leave of absence from the facility. Possible values are 'true' or 'false'.",
            "type": "boolean"
          },
          "ituPhone": {
            "description": "Represents the phone number of the patient in the standard <a href=\"https://www.itu.int/rec/T-REC-E.123-200102-I/en\" target=\"_blank\">ITU-T E.123</a>.",
            "type": "string"
          },
          "languageCode": {
            "description": "Represents the ISO 639-1 language code for the patient's primary language, if available.",
            "type": "string"
          },
          "languageDesc": {
            "description": "Represents the primary language of the patient.",
            "type": "string"
          },
          "lastName": {
            "description": "The patient's last name.",
            "type": "string"
          },
          "legalMailingAddress": {
            "$ref": "#/components/schemas/PatientLegalMailingAddress"
          },
          "maidenName": {
            "description": "The patient's maiden name.",
            "type": "string"
          },
          "maritalStatus": {
            "description": "Represents the marital status of a patient. The values that a facility can choose for a patient's marital status are configurable at a facility level in PointClickCare.",
            "type": "string"
          },
          "medicaidNumber": {
            "description": "The Medicaid number for the patient. This field is applicable for US facilities only.",
            "type": "string"
          },
          "medicalRecordNumber": {
            "description": "The patient's medical record number, if available.",
            "type": "string"
          },
          "medicareBeneficiaryIdentifier": {
            "description": "Represents the Medicare Beneficiary Identifier for the patient. Medicare Beneficiary Identifier (MBI) replaces the SSN-based Medicare Number. PointClickCare facilities have the capability to record Medicare Beneficiary Identifier for patients and will maintain the capability to record Medicare number as well through December 31, 2019.  Starting January 1, 2020, the facilities will be strictly required to record Medicare Beneficiary Identifier only. During this time, if a Medicare Beneficiary Identifier has been recorded for a patient, the API will ONLY return this field. If a Medicare Beneficiary Identifier has not been recorded for a patient and only the older Medicare number has been recorded, then it will be returned in the <i>medicareNumber</i> field. There will never be a case when both <i>medicareNumber</i> and <i>medicareBeneficiaryIdentifier</i> fields will be returned in the API response. This field is applicable for US facilities only.",
            "type": "string"
          },
          "medicareNumber": {
            "description": "The Medicare number for the patient. This field is applicable for US facilities only.",
            "type": "string"
          },
          "middleName": {
            "description": "The patient's middle name.",
            "type": "string"
          },
          "occupation": {
            "description": "Represents the occupation of a patient.",
            "type": "string"
          },
          "ompId": {
            "description": "A system generated identifier assigned to a resident in a multi-facility organization to uniquely identify a resident across facilities within an organization.",
            "format": "int32",
            "type": "integer"
          },
          "orgUuid": {
            "description": "PointClickCare's unique identifier for the organization.",
            "type": "string"
          },
          "outpatient": {
            "description": "Represents whether if the patient is an outpatient. Possible responses are 'true' or 'false'.",
            "type": "boolean"
          },
          "patientContacts": {
            "description": "An array of the patient's contacts.",
            "items": {
              "$ref": "#/components/schemas/PatientContact"
            },
            "type": "array"
          },
          "patientExternalId": {
            "description": "Another unique identifier for a patient that can be used if the internal patientId is not desired.",
            "type": "string"
          },
          "patientId": {
            "description": "PointClickCare's unique identifier for a patient within the organization.</br></br>When a patient is admitted to a facility within an organization, they are assigned a patientId which is unique to their stay within that facility. If the same patient were to get admitted to another facility within the same organization in the future, they would be assigned a new patientId. The patientId however is unique at the organization level. That is, no two patients across different facilities within the organization will have the same patientId.",
            "format": "int32",
            "type": "integer"
          },
          "patientRaces": {
            "description": "An array of the patient's races.",
            "items": {
              "$ref": "#/components/schemas/PatientRace"
            },
            "type": "array"
          },
          "patientStatus": {
            "description": "The patient's status within the facility. If the patient has not been admitted and has not been discharged then the patient's status is returned as \"New\". If the patient has been admitted and has not yet been discharged, then the patient's status is returned as \"Current\". If the patient has been discharged then the patient's status is returned as \"Discharged\". Note: This reflects the patient's most recent status only. For example, if the same patient had previously been admitted and later discharged, and currently has come to the facility again, the patient's status will be New and then Current once admitted.",
            "type": "string"
          },
          "phoneNumberType": {
            "description": "Represents the type of phone number for a patient. The default value is 'home'.",
            "type": "string"
          },
          "preferredName": {
            "description": "The preferred name for the patient, if available.",
            "type": "string"
          },
          "prefix": {
            "description": "The name prefix for the patient.",
            "type": "string"
          },
          "previousAddress": {
            "$ref": "#/components/schemas/PatientAddress"
          },
          "raceCode": {
            "$ref": "#/components/schemas/SwitcherooCodeableConcept"
          },
          "religion": {
            "description": "Represents the religion of a patient. The values that a facility can choose for a patient's religion are configurable at a facility level in PointClickCare.",
            "type": "string"
          },
          "revisionBy": {
            "description": "The recorded client/user name who last revised the patient record.",
            "type": "string"
          },
          "revisionDate": {
            "description": "The recorded date the patient record was last revised. The date and time are expressed in UTC in the following format YYYY-MM-DDTHH:MM:SS.sssZ.",
            "format": "date-time",
            "type": "string"
          },
          "roomDesc": {
            "description": "The patient's current room details.",
            "type": "string"
          },
          "roomId": {
            "description": "PointClickCare's unique identifier for a room within a facility.",
            "format": "int32",
            "type": "integer"
          },
          "smokingStatusCode": {
            "description": "Represents the SNOMED-CT code for the patient's smoking status.",
            "type": "string"
          },
          "smokingStatusDesc": {
            "description": "Represents the patient's smoking status.",
            "type": "string"
          },
          "socialBeneficiaryIdentifier": {
            "description": "The patient's Social Security Number (SSN) for US facilities or Social Insurance Number (SIN) for Canadian facilities. PointClickCare allows facilities to define their own format for the resident identifiers. Facilities can only use spaces, hyphens (\"-\") and dots (\".\") as separators. The value returned in the response includes the separators. SSN is not returned by default for production apps. Please contact your Partnership Manager and submit a business use case to request this.",
            "type": "string"
          },
          "specialInstructions": {
            "description": "Any special instructions available for the patient.",
            "type": "string"
          },
          "suffix": {
            "description": "The name suffix for the patient.",
            "type": "string"
          },
          "unitDesc": {
            "description": "The patient's current unit details.",
            "type": "string"
          },
          "unitId": {
            "description": "PointClickCare's unique identifier for a unit within a facility.",
            "format": "int32",
            "type": "integer"
          },
          "userDefinedFields": {
            "description": "An array of the patient's user defined fields. If query parameter includeOptionalFields=userDefinedFields is passed, the default value returned is for 'Admission Type' (if it has been defined by the customer). If a comma delimited list of fields is included in the query, the corresponding values will be returned in the response.",
            "items": {
              "$ref": "#/components/schemas/PatientUserDefinedField"
            },
            "type": "array"
          },
          "waitingList": {
            "description": "Represents whether if the patient is on a waiting list. Possible responses are 'true' or 'false'.",
            "type": "boolean"
          }
        },
        "title": "PatientDetails",
        "type": "object"
      },
      "PatientFilterExactMatchCriteria": {
        "description": "PatientMatch",
        "example": {
          "birthDate": "1968-11-29",
          "facId": 1,
          "firstName": "Mary",
          "gender": "FEMALE",
          "healthCardNumber": "HEALTH-0643070",
          "lastName": "Lewis",
          "medicaidNumber": "MEDIC-AID-001",
          "medicareNumber": "MEDIC-CARE-001",
          "socialBeneficiaryIdentifier": "000-22-3333"
        },
        "properties": {
          "birthDate": {
            "description": "The patient's date of birth. The format is YYYY-MM-DD.",
            "format": "date",
            "type": "string"
          },
          "facId": {
            "description": "PointClickCare's unique identifier for a facility within the organization.",
            "format": "int32",
            "minimum": 1,
            "type": "integer"
          },
          "firstName": {
            "description": "The patient's first name.",
            "type": "string"
          },
          "gender": {
            "description": "The patient's gender. Possible responses are 'MALE', 'FEMALE' or 'UNKNOWN'.",
            "type": "string"
          },
          "healthCardNumber": {
            "description": "Represents the patient's health card number. This field is available for Canadian facilities ONLY. Spaces, hyphens (\"-\") and dots (\".\") may be present as separators. Maximum 30 characters.",
            "type": "string"
          },
          "lastName": {
            "description": "The patient's last name.",
            "type": "string"
          },
          "medicaidNumber": {
            "description": "The patient's Medicaid Number. Only spaces, hyphens (\"-\") and dots (\".\") may be used as separators. Maximum 30 characters.",
            "type": "string"
          },
          "medicareNumber": {
            "description": "The patient's Medicare Number. Only spaces, hyphens (\"-\") and dots (\".\") may be used as separators. Maximum 30 characters.",
            "type": "string"
          },
          "socialBeneficiaryIdentifier": {
            "description": "The patient's Social Security Number (US facilities) or Social Insurance Number (Canadian facilities). The value provided will be validated if it is 9 digits. Only spaces, hyphens (\"-\") and dots (\".\") may be used as separators.",
            "type": "string"
          }
        },
        "required": [
          "birthDate",
          "facId",
          "gender",
          "firstName",
          "lastName"
        ],
        "title": "PatientFilterExactMatchCriteria",
        "type": "object"
      },
      "PatientList": {
        "description": "List of patients.",
        "example": {
          "data": [
            {
              "bedDesc": "A",
              "bedId": 201,
              "canadianHCN": {
                "coding": [
                  {
                    "system": "https://fhir.infoway-inforoute.ca/NamingSystem/ca-on-patient-hcn",
                    "code": 3243982726
                  }
                ]
              },
              "citizenship": "U.S.",
              "deceased": false,
              "ethnicityDesc": "White, Irish origin",
              "facId": 1,
              "firstName": "John",
              "floorDesc": "2nd",
              "floorId": 3,
              "gender": "MALE",
              "hasPhoto": false,
              "isOnLeave": true,
              "languageCode": "en",
              "languageDesc": "English",
              "lastName": "Doe",
              "maritalStatus": "Single",
              "medicaidNumber": "SCRUBBED_50582",
              "medicalRecordNumber": "0643070",
              "medicareBeneficiaryIdentifier": "1A2C3DE0GH89",
              "ompId": 100001,
              "orgUuid": "1750abe8-1b7c-4e26-969c-9d7076ff8c02",
              "outpatient": false,
              "patientExternalId": "222",
              "patientId": 478677,
              "patientStatus": "Current",
              "preferredName": "John",
              "prefix": "Mr.",
              "religion": "Baptist",
              "roomDesc": "225",
              "roomId": 228,
              "suffix": "Jr.",
              "unitDesc": "ICF Left",
              "unitId": 123,
              "waitingList": false
            },
            {
              "admissionDate": "2010-01-30",
              "admissionDateTime": "2010-01-30T05:00:00.000Z",
              "birthDate": "1921-05-03",
              "citizenship": "U.S.",
              "deathDateTime": "2012-04-20T04:00:00.000Z",
              "deceased": true,
              "dischargeDate": "2012-04-20",
              "dischargeDateTime": "2012-04-20T04:00:00.000Z",
              "ethnicityDesc": "Brown, Egyptian origin",
              "facId": 1,
              "firstName": "Jane",
              "gender": "MALE",
              "hasPhoto": true,
              "languageCode": "fr",
              "languageDesc": "French",
              "lastName": "Doe",
              "maritalStatus": "Married",
              "medicaidNumber": "SCRUBBED_50582",
              "medicalRecordNumber": "643019",
              "medicareNumber": "581185786V",
              "middleName": "M.",
              "ompId": 100002,
              "orgUuid": "2950abe8-1b7c-4e26-969c-9d7076ff8c03",
              "outpatient": false,
              "patientExternalId": "234",
              "patientId": 230181,
              "patientStatus": "Discharged",
              "preferredName": "Jane",
              "prefix": "Ms.",
              "religion": "Catholic",
              "suffix": "Jr.",
              "waitingList": false
            },
            {
              "admissionDate": "2006-01-30",
              "admissionDateTime": "2006-01-30T05:00:00.000Z",
              "bedDesc": "A",
              "bedId": 203,
              "birthDate": "1923-05-03",
              "citizenship": "U.S.",
              "deceased": false,
              "ethnicityDesc": "Black, not of Hispanic origin",
              "facId": 1,
              "firstName": "John",
              "floorDesc": "4th",
              "floorId": 11,
              "gender": "MALE",
              "hasPhoto": true,
              "languageCode": "es",
              "languageDesc": "Spanish",
              "lastName": "Smith",
              "maritalStatus": "Married",
              "medicaidNumber": "SCRUBBED_50582",
              "medicareBeneficiaryIdentifier": "5A2C3DE0GH88",
              "ompId": 100003,
              "orgUuid": "3950abe8-1b7c-4e36-969c-9d70763f8c03",
              "outpatient": false,
              "patientExternalId": "333",
              "patientId": 222,
              "patientStatus": "Current",
              "preferredName": "John",
              "prefix": "Mr.",
              "religion": "Presbyterian",
              "roomDesc": "316",
              "roomId": 371,
              "suffix": "Jr.",
              "unitDesc": "4 SOUTH",
              "unitId": 987,
              "waitingList": false
            }
          ],
          "paging": {
            "hasMore": false,
            "page": 1,
            "pageSize": 50
          }
        },
        "properties": {
          "data": {
            "description": "List of patient information.",
            "items": {
              "$ref": "#/components/schemas/Patient"
            },
            "type": "array"
          },
          "paging": {
            "$ref": "#/components/schemas/PagingResponseByPage"
          }
        },
        "title": "PatientList",
        "type": "object"
      },
      "PatientIncontinence": {
        "description": "Patient incontinence record.",
        "example": {
          "assessId": 314159,
          "sections": [
            {
              "sectionCode": "A",
              "sectionDescription": "Assessment Reference Date.",
              "questions": [
                {
                  "questionKey": "A2300",
                  "questionDescription": "Observation end date.",
                  "responses": {
                    "values": [
                      {
                        "dateValue": "2021-05-21"
                      }
                    ]
                  }
                }
              ]
            },
            {
              "sectionCode": "M",
              "sectionDescription": "Other Ulcers, Wounds, and Skin Problems",
              "questions": [
                {
                  "questionKey": "M1040H",
                  "questionDescription": "Moisture Associated Skin Damage (MASD)",
                  "responses": {
                    "values": [
                      {
                        "isChecked": true
                      }
                    ]
                  }
                }
              ]
            }
          ],
          "modifiedDateTime": "2023-01-18T13:39:03.000Z",
          "createdDateTime": "2023-01-18T13:37:41.000Z",
          "completedDateTime": "2023-01-18T13:40:07.000Z"
        },
        "properties": {
          "assessId": {
            "description": "Unique identifier for the MDS 3.0 record.",
            "type": "integer"
          },
          "sections": {
            "description": "List of MDS 3.0 section assessments locked by the user.",
            "type": "array",
            "items": {
              "properties": {
                "sectionCode": {
                  "type": "string",
                  "description": "The identification number associated with the selected section of the assessment."
                },
                "sectionDescription": {
                  "type": "string",
                  "description": "The identification description associated with the selected section of the assessment."
                },
                "questions": {
                  "type": "array",
                  "description": "List of specific questions for A, B, G, H, and M MDS 3.0 sections.",
                  "items": {
                    "properties": {
                      "questionKey": {
                        "type": "string",
                        "description": "The identification key associated with a question section."
                      },
                      "questionDescription": {
                        "type": "string",
                        "description": "The identification key description associated with a question section."
                      },
                      "responses": {
                        "type": "array",
                        "description": "List of different responses for a specific question.",
                        "items": {
                          "properties": {
                            "responseDescription": {
                              "type": "string",
                              "description": "The description of a response."
                            },
                            "responseCode": {
                              "type": "string",
                              "description": "The code identification associated with the response."
                            },
                            "values": {
                              "type": "array",
                              "description": "List of response values.",
                              "items": {
                                "properties": {
                                  "code": {
                                    "type": "string",
                                    "description": "The code used to identify the specific response for a question."
                                  },
                                  "codeDescription": {
                                    "type": "string",
                                    "description": "The description used for the code."
                                  },
                                  "codingType": {
                                    "type": "string",
                                    "description": "Different type of codes."
                                  },
                                  "isChecked": {
                                    "type": "boolean",
                                    "description": "Boolean value true or false to represent if the MDS question has been checked or not."
                                  },
                                  "dateValue": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "Represents the date entered in the MDS form."
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "modifiedDateTime": {
            "type": "string",
            "format": "date-time",
            "description": "Date when the MDS 3.0 assessment record was modified in UTC time. The expected date format is YYYY-MM-DDTHH:MM:SS.sssZ"
          },
          "createdDateTime": {
            "type": "string",
            "format": "date-time",
            "description": "Date when the MDS 3.0 assessment record was created in UTC time. The expected date format is YYYY-MM-DDTHH:MM:SS.sssZ"
          },
          "completedDateTime": {
            "type": "string",
            "format": "date-time",
            "description": "Date when the MDS 3.0 assessment record was completed in UTC time. The expected date format is YYYY-MM-DDTHH:MM:SS.sssZ"
          }
        },
        "title": "PatientIncontinence",
        "type": "object"
      },
      "PatientMatch": {
        "description": "patients matching the provided parameters.",
        "example": {
          "birthDate": "1968-11-29",
          "facId": 1,
          "firstName": "Mary",
          "gender": "FEMALE",
          "healthCardNumber": "HEALTH-0643070",
          "lastName": "Lewis",
          "medicaidNumber": "MEDIC-AID-001",
          "medicareNumber": "MEDIC-CARE-001",
          "middleName": "Middle",
          "patientId": 222,
          "socialBeneficiaryIdentifier": "000-22-3333"
        },
        "properties": {
          "birthDate": {
            "description": "The patient's date of birth. The format is YYYY-MM-DD.",
            "format": "date",
            "type": "string"
          },
          "facId": {
            "description": "PointClickCare's unique identifier for a facility within the organization.",
            "format": "int32",
            "type": "integer"
          },
          "firstName": {
            "description": "The patient's first name.",
            "type": "string"
          },
          "gender": {
            "description": "The patient's gender. Possible responses are 'MALE', 'FEMALE' or 'UNKNOWN'.",
            "type": "string"
          },
          "healthCardNumber": {
            "description": "Represents the patient's health card number. This field is available for Canadian facilities ONLY. Spaces, hyphens (\"-\") and dots (\".\") may be present as separators. Maximum 30 characters.",
            "type": "string"
          },
          "lastName": {
            "description": "The patient's last name.",
            "type": "string"
          },
          "medicaidNumber": {
            "description": "The patient's Medicaid Number. Only spaces, hyphens (\"-\") and dots (\".\") may be used as separators. Maximum 30 characters.",
            "type": "string"
          },
          "medicareNumber": {
            "description": "The patient's Medicare Number. Only spaces, hyphens (\"-\") and dots (\".\") may be used as separators. Maximum 30 characters.",
            "type": "string"
          },
          "middleName": {
            "description": "The patient's middle name.",
            "type": "string"
          },
          "patientId": {
            "description": "PointClickCare's unique identifier for a patient within the organization.</br></br>When a patient is admitted to a facility within an organization, they are assigned a patientId which is unique to their stay within that facility. If the same patient were to get admitted to another facility within the same organization in the future, they would be assigned a new patientId. The patientId however is unique at the organization level. That is, no two patients across different facilities within the organization will have the same patientId.",
            "format": "int32",
            "type": "integer"
          },
          "socialBeneficiaryIdentifier": {
            "description": "The patient's Social Security Number (US facilities) or Social Insurance Number (Canadian facilities). The value provided will be validated if it is 9 digits. Only spaces, hyphens (\"-\") and dots (\".\") may be used as separators.",
            "type": "string"
          }
        },
        "title": "PatientMatch",
        "type": "object"
      },
      "PatientMatchResponse": {
        "description": "Patient Matches",
        "example": {
          "data": [
            {
              "birthDate": "1968-11-29",
              "facId": 1,
              "firstName": "Mary",
              "gender": "FEMALE",
              "healthCardNumber": "HEALTH-0643070",
              "lastName": "Lewis",
              "medicaidNumber": "MEDIC-AID-001",
              "medicareNumber": "MEDIC-CARE-001",
              "middleName": "Middle",
              "patientId": 222,
              "socialBeneficiaryIdentifier": "000-22-3333"
            }
          ]
        },
        "properties": {
          "data": {
            "description": "List of patients matching the provided parameters.",
            "items": {
              "$ref": "#/components/schemas/PatientMatch"
            },
            "type": "array"
          }
        },
        "title": "PatientMatchResponse",
        "type": "object"
      },
      "PatientRace": {
        "description": "An array of the patient's races",
        "example": {
          "raceDesc": "Black, not of Hispanic origin"
        },
        "properties": {
          "raceDesc": {
            "description": "Represents the patient's race. The values that a facility can choose from are standardized to meet ONC guidelines.",
            "type": "string"
          }
        },
        "title": "PatientRace",
        "type": "object"
      },
      "PatientUserDefinedField": {
        "description": "",
        "example": {
          "description": "Long Term",
          "name": "Admission Type"
        },
        "properties": {
          "description": {
            "description": "Value of the user defined field",
            "type": "string"
          },
          "name": {
            "description": "Name of the user defined field",
            "type": "string"
          }
        },
        "title": "PatientUserDefinedField",
        "type": "object"
      },
      "PendingContact": {
        "description": "New pending contact to be created",
        "example": {
          "addressLine1": "690 Dixie Street",
          "addressLine2": "Unit 123",
          "addressLine3": "Intersection of Main & 3rd",
          "birthDate": "1922-03-30",
          "cellPhone": "(404) 555-9658",
          "city": "Phoenix",
          "contactTypes": [
            "A/R Guarantor",
            "Emergency Contact # 1"
          ],
          "country": "United States",
          "county": "Maricopa",
          "email": "mayme.ali@msn.com",
          "extension": "5678",
          "faxNumber": "(678) 555-8585",
          "firstName": "Mayme",
          "gender": "MALE",
          "homePhone": "(678) 555-8675",
          "lastName": "Ali",
          "namePrefix": "Dr.",
          "officePhone": "(678) 555-8868",
          "otherPhone": "(678) 555-8676",
          "patientId": 2442,
          "postalCode": "85004",
          "relationship": "Son",
          "state": "AZ"
        },
        "properties": {
          "addressLine1": {
            "description": "Street address for the patient's contact.",
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "addressLine2": {
            "description": "Street address for the patient's contact.",
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "addressLine3": {
            "description": "Street address for the patient's contact.",
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "birthDate": {
            "description": "The patient's contact's date of birth. The format is YYYY-MM-DD.",
            "format": "date-time",
            "type": "string"
          },
          "cellPhone": {
            "description": "Cell phone number for the patient's contact.",
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "city": {
            "description": "City for the patient's contact.",
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "contactTypes": {
            "description": "An array of contact types (for e.g. next of kin, guarantor). The values that a facility can choose for contact types are configurable at a facility level.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "country": {
            "description": "Country for the patient's contact.",
            "maxLength": 32,
            "minLength": 0,
            "type": "string"
          },
          "county": {
            "description": "County for the patient's contact.",
            "maxLength": 30,
            "minLength": 0,
            "type": "string"
          },
          "email": {
            "description": "Email address for the patient's contact.",
            "maxLength": 75,
            "minLength": 0,
            "type": "string"
          },
          "extension": {
            "description": "Office extension for the patient's contact.",
            "maxLength": 5,
            "minLength": 0,
            "type": "string"
          },
          "faxNumber": {
            "description": "Fax number for the patient's contact.",
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "firstName": {
            "description": "Patient's contact's first name.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "gender": {
            "description": "Patient's contact's gender. Possible values are Male, Female or Unknown.",
            "type": "string"
          },
          "homePhone": {
            "description": "Home phone number for the patient's contact.",
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "lastName": {
            "description": "Patient's contact's last name.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "namePrefix": {
            "description": "Prefix for the patient's contact.",
            "maxLength": 8,
            "minLength": 0,
            "type": "string"
          },
          "officePhone": {
            "description": "Office phone number for the patient's contact.",
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "otherPhone": {
            "description": "Other phone number for the patient's contact.",
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "patientId": {
            "description": "PointClickCare's unique identifier for a patient within the organization.</br></br>When a patient is admitted to a facility within an organization, they are assigned a patientId which is unique to their stay within that facility. If the same patient were to get admitted to another facility within the same organization in the future, they would be assigned a new patientId. The patientId however is unique at the organization level. That is, no two patients across different facilities within the organization will have the same patientId.",
            "format": "int32",
            "minimum": 0,
            "type": "integer"
          },
          "postalCode": {
            "description": "Postal code for the patient's contact.",
            "maxLength": 15,
            "minLength": 0,
            "type": "string"
          },
          "relationship": {
            "description": "Relationship to the patient.",
            "maxLength": 17,
            "minLength": 0,
            "type": "string"
          },
          "state": {
            "description": "Province or state for the patient's contact.",
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          }
        },
        "required": [
          "patientId"
        ],
        "title": "PendingContact",
        "type": "object"
      },
      "PendingContactResponse": {
        "description": "Id of the pending contact.",
        "example": {
          "pendingContactId": "3a4a1723-d0ed-4d7e-8fd2-1b9f7f330dc2"
        },
        "properties": {
          "pendingContactId": {
            "description": "PointClickCare's unique identifier for a pending contact.<br/><br/> Note: this identifier is not the same as the contactId which is required to make other API calls. You must query the GET Pending Contacts API to obtain the contactId once it is available. Once obtained, you can then use the contactId to call other PointClickCare APIs.",
            "type": "string"
          }
        },
        "title": "PendingContactResponse",
        "type": "object"
      },
      "PendingContactStatus": {
        "description": "Pending Contact information.",
        "example": {
          "addressLine1": "690 Dixie Street",
          "addressLine2": "Unit 123",
          "addressLine3": "Intersection of Main & 3rd",
          "birthDate": "1922-03-30",
          "cellPhone": "(404) 555-9658",
          "city": "Phoenix",
          "contactId": 24,
          "contactStatus": "P",
          "contactTypes": [
            "A/R Guarantor",
            "Emergency Contact # 1"
          ],
          "country": "United States",
          "county": "Maricopa",
          "email": "mayme.ali@msn.com",
          "extension": "5678",
          "faxNumber": "(678) 555-8585",
          "firstName": "Mayme",
          "gender": "M",
          "homePhone": "(678) 555-8675",
          "lastName": "Ali",
          "namePrefix": "Dr.",
          "officePhone": "(678) 555-8868",
          "otherPhone": "(678) 555-8676",
          "patientId": 12,
          "pendingContactId": "3a4a1723-d0ed-4d7e-8fd2-1b9f7f330dc2",
          "postalCode": "85004",
          "relationship": "Son",
          "state": "AZ"
        },
        "properties": {
          "addressLine1": {
            "description": "Street address for the patient's contact, if available.",
            "type": "string"
          },
          "addressLine2": {
            "description": "Street address for the patient's contact, if available.",
            "type": "string"
          },
          "addressLine3": {
            "description": "Street address for the patient's contact, if available.",
            "type": "string"
          },
          "birthDate": {
            "description": "The patient's contact's date of birth. The format is YYYY-MM-DD.",
            "format": "date",
            "type": "string"
          },
          "cellPhone": {
            "description": "Cell phone number for the patient's contact, if available.",
            "type": "string"
          },
          "city": {
            "description": "City for the patient's contact, if available.",
            "type": "string"
          },
          "contactId": {
            "description": "Unique identifier for the patient's contact, if available.",
            "format": "int32",
            "type": "integer"
          },
          "contactStatus": {
            "description": "The status for this Pending Contact. \"P\" for Pending, \"R\" for Resolved.",
            "type": "string"
          },
          "contactTypes": {
            "description": "An array of contact types (for e.g. next of kin, guarantor). The values that a facility can choose for contact types are configurable at a facility level.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "country": {
            "description": "Country for the patient's contact, if available.",
            "type": "string"
          },
          "county": {
            "description": "County for the patient's contact, if available.",
            "type": "string"
          },
          "email": {
            "description": "Email address for the patient's contact, if available.",
            "type": "string"
          },
          "extension": {
            "description": "Office extension for the patient's contact, if available.",
            "type": "string"
          },
          "faxNumber": {
            "description": "Fax number for the patient's contact, if available.",
            "type": "string"
          },
          "firstName": {
            "description": "Patient's contact's first name.",
            "type": "string"
          },
          "gender": {
            "description": "Patient's contact's gender. Possible values are Male, Female or Unknown.",
            "type": "string"
          },
          "homePhone": {
            "description": "Home phone number for the patient's contact, if available.",
            "type": "string"
          },
          "lastName": {
            "description": "Patient's contact's last name.",
            "type": "string"
          },
          "namePrefix": {
            "description": "Prefix for the patient's contact, if available.",
            "type": "string"
          },
          "officePhone": {
            "description": "Office phone number for the patient's contact, if available.",
            "type": "string"
          },
          "otherPhone": {
            "description": "Other phone number for the patient's contact, if available.",
            "type": "string"
          },
          "patientId": {
            "description": "PointClickCare's unique identifier for a patient within the organization.</br></br>When a patient is admitted to a facility within an organization, they are assigned a patientId which is unique to their stay within that facility. If the same patient were to get admitted to another facility within the same organization in the future, they would be assigned a new patientId. The patientId however is unique at the organization level. That is, no two patients across different facilities within the organization will have the same patientId.",
            "format": "int32",
            "type": "integer"
          },
          "pendingContactId": {
            "description": "PointClickCare's unique identifier for a Pending Contact.<br/><br/> Note: this identifier is not the same as the contactId which is required to make other API calls. You must query the GET Pending Contacts API to obtain the contactId once it is available. Once obtained, you can then use the contactId to call other PointClickCare APIs.",
            "type": "string"
          },
          "postalCode": {
            "description": "Postal code for the patient's contact, if available.",
            "type": "string"
          },
          "relationship": {
            "description": "Relationship to the patient.",
            "type": "string"
          },
          "state": {
            "description": "Province or state for the patient's contact, if available.",
            "type": "string"
          }
        },
        "title": "PendingContactStatus",
        "type": "object"
      },
      "PendingPatient": {
        "description": "New pending patient data to be created",
        "example": {
          "birthDate": "1919-05-03",
          "facId": 1,
          "firstName": "James",
          "gender": "MALE",
          "healthCardNumber": "HEALTH-0643070",
          "lastName": "Lewis",
          "medicaidNumber": "MEDIC-AID-001",
          "medicareNumber": "MEDIC-CARE-001",
          "middleName": "John",
          "socialBeneficiaryIdentifier": "456789"
        },
        "properties": {
          "birthDate": {
            "description": "The patient's date of birth. The format is YYYY-MM-DD.",
            "format": "date-time",
            "type": "string"
          },
          "facId": {
            "description": "PointClickCare's unique identifier for a facility within the organization.",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer"
          },
          "firstName": {
            "description": "The patient's first name.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "gender": {
            "description": "The patient's gender. Acceptable values are 'MALE', 'FEMALE' or 'UNKNOWN'.",
            "type": "string"
          },
          "healthCardNumber": {
            "description": "The patient's health card number. This field should be used when creating a record in Canadian facilities ONLY. Only spaces, hyphens (\"-\") and dots (\".\") may be used as separators. Maximum 30 characters.",
            "maxLength": 30,
            "minLength": 0,
            "type": "string"
          },
          "lastName": {
            "description": "The patient's last name.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "medicaidNumber": {
            "description": "The patient's Medicaid Number. Only spaces, hyphens (\"-\") and dots (\".\") may be used as separators. Maximum 30 characters.",
            "maxLength": 30,
            "minLength": 0,
            "type": "string"
          },
          "medicareNumber": {
            "description": "The patient's Medicare Number. Only spaces, hyphens (\"-\") and dots (\".\") may be used as separators. Maximum 30 characters.",
            "maxLength": 30,
            "minLength": 0,
            "type": "string"
          },
          "middleName": {
            "description": "The patient's middle name.",
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "socialBeneficiaryIdentifier": {
            "description": "The patient's Social Security Number (US facilities) or Social Insurance Number (Canadian facilities). The value provided will be validated if it is 9 digits. Only spaces, hyphens (\"-\") and dots (\".\") may be used as separators.",
            "maxLength": 30,
            "minLength": 0,
            "type": "string"
          }
        },
        "required": [
          "birthDate",
          "facId",
          "gender"
        ],
        "title": "PendingPatient",
        "type": "object"
      },
      "PendingPatientResponse": {
        "description": "Id of the pending patient.",
        "example": {
          "pendingPatientId": "f88810ca-9e0c-4303-aaa4-bf387d6d8c26"
        },
        "properties": {
          "pendingPatientId": {
            "description": "PointClickCare's unique identifier for a pending patient.<br/><br/> Note: this identifier is not the same as the patientId which is required to make other API calls. You must query the GET Pending Patients API to obtain the patientId once it is available. Once obtained, you can then use the patientId to call other PointClickCare APIs.",
            "type": "string"
          }
        },
        "title": "PendingPatientResponse",
        "type": "object"
      },
      "PendingPatientStatus": {
        "description": "Pending patient information.",
        "example": {
          "birthDate": "1919-05-03",
          "facId": 1,
          "firstName": "James",
          "gender": "MALE",
          "healthCardNumber": "HEALTH-0643070",
          "lastName": "Lewis",
          "medicaidNumber": "MEDIC-AID-001",
          "medicareNumber": "MEDIC-CARE-001",
          "middleName": "John",
          "patientId": 1021,
          "pendingPatientId": "f88810ca-9e0c-4303-aaa4-bf387d6d8c26",
          "socialBeneficiaryIdentifier": "456789",
          "status": "Resolved"
        },
        "properties": {
          "birthDate": {
            "description": "The patient's date of birth. The format is YYYY-MM-DD.",
            "format": "date",
            "type": "string"
          },
          "facId": {
            "description": "PointClickCare's unique identifier for a facility within the organization.",
            "format": "int32",
            "minimum": 1,
            "type": "integer"
          },
          "firstName": {
            "description": "The patient's first name.",
            "type": "string"
          },
          "gender": {
            "description": "The patient's gender. Acceptable values are 'MALE', 'FEMALE' or 'UNKNOWN'.",
            "type": "string"
          },
          "healthCardNumber": {
            "description": "Represents the patient's health card number. This field is available for Canadian facilities ONLY. Spaces, hyphens (\"-\") and dots (\".\") may be present as separators. Maximum 30 characters.",
            "type": "string"
          },
          "lastName": {
            "description": "The patient's last name.",
            "type": "string"
          },
          "medicaidNumber": {
            "description": "Represents the Medicaid number for the patient.",
            "type": "string"
          },
          "medicareNumber": {
            "description": "Represents the Medicare number for the patient.",
            "type": "string"
          },
          "middleName": {
            "description": "The patient's middle name.",
            "type": "string"
          },
          "patientId": {
            "description": "PointClickCare's unique identifier for a patient within the organization.</br></br>When a patient is admitted to a facility within an organization, they are assigned a patientId which is unique to their stay within that facility. If the same patient were to get admitted to another facility within the same organization in the future, they would be assigned a new patientId. The patientId however is unique at the organization level. That is, no two patients across different facilities within the organization will have the same patientId.",
            "format": "int32",
            "type": "integer"
          },
          "pendingPatientId": {
            "description": "PointClickCare's unique identifier for a pending patient within the organization.",
            "type": "string"
          },
          "socialBeneficiaryIdentifier": {
            "description": "The patient's Social Security Number (SSN) for US facilities or Social Insurance Number (SIN) for Canadian facilities. PointClickCare allows facilities to define their own format for the resident identifiers. Facilities can only use spaces, hyphens (\"-\") and dots (\".\") as separators. The value returned in the response includes the separators. SSN is not returned by default for production apps. Please contact your Partnership Manager and submit a business use case to request this.",
            "type": "string"
          },
          "status": {
            "description": "Represents the status of the Create pending patient request. Possible values are 'Pending' or 'Resolved'. Status is pending if the facility is yet to take action on the request for the created pending patient record. Once the facility has taken action, the status changes to 'Resolved'.",
            "type": "string"
          }
        },
        "required": [
          "facId"
        ],
        "title": "PendingPatientStatus",
        "type": "object"
      },
      "PostCalendarEvent": {
        "description": "Post Calendar Event",
        "example": {
          "description": "Bingo Night",
          "endDateTime": "2016-11-30T20:30:00.000Z",
          "eventType": "Bingo",
          "facId": 2,
          "location": "Building 2 Recreation Room",
          "maxNumberOfParticipants": 10,
          "notes": "Snacks to be provided",
          "otherPersonnel": "Jeff Smith, Joe Smith",
          "participantIds": [
            123456,
            3434443,
            3025156
          ],
          "resources": [
            "Bingo Cards",
            "Markers"
          ],
          "rrule": "FREQ=WEEKLY;INTERVAL=2;BYDAY=SU;COUNT=10",
          "startDateTime": "2016-11-30T19:30:00.000Z"
        },
        "properties": {
          "description": {
            "description": "Description of the event. Max of 200 characters.",
            "type": "string"
          },
          "endDateTime": {
            "description": "End date & time of the event. Must be in 5-minute increments, without seconds nor milliseconds, starting on the hour. The Date and Time is expressed in UTC in the following format YYYY-MM-DDTHH:MM:SS.sssZ.",
            "format": "date-time",
            "type": "string"
          },
          "eventType": {
            "description": "Types of events facility patients can attend. Is defined by facility users. Only 1 facility defined eventType can be specified for an event. Values can be obtained by calling the EventConfigurations API.",
            "type": "string"
          },
          "facId": {
            "description": "PointClickCare's unique identifier for a facility within the organization. If this is included in the request, the event will be updated as a facility level event. Otherwise, the event will be updated as a patient specific event.",
            "format": "int32",
            "minimum": 1,
            "type": "integer"
          },
          "location": {
            "description": "Locations where events can be held. Is defined by facility users. Only 1 facility defined location can be specified for an event. Values can be obtained by calling the EventConfigurations API.",
            "type": "string"
          },
          "maxNumberOfParticipants": {
            "description": "The maximum number of participants that can attend the event. The maximum value is 500. This field is specific to facility/community level events.",
            "format": "int32",
            "maximum": 500,
            "type": "integer"
          },
          "notes": {
            "description": "Additional details of the event. Max of 200 characters.",
            "maxLength": 200,
            "minLength": 0,
            "type": "string"
          },
          "otherPersonnel": {
            "description": "Other personnel that may be required to assist with the event. Max of 120 characters.",
            "maxLength": 120,
            "minLength": 0,
            "type": "string"
          },
          "participantIds": {
            "description": "PointClickCare's unique identifiers for participants (participantId's) that are signed up to attend the event. If the event is to be updated as a patient specific event, then an array containing only the patient's ID must be passed in. A max of 500 patient IDs can be supported through this field.",
            "items": {
              "format": "int32",
              "type": "integer"
            },
            "type": "array"
          },
          "resources": {
            "description": "Types of resources required for events at the facility. Is defined by facility users. Multiple resources can be specified for an event. Values can be obtained by calling the EventConfigurations API.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "rrule": {
            "description": "Defines a rule or repeating pattern for recurring events, based on RFC 5545 published by the IETF. Only one rrule is allowed per event. If an rrule is specified, it must consist of:<ul><li>FREQ </li><li>INTERVAL</li><li>BYDAY</li><li>COUNT or UNTIL </li></ul>A sample structure is \"FREQ=WEEKLY;INTERVAL=2;BYDAY=SU;UNTIL=2016-12-30\".<br/>The structure must list FREQ first.<br/>Note: Occurrences are supported for a maximum span of 1 year from the startDateTime of the event.<br/>FREQ (string): The type of recurrence rule. Supported values are 'DAILY' and 'WEEKLY'.<br/>UNTIL (date): Date value (YYYY:MM:DD) at which recurrence should end. This can not be passed together with COUNT.<br/>COUNT (integer): Number of occurrences of the recurring event. Allowed values are between 1 and 53 inclusive for weekly events, and between 1 and 366 inclusive for daily events. This field can not be passed together with UNTIL.<br/>INTERVAL (integer): A positive integer representing the interval between the occurrences of the event. Allowed values are between 1 and 53 for weekly events and between 1 and 366 for daily events.<br/>BYDAY (string): List of days of the week. Allowed values are MO, TU, WE, TH, FR, SA and SU.Values are separated by a COMMA character (US-ASCII decimal 44). This field can not be used when FREQ is 'DAILY'.",
            "type": "string"
          },
          "startDateTime": {
            "description": "Start date & time of the event. Must be in 5-minute increments, without seconds nor milliseconds, starting on the hour. The Date and Time is expressed in UTC in the following format YYYY-MM-DDTHH:MM:SS.sssZ.",
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "endDateTime",
          "startDateTime"
        ],
        "title": "PostCalendarEvent",
        "type": "object"
      },
      "PostCalendarEventResponse": {
        "description": "New calendar event",
        "example": {
          "calendarEventId": 123455
        },
        "properties": {
          "calendarEventId": {
            "description": "An identifier for a calendar event.",
            "format": "int32",
            "type": "integer"
          }
        },
        "title": "PostCalendarEventResponse",
        "type": "object"
      },
      "PostCarePeriodExtend": {
        "description": "Care Period",
        "example": {
          "carePeriodType": "ENCOUNTER",
          "endDateTime": "2017-02-11T13:11:00.000Z",
          "organization": {
            "addressLine1": "690 Dixie Street",
            "city": "Phoenix",
            "country": "United States",
            "county": "Maricopa",
            "identifier": {
              "coding": [
                {
                  "code": "548758",
                  "display": "Mt. Sinai",
                  "system": "https://npiregistry.cms.hhs.gov/"
                }
              ]
            },
            "phone": "(404) 999-1234",
            "postalCode": "85004",
            "state": "AZ"
          },
          "patientId": 123,
          "senderStayId": "8559789",
          "startDateTime": "2017-01-30T19:11:00.000Z"
        },
        "properties": {
          "carePeriodType": {
            "description": "Identifies whether the content of a clinical document is longitudinal historical patient data or encounter-specific based on a specified date range for an episode of care at an organization. Possible values are: <ul><li>ENCOUNTER</li><li>PATIENT_HISTORY</li></ul>NOTE: Encounter is default value. If encounter is specified the startDateTime is required.",
            "type": "string"
          },
          "endDateTime": {
            "description": "Represents the end date-time of the period of care in the Sender organization. The Date and Time should be expressed in UTC in the following format YYYY-MM-DDTHH:MM:SS.sssZ.<br/><br/>NOTE: If the end date-time is available for a carePeriodType='ENCOUNTER', it is strongly recommended to include.",
            "format": "date-time",
            "type": "string"
          },
          "organization": {
            "$ref": "#/components/schemas/PostOrganizationExtend"
          },
          "patientId": {
            "description": "PointClickCare's unique identifier for a patient within the organization.</br></br>When a patient is admitted to a facility within an organization, they are assigned a patientId which is unique to their stay within that facility. If the same patient were to get admitted to another facility within the same organization in the future, they would be assigned a new patientId. The patientId however is unique at the organization level. That is, no two patients across different facilities within the organization will have the same patientId.",
            "format": "int32",
            "minimum": 0,
            "type": "integer"
          },
          "senderStayId": {
            "description": "Id associated with patient stay in the Sender organization records.",
            "type": "string"
          },
          "startDateTime": {
            "description": "Represents the start date-time of the period of care in the Sender organization. The Date and Time should be expressed in UTC in the following format YYYY-MM-DDTHH:MM:SS.sssZ.<br/><br/>NOTE: startDateTime field is required if carePeriodType is 'ENCOUNTER'.",
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "organization",
          "patientId",
          "senderStayId",
          "startDateTime"
        ],
        "title": "PostCarePeriodExtend",
        "type": "object"
      },
      "PostCodeableConcept": {
        "description": "Represents the approach used to perform the observation.",
        "example": {
          "coding": [
            {
              "code": "standing l/arm",
              "display": "standing l/arm",
              "system": "https://pointclickcare.com/system/observation-method"
            }
          ]
        },
        "properties": {
          "coding": {
            "description": "List of list of identifier for observation type.<br/><br/>Note: When observation.method.coding is provided, the system, code, and display fields are required.",
            "items": {
              "$ref": "#/components/schemas/PostCoding"
            },
            "maxItems": 3,
            "minItems": 1,
            "type": "array"
          }
        },
        "title": "PostCodeableConcept",
        "type": "object"
      },
      "PostCoding": {
        "description": "identifier for observation type.<br/><br/>Note: When observation.identifier.coding is provided, the system, code, and display fields are required.",
        "example": {
          "code": "55284-4",
          "display": "Blood pressure systolic and diastolic",
          "system": "http://loinc.org"
        },
        "properties": {
          "code": {
            "description": "Specific code for the type of observation or vital sign.<p>Maximum 50 characters.</p>",
            "type": "string"
          },
          "display": {
            "description": "Text description of the observation type.<br/> <p>Maximum 500 characters.</p>",
            "type": "string"
          },
          "system": {
            "description": "Type of coding system. Can be a URL.<br><br> Alternate coding systems: <br> <ul><li>LOINC : <a href=\"http://loinc.org\">http://loinc.org</a></li></ul> <p>Maximum 500 characters.</a>",
            "type": "string"
          }
        },
        "title": "PostCoding",
        "type": "object"
      },
      "PostDestination": {
        "description": "Destinations",
        "example": {
          "accessingEntityId": "06300E93-950A-11E8-AC63-0242AC140002",
          "destinationId": "B1665C85-5345-4F7D-8682-CFF4609A4025",
          "destinationName": "California State HIE",
          "integrationDestinationType": "ADT",
          "isConsentRequired": true
        },
        "properties": {
          "accessingEntityId": {
            "description": "PointClickCare's unique identifier for an external organization with a signed data sharing agreement. </br></br>Note: Currently limited to hospitals participating in data exchange with PointClickCare.",
            "type": "string"
          },
          "destinationId": {
            "description": "Represents the unique identifier for the destination in the vendor's system. This Id should be unique at the vendor's system level and is recommended to be a UUID4. Maximum allowed characters are 36 (including the hyphens).",
            "type": "string"
          },
          "destinationName": {
            "description": "Represents the full display name of the destination. PointClickCare application shows the display name of the destination to users when activating a new HIE or Health System. Maximum allowed characters are 200.",
            "type": "string"
          },
          "integrationDestinationType": {
            "description": "The Integration Destination type of either ADT or CCD.<br />ADT: Integration engine sending admission, discharge, and transfer messages.<br />CCD: Residents clinical continuity documents.",
            "type": "string"
          },
          "isConsentRequired": {
            "description": "Represents if the Health Information Exchange requires PointClickCare facility to collect consent. If set to 'true', the consent is required to be collected from residents.",
            "type": "boolean"
          }
        },
        "title": "PostDestination",
        "type": "object"
      },
      "PostDestinationResponse": {
        "description": "New integration destination record.",
        "example": {
          "integrationDestinationId": 101
        },
        "properties": {
          "integrationDestinationId": {
            "description": "PointClickCare's unique identifier for the destination.",
            "format": "int32",
            "type": "integer"
          }
        },
        "title": "PostDestinationResponse",
        "type": "object"
      },
      "PostHistoricalDiagnosticReportRadiology": {
        "description": "Post Historical Diagnostic Reports - Radiology",
        "example": {
          "carePeriodId": 12345,
          "effectiveDateTime": "2015-01-09T17:30:15.454Z",
          "issuedDateTime": "2015-01-09T17:30:15.454Z",
          "radiologyProcedureDetails": [
            {
              "comment": "this is a comment\nwith line breaks",
              "conclusion": "mild scoliosis",
              "identifier": {
                "code": "72082",
                "display": "X-ray exam entire spi 2/3 vw",
                "system": "http://www.ama-assn.org/go/cpt"
              }
            },
            {
              "comment": "this is a comment\nwith line breaks",
              "conclusion": "upper gastric motility problems",
              "identifier": {
                "code": "78265-TC",
                "display": "Gastric emptying imag study",
                "system": "http://www.ama-assn.org/go/cpt"
              }
            }
          ],
          "reportName": "Admission checks",
          "reportPerformer": "Reyna Lab"
        },
        "properties": {
          "carePeriodId": {
            "description": "ID used to associate a record with a particular period of care delivered to a patient at an organization.",
            "format": "int32",
            "type": "integer"
          },
          "effectiveDateTime": {
            "description": "Represents the date and time of the procedure. The date and time are expressed in UTC in the following format YYYY-MM-DDTHH:MM:SS.sssZ.",
            "format": "date-time",
            "type": "string"
          },
          "issuedDateTime": {
            "description": "Represents the date and time when the report was issued. The date and time are expressed in UTC in the following format YYYY-MM-DDTHH:MM:SS.sssZ.",
            "format": "date-time",
            "type": "string"
          },
          "radiologyProcedureDetails": {
            "description": "List of radiology procedure details.<br><br>Note: Requires 1 to 50 entries.",
            "items": {
              "$ref": "#/components/schemas/RadiologyProcedureDetails"
            },
            "maxItems": 50,
            "minItems": 1,
            "type": "array"
          },
          "reportName": {
            "description": "Represents the name of the report.<br><br>Note: Limit of 250 characters.<br>Note: Cannot be empty string.",
            "maxLength": 250,
            "minLength": 0,
            "type": "string"
          },
          "reportPerformer": {
            "description": "Represents name of who or what (practitioner or organization) that produced the report.<br><br>Note: Limit of 200 characters.<br>Note: Cannot be empty string.",
            "maxLength": 200,
            "minLength": 0,
            "type": "string"
          }
        },
        "required": [
          "carePeriodId",
          "issuedDateTime",
          "radiologyProcedureDetails"
        ],
        "title": "PostHistoricalDiagnosticReportRadiology",
        "type": "object"
      },
      "PostHistoricalDiagnosticReportRadiologyResponse": {
        "description": "Historical Diagnostic Report Radiology",
        "example": {
          "historicalDiagnosticReportRadId": 1234567
        },
        "properties": {
          "historicalDiagnosticReportRadId": {
            "description": "PointClickCare's unique identifier for an inbound radiology report.",
            "format": "int64",
            "type": "integer"
          }
        },
        "title": "PostHistoricalDiagnosticReportRadiologyResponse",
        "type": "object"
      },
      "PostHistoricalDiagnosticReportsLaboratory": {
        "description": "Historical Diagnostic Report Lab",
        "example": {
          "carePeriodId": 12345,
          "category": [
            "Hematology",
            "Chemistry"
          ],
          "effectiveDateTime": "2015-01-09T17:30:15.454Z",
          "issuedDateTime": "2015-01-09T17:30:15.454Z",
          "reportName": "Admission Tests",
          "reportPerformer": "Reyna Lab",
          "testSet": [
            {
              "identifier": {
                "code": "2345-7",
                "display": "RBC",
                "system": "http://loinc.org"
              },
              "results": [
                {
                  "abnormalityCode": "B",
                  "abnormalityComment": "this is a comment",
                  "referenceRange": "4.10-5.60",
                  "valueQuantity": {
                    "unit": "x10E3/uL",
                    "value": "5.27"
                  }
                }
              ]
            },
            {
              "identifier": {
                "code": "789-8",
                "display": "Glucose",
                "system": "http://loinc.org"
              },
              "results": [
                {
                  "abnormalityCode": "U",
                  "abnormalityComment": "this is a comment",
                  "referenceRange": "70 - 105",
                  "valueQuantity": {
                    "unit": "mg",
                    "value": "67.8"
                  }
                }
              ]
            },
            {
              "identifier": {
                "code": "2160-0",
                "display": "Creatinine",
                "system": "http://loinc.org"
              },
              "results": [
                {
                  "abnormalityCode": "",
                  "abnormalityComment": "this is a comment",
                  "referenceRange": "3.90 - 5.03",
                  "valueQuantity": {
                    "unit": "mg",
                    "value": "4.89"
                  }
                }
              ]
            }
          ]
        },
        "properties": {
          "carePeriodId": {
            "description": "ID used to associate a record with a particular period of care delivered to a patient at an organization.",
            "format": "int32",
            "type": "integer"
          },
          "category": {
            "description": "Represents the category that the report belongs to. Multiple categories may be selected for a report. Possible values are: <ul><li>Chemistry</li><li>Hematology</li><li>Challenge</li><li>Semen Analysis</li><li>Serology</li><li>Cancer Screening Tests</li><li>Microbiology</li><li>Cytology</li><li>Anatomic Pathology</li><li>Blood Bank</li><li>Coagulation</li><li>Unknown Category</li></ul>",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "effectiveDateTime": {
            "description": "Represents the date and time of the procedure or of specimen collection(s). The date and time are expressed in UTC in the following format YYYY-MM-DDTHH:MM:SS.sssZ.",
            "format": "date-time",
            "type": "string"
          },
          "issuedDateTime": {
            "description": "Represents the date and time when the report was issued. The date and time are expressed in UTC in the following format YYYY-MM-DDTHH:MM:SS.sssZ.",
            "format": "date-time",
            "type": "string"
          },
          "reportName": {
            "description": "Represents the name of the report.<br><br>Note: Limit of 250 characters.<br>Note: Cannot be empty string.",
            "maxLength": 250,
            "minLength": 0,
            "type": "string"
          },
          "reportPerformer": {
            "description": "Represents name of who or what (organization or practitioner) that produced the report.<br><br>Note: Limit of 200 characters.<br>Note: Cannot be empty string.",
            "maxLength": 200,
            "minLength": 0,
            "type": "string"
          },
          "testSet": {
            "description": "List of test results reported.<br><br>Note: Requires 1 to 50 entries.",
            "items": {
              "$ref": "#/components/schemas/DiagnosticReportLaboratoryTest"
            },
            "maxItems": 50,
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "carePeriodId",
          "issuedDateTime",
          "testSet"
        ],
        "title": "PostHistoricalDiagnosticReportsLaboratory",
        "type": "object"
      },
      "PostHistoricalDiagnosticReportsLaboratoryResponse": {
        "description": "Historical Diagnostic Report Lab",
        "example": {
          "historicalDiagnosticReportLabId": 1234567
        },
        "properties": {
          "historicalDiagnosticReportLabId": {
            "description": "PointClickCare's unique identifier for an inbound laboratory report.",
            "format": "int64",
            "type": "integer"
          }
        },
        "title": "PostHistoricalDiagnosticReportsLaboratoryResponse",
        "type": "object"
      },
      "PostHistoricalObservation": {
        "description": "",
        "example": {
          "category": "bloodPressure",
          "diastolicValue": 120,
          "effectiveDateTime": "2020-11-30T19:06:19.153Z",
          "identifier": {
            "coding": [
              {
                "code": "55284-4",
                "display": "Blood pressure systolic and diastolic",
                "system": "http://loinc.org"
              }
            ]
          },
          "interpretation": "Normal BP",
          "method": {
            "coding": [
              {
                "code": "standing l/arm",
                "display": "standing l/arm",
                "system": "https://pointclickcare.com/system/observation-method"
              }
            ]
          },
          "systolicValue": 80,
          "unit": "mmHg"
        },
        "properties": {
          "category": {
            "description": "Represents the type of observation.<br/><br/>Acceptable values are: <div><ul> <li>heartRate</li> <li>bloodPressure</li> <li>bloodSugar</li> <li>oxygenSaturation</li> <li>weight</li> <li>height</li> <li>painLevel</li> <li>temperature</li> <li>respirations </li> </ul></div> <p>Note: To support reconciliation, providing an observation category is strongly recommended.</p> <p>Note: This field is required if observation[*].identifier is blank.</p>",
            "type": "string"
          },
          "diastolicValue": {
            "description": "The recorded diastolic Blood Pressure for the given patient.<br/><br/>Note: This field is required if observation type is blood pressure.",
            "format": "double",
            "type": "number"
          },
          "effectiveDateTime": {
            "description": "Represents the date and time of when the specific observation was recorded. The date and time are expressed in UTC in the following format YYYY-MM-DDTHH:MM:SS.sssZ.",
            "format": "date-time",
            "type": "string"
          },
          "identifier": {
            "description": "An alternate identifier for the observation type or vital sign.<br/><br/>Note: This field is required if observation.category is blank.",
            "$ref": "#/components/schemas/PostCodeableConcept"
          },
          "interpretation": {
            "description": "Free text field for comment about the assessment of the observation value.</p> <p>Limit of 250 characters.</p>",
            "maxLength": 250,
            "minLength": 0,
            "type": "string"
          },
          "method": {
            "description": "Represents the approach used to perform the observation.",
            "$ref": "#/components/schemas/PostCodeableConcept"
          },
          "systolicValue": {
            "description": "The recorded systolic Blood Pressure for the given patient.<br/><br/>Note: This field is required if observation type is blood pressure.",
            "format": "double",
            "type": "number"
          },
          "unit": {
            "description": "Represents the unit of measure for the observation.<br/><br/>  Possible values are:<br/> <ul style=\"list-style: none\"><li>For blood pressure: mmHg</li> <li>For blood sugar: mg/dL or mmol/l</li> <li>For heart rate: bpm</li> <li>For height: cm or inches</li> <li>For oxygen saturation: %</li> <li>For respiration: Breaths/min</li> <li>For temperature: °C or °F</li> <li>For weight : Kg or Lbs</li></ul>",
            "type": "string"
          },
          "value": {
            "description": "Recorded reading for the observation.<br/><br/>Note: This field should not be used if observation type is blood pressure.",
            "format": "double",
            "type": "number"
          }
        },
        "required": [
          "effectiveDateTime"
        ],
        "title": "PostHistoricalObservation",
        "type": "object"
      },
      "PostHistoricalObservations": {
        "description": "",
        "example": {
          "carePeriodId": 2,
          "observation": [
            {
              "category": "bloodPressure",
              "diastolicValue": 120,
              "effectiveDateTime": "2020-11-30T19:06:19.155Z",
              "identifier": {
                "coding": [
                  {
                    "code": "55284-4",
                    "display": "Blood pressure systolic and diastolic",
                    "system": "http://loinc.org"
                  }
                ]
              },
              "interpretation": "Normal BP",
              "method": {
                "coding": [
                  {
                    "code": "standing l/arm",
                    "display": "standing l/arm",
                    "system": "https://pointclickcare.com/system/observation-method"
                  }
                ]
              },
              "systolicValue": 80,
              "unit": "mmHg"
            },
            {
              "category": "painLevel",
              "effectiveDateTime": "2020-11-30T19:06:19.155Z",
              "identifier": {
                "coding": [
                  {
                    "code": "72514-3",
                    "display": "Pain severity - 0-10 verbal numeric rating",
                    "system": "http://loinc.org"
                  }
                ]
              },
              "interpretation": "Average on the pain scale",
              "method": {
                "coding": [
                  {
                    "code": "numerical",
                    "display": "numerical",
                    "system": "https://pointclickcare.com/system/observation-method"
                  }
                ]
              },
              "value": 3
            }
          ]
        },
        "properties": {
          "carePeriodId": {
            "description": "ID used to associate a record with a particular period of care delivered to a patient at an organization.",
            "format": "int32",
            "minimum": 1,
            "type": "integer"
          },
          "observation": {
            "description": "List of observations.",
            "items": {
              "$ref": "#/components/schemas/PostHistoricalObservation"
            },
            "maxItems": 2147483647,
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "carePeriodId",
          "observation"
        ],
        "title": "PostHistoricalObservations",
        "type": "object"
      },
      "PostHistoricalObservationsResponse": {
        "description": "",
        "example": {
          "historicalObservationId": 1234567
        },
        "properties": {
          "historicalObservationId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "title": "PostHistoricalObservationsResponse",
        "type": "object"
      },
      "PostLabResultResponse": {
        "description": "Lab Result Report.",
        "example": {
          "labResultReportId": 1234567
        },
        "properties": {
          "labResultReportId": {
            "description": "PointClickCare's unique identifier for a lab result report",
            "format": "int32",
            "type": "integer"
          }
        },
        "title": "PostLabResultResponse",
        "type": "object"
      },
      "PostRadiologyResultResponse": {
        "description": "Radiology Result Report.",
        "example": {
          "radiologyReportId": 1234567
        },
        "properties": {
          "radiologyReportId": {
            "description": "PointClickCare's unique identifier for a radiology result report",
            "format": "int32",
            "type": "integer"
          }
        },
        "title": "PostRadiologyResultResponse",
        "type": "object"
      },
      "GetAncillaryChargesResponse": {
        "description": "Ancillary Charges Status Process Id.",
        "example": {
          "processId": "4dd06f6b-cf6d-4a5d-b9e5-dfbe54b8b01a",
          "processingStatus": "Completed"
        },
        "properties": {
          "processId": {
            "description": "Reference ID to get status of the file under processing.",
            "type": "string"
          },
          "processingStatus": {
            "description": "Indicates status of the file. 3 statuses are possible which are, <br><ul><li>Completed - File is processed and visible to customers</li><li>In Progress - File processing is underway</li><li>Failed - File could not be processed</li></ul>",
            "type": "string"
          }
        },
        "title": "GetAncillaryChargesResponse",
        "type": "object"
      },
      "PostAncillaryChargesResponse": {
        "description": "Ancillary Charges Process Id.",
        "example": {
          "processId": "735c34c0-28d4-493f-987d-ac4dbc0cb950"
        },
        "properties": {
          "processId": {
            "description": "Unique identifier of the process that imports ancillary charges. Can be used to check the status of the process.",
            "type": "string"
          }
        },
        "title": "PostAncillaryChargesResponse",
        "type": "object"
      },
      "PostOrganizationExtend": {
        "description": "Represents the organization sending the patient data.",
        "example": {
          "addressLine1": "690 Dixie Street",
          "city": "Phoenix",
          "country": "United States",
          "county": "Maricopa",
          "identifier": {
            "coding": [
              {
                "code": "548758",
                "display": "Mt. Sinai",
                "system": "https://npiregistry.cms.hhs.gov/"
              }
            ]
          },
          "phone": "(404) 999-1234",
          "postalCode": "85004",
          "state": "AZ"
        },
        "properties": {
          "addressLine1": {
            "description": "Street address for the organization's physical address, if available.",
            "type": "string"
          },
          "city": {
            "description": "City the organization is located in.",
            "type": "string"
          },
          "country": {
            "description": "Country the organization is located in.",
            "type": "string"
          },
          "county": {
            "description": "County the organization is located in.",
            "type": "string"
          },
          "identifier": {
            "$ref": "#/components/schemas/PostOrganizationIdentifierPostCodeableConcept"
          },
          "phone": {
            "description": "Contact number of the organization.",
            "type": "string"
          },
          "postalCode": {
            "description": "Postal Code of the organization.",
            "type": "string"
          },
          "state": {
            "description": "State the organization is located in.",
            "type": "string"
          }
        },
        "required": [
          "identifier"
        ],
        "title": "PostOrganizationExtend",
        "type": "object"
      },
      "PostOrganizationIdentifierPostCodeableConcept": {
        "description": "Identifier of the organization.",
        "example": {
          "coding": [
            {
              "code": "548758",
              "display": "Mt. Sinai",
              "system": "https://npiregistry.cms.hhs.gov/"
            }
          ]
        },
        "properties": {
          "coding": {
            "description": "List of organization identifiers, can accept up to 3 entries.",
            "items": {
              "$ref": "#/components/schemas/PostOrganizationIdentifierPostCoding"
            },
            "type": "array"
          }
        },
        "title": "PostOrganizationIdentifierPostCodeableConcept",
        "type": "object"
      },
      "PostOrganizationIdentifierPostCoding": {
        "description": "Organization identifiers, can accept up to 3 entries.",
        "example": {
          "code": "548758",
          "display": "Mt. Sinai",
          "system": "https://npiregistry.cms.hhs.gov/"
        },
        "properties": {
          "code": {
            "description": "Represents the code of the organization.",
            "type": "string"
          },
          "display": {
            "description": "Represents the name of the institution.",
            "type": "string"
          },
          "system": {
            "description": "Represents the coding system of the organization. Possible values are URL. Supported systems are: National Provider Identifier: \"https://npiregistry.cms.hhs.gov/\".",
            "type": "string"
          }
        },
        "title": "PostOrganizationIdentifierPostCoding",
        "type": "object"
      },
      "PostPrivateCashImportResponse": {
        "description": "Private Cash Import Process Id.",
        "example": {
          "processId": "9ea74b2c-7ba5-4223-90af-941933886e4f"
        },
        "properties": {
          "processId": {
            "description": "Unique identifier of the process that imports private cash. Can be used to check the status of the process.",
            "type": "string"
          }
        },
        "title": "PostPrivateCashImportResponse",
        "type": "object"
      },
      "PostWebhookSubscription": {
        "description": "Subscribe or modify the subscription for your app to PointClickCare webhook events",
        "example": {
          "applicationName": "MyTestApp",
          "enableRoomReservationCancellation": true,
          "endUrl": "https://www.testurl.com:443/",
          "eventGroupList": [
            "ADT01",
            "ADT02"
          ],
          "includeDischarged": true,
          "includeOutpatient": true,
          "password": "secret01",
          "username": "user1234",
          "vendorExternalId": "e9d8e6dd-d4d7-480a-a367-fb91eabfd402"
        },
        "properties": {
          "applicationName": {
            "description": "Your application's name as seen on the Developer Portal under My Apps > Details > Application Name.",
            "type": "string"
          },
          "enableRoomReservationCancellation": {
            "description": "Represents the notification of the cancellation of a room reservation for the patient. Possible values are 'true' or 'false'.",
            "type": "boolean"
          },
          "endUrl": {
            "description": "The URL of the web service where the webhook notifications for your app should be sent when the events occur. Maximum 128 characters.<br><br><b>Sandbox environment:</b><br>The URL for Sandbox notifications must be able to receive content on the following ports: 3443, 30440, 30441, 30442, and 30443. You must specify the port number as part of the URL.<br><br><b>Production environment:</b><br>The URL for Production notifications must be able to receive content on the following ports: 443, 8443, 20440, 20441, 20442 and 20443. You must specify the port number as part of the URL. If it is not specified then it will be assumed that port 443 will be used by the URL.",
            "type": "string"
          },
          "eventGroupList": {
            "description": "Array of event group names for your app to subscribe to.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "includeDischarged": {
            "description": "Represents whether if webhook notifications for your app should be generated for discharged patients. Possible values are 'true' or 'false'.",
            "type": "boolean"
          },
          "includeOutpatient": {
            "description": "Represents whether if webhook notifications for your app should be generated for outpatients. Possible values are 'true' or 'false'.",
            "type": "boolean"
          },
          "password": {
            "description": "Password for the web service. Minimum 8 characters. Maximum 55 characters.",
            "type": "string"
          },
          "username": {
            "description": "Username for the web service. Maximum 40 characters.",
            "type": "string"
          },
          "vendorExternalId": {
            "description": "Is a unique identifier that allows vendors to receive targeted webhook notifications.  The identifier (UUID) will be provided to the vendor by PointClickCare, if the use case supports it.<br><br> This field can be left null/blank for most webhook subscriptions.  Please note: To subscribe to CLM01 webhooks, the ReceiverUUID must be provided in this field.",
            "type": "string"
          }
        },
        "required": [
          "endUrl",
          "eventGroupList"
        ],
        "title": "PostWebhookSubscription",
        "type": "object"
      },
      "PostWebhookSubscriptionResponse": {
        "description": "New webhook subscription record.",
        "example": {
          "webhookSubscriptionId": 196
        },
        "properties": {
          "webhookSubscriptionId": {
            "description": "Unique identifier for the webhook subscription request.",
            "format": "int32",
            "type": "integer"
          }
        },
        "title": "PostWebhookSubscriptionResponse",
        "type": "object"
      },
      "PractionerList": {
        "description": "List of practitioners.",
        "example": {
          "data": [
            {
              "addressLine1": "unit 15",
              "cellPhone": "(404) 555-5555",
              "city": "New York City",
              "country": "United States",
              "county": "Luigi County",
              "createdBy": "lcalrissian",
              "createdDate": "2019-04-25T16:15:58.000Z",
              "email": "James.Smith@email.com",
              "fax": "(404) 666-6666",
              "firstName": "James",
              "gender": "M",
              "groupNpi": "123456789",
              "homePhone": "(404) 333-3333",
              "lastName": "Smith",
              "middleName": "Edward",
              "npi": "123456",
              "officePhone": "(404) 222-2222",
              "pager": "(404) 111-1111",
              "postalCode": "10001",
              "practitionerId": 1,
              "providerType": "Physician",
              "relation": "Primary",
              "revisionBy": "lcalrissian",
              "revisionDate": "2019-04-25T16:15:58.000Z",
              "state": "New York",
              "title": "Dr.",
              "upin": "D39552",
              "taxonomyCode": "207R00000X",
              "taxonomyDescription": "Allopathic & Osteopathic Physicians : Internal Medicine"
            },
            {
              "addressLine1": "unit 1",
              "cellPhone": "(213) 999-9999",
              "city": "San Francisco",
              "country": "United States",
              "county": "San Carlos County",
              "createdBy": "lcalrissian",
              "createdDate": "2019-04-25T16:15:58.000Z",
              "email": "John.Klein@email.com",
              "fax": "(213) 777-7777",
              "firstName": "John",
              "gender": "F",
              "homePhone": "(213) 111-1111",
              "lastName": "Klein",
              "middleName": "Lee",
              "npi": "557772",
              "officePhone": "(213) 222-2222",
              "pager": "(213) 555-555",
              "postalCode": "94101",
              "practitionerId": 2,
              "providerType": "Physician",
              "revisionBy": "lcalrissian",
              "revisionDate": "2019-04-25T16:15:58.000Z",
              "state": "California",
              "title": "Ms.",
              "upin": "D89032"
            }
          ],
          "paging": {
            "hasMore": false,
            "page": 1,
            "pageSize": 50
          }
        },
        "properties": {
          "data": {
            "description": "List of practitioners.",
            "items": {
              "$ref": "#/components/schemas/Practitioner"
            },
            "type": "array"
          },
          "paging": {
            "$ref": "#/components/schemas/PagingResponseByPage"
          }
        },
        "title": "PractionerList",
        "type": "object"
      },
      "PatientPhoto": {
        "description": "Returns the image file. The format (.jpg, .gif or .jpeg) is specified in Content-Type header",
        "properties": {
          "data": {
            "description": "Returns the image file. The format (.jpg, .gif or .jpeg) is specified in Content-Type header",
            "type": "string",
            "format": "byte"
          }
        },
        "title": "PatientPhoto",
        "type": "object"
      },
      "Practitioner": {
        "description": "Practitioners.",
        "example": {
          "addressLine1": "unit 15",
          "cellPhone": "(404) 555-5555",
          "city": "New York City",
          "country": "United States",
          "county": "Luigi County",
          "createdBy": "lcalrissian",
          "createdDate": "2019-04-25T16:15:58.000Z",
          "email": "James.Smith@email.com",
          "fax": "(404) 666-6666",
          "firstName": "James",
          "gender": "male",
          "homePhone": "(404) 333-3333",
          "lastName": "Smith",
          "middleName": "Edward",
          "npi": "123456",
          "officePhone": "(404) 222-2222",
          "pager": "(404) 111-1111",
          "postalCode": "10001",
          "practitionerId": 1,
          "providerType": "Physician",
          "relation": "Primary",
          "revisionBy": "lcalrissian",
          "revisionDate": "2019-04-25T16:15:58.000Z",
          "state": "New York",
          "title": "Dr.",
          "upin": "D39552",
          "taxonomyCode": "207R00000X",
          "taxonomyDescription": "Allopathic & Osteopathic Physicians : Internal Medicine"
        },
        "properties": {
          "addressLine1": {
            "description": "Street address for the practitioner's address, if available.",
            "type": "string"
          },
          "addressLine2": {
            "description": "Additional address information for the practitioner's address, if available.",
            "type": "string"
          },
          "cellPhone": {
            "description": "Cell phone number for the practitioner, if available.",
            "type": "string"
          },
          "city": {
            "description": "City for the practitioner's address, if available.",
            "type": "string"
          },
          "country": {
            "description": "Country for the practitioner's address, if available.",
            "type": "string"
          },
          "county": {
            "description": "County for the practitioner's address, if available.",
            "type": "string"
          },
          "createdBy": {
            "description": "The recorded client/user name who created the medical professional for the patient.",
            "type": "string"
          },
          "createdDate": {
            "description": "The recorded date the medical professional record was created. The date and time are expressed in UTC in the following format YYYY-MM-DDTHH:MM:SS.sssZ.",
            "format": "date-time",
            "type": "string"
          },
          "email": {
            "description": "Email address for the practitioner, if available.",
            "type": "string"
          },
          "fax": {
            "description": "Fax number for the practitioner, if available.",
            "type": "string"
          },
          "firstName": {
            "description": "The practitioner's first name.",
            "type": "string"
          },
          "gender": {
            "description": "The practitioner's gender. Possible responses are 'M', 'F' or 'U'.",
            "type": "string"
          },
          "groupNpi": {
            "description": "Group National Provider ID for the practitioner, if available.",
            "type": "string"
          },
          "homePhone": {
            "description": "Home phone number for the practitioner, if available.",
            "type": "string"
          },
          "lastName": {
            "description": "The practitioner's last name.",
            "type": "string"
          },
          "middleName": {
            "description": "The practitioner's middle name.",
            "type": "string"
          },
          "npi": {
            "description": "National Provider ID for the practitioner.",
            "type": "string"
          },
          "officePhone": {
            "description": "Office phone number for the practitioner, if available.",
            "type": "string"
          },
          "pager": {
            "description": "Pager number for the practitioner, if available.",
            "type": "string"
          },
          "postalCode": {
            "description": "Postal Code for the practitioner's address, if available.",
            "type": "string"
          },
          "practitionerId": {
            "description": "The unique identifier for the practitioner within the organization.",
            "format": "int32",
            "type": "integer"
          },
          "providerType": {
            "description": "Represents the type of medical professional. For e.g. physician, dentist, therapist.",
            "type": "string"
          },
          "relation": {
            "description": "Represents if the practitioner is the primary practitioner assigned for the patient. Expected value for this field is \"Primary\" and will only be included for the primary practitioner. In PointClickCare, only one primary practitioner can be assigned to a patient.",
            "type": "string"
          },
          "revisionBy": {
            "description": "The recorded client/user name who last revised the medical professional for the patient.",
            "type": "string"
          },
          "revisionDate": {
            "description": "The recorded date the medical professional record was last revised. The date and time are expressed in UTC in the following format YYYY-MM-DDTHH:MM:SS.sssZ.",
            "format": "date-time",
            "type": "string"
          },
          "state": {
            "description": "State/Province for the practitioner's address, if available.",
            "type": "string"
          },
          "title": {
            "description": "The practitioner's title, if available.",
            "type": "string"
          },
          "upin": {
            "description": "Unique physician identification number (UPIN) for the practitioner, if available. This field is only applicable for US based facilities.",
            "type": "string"
          },
          "taxonomyCode": {
            "description": "Taxonomy Code for the medical professional.",
            "type": "string"
          },
          "taxonomyDescription": {
            "description": "Description for taxonomy code.",
            "type": "string"
          }
        },
        "title": "Practitioner",
        "type": "object"
      },
      "PrefixPickListItem": {
        "description": "",
        "example": {
          "description": "Dr.",
          "id": 1
        },
        "properties": {
          "description": {
            "description": "Description of the pick list value for prefix.",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the pick list value for prefix.",
            "format": "int32",
            "type": "integer"
          }
        },
        "title": "PrefixPickListItem",
        "type": "object"
      },
      "PrivacyConsent": {
        "description": "Privacy consents.",
        "example": {
          "consentedBy": "Smith, John",
          "effectiveDate": "2017-09-07",
          "privacyConsentId": 1,
          "relationship": "Son",
          "status": "Consented",
          "type": {
            "name": "HIE",
            "privacyConsentTypeId": 1
          }
        },
        "properties": {
          "consentedBy": {
            "description": "Represents who provided the consent. If the patient themselves provided the consent, this field is not returned. Otherwise, the name of the person who provided the consent on patient's behalf will be returned.",
            "type": "string"
          },
          "effectiveDate": {
            "description": "Represents the date when the patient's privacy consent was received. The date format is YYYY-MM-DD.",
            "format": "date",
            "type": "string"
          },
          "privacyConsentId": {
            "description": "Represents the unique identifier for the privacy consent.",
            "format": "int32",
            "type": "integer"
          },
          "relationship": {
            "description": "Represents the relationship to the patient of the person who provided the consent. If the patient themselves provided the consent, the value returned will be 'Self'.",
            "type": "string"
          },
          "status": {
            "description": "Represents the privacy consent status for the patient. Possible values are 'Consented' or 'Refused'.",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/PrivacyConsentType"
          }
        },
        "title": "PrivacyConsent",
        "type": "object"
      },
      "PrivacyConsentList": {
        "description": "Retrieve the list of privacy consents for a patient.",
        "example": {
          "data": [
            {
              "consentedBy": "Smith, John",
              "effectiveDate": "2017-09-07",
              "privacyConsentId": 1,
              "relationship": "Son",
              "status": "Consented",
              "type": {
                "name": "HIE",
                "privacyConsentTypeId": 1
              }
            }
          ]
        },
        "properties": {
          "data": {
            "description": "List of privacy consents.",
            "items": {
              "$ref": "#/components/schemas/PrivacyConsent"
            },
            "type": "array"
          }
        },
        "title": "PrivacyConsentList",
        "type": "object"
      },
      "PrivacyConsentType": {
        "description": "Represents the privacy consent type.",
        "example": {
          "name": "HIE",
          "privacyConsentTypeId": 1
        },
        "properties": {
          "name": {
            "description": "Name of the privacy consent type. Currently, only the privacy consent for staff to be able to view a patient's medical record through a Health Information Exchange (HIE) is supported. Possible value for this field is 'HIE'.",
            "type": "string"
          },
          "privacyConsentTypeId": {
            "description": "Represents the identifier for the privacy consent type. For 'HIE' privacy consent, the id is always 1.",
            "format": "int32",
            "type": "integer"
          }
        },
        "title": "PrivacyConsentType",
        "type": "object"
      },
      "GetPrivateCashImportStatusResponse": {
        "description": "Private Cash Status Process Id.",
        "example": {
          "processId": "9ea74b2c-7ba5-4223-90af-941933886e4f",
          "processingStatus": "Completed"
        },
        "properties": {
          "processId": {
            "description": "Reference ID to get status of the file under processing.",
            "type": "string"
          },
          "processingStatus": {
            "description": "Indicates status of the file. 3 statuses are possible which are, <br><ul><li>Completed - File is processed and visible to customers</li><li>In Progress - File processing is underway</li><li>Failed - File could not be processed</li></ul>",
            "type": "string"
          }
        },
        "title": "GetPrivateCashImportStatusResponse",
        "type": "object"
      },
      "ProgressNote": {
        "description": "New Encounter Note Content",
        "example": {
          "effectiveDate": "2016-03-01T01:02:03.000Z",
          "externalId": "1",
          "isEncounterNote": false,
          "noteType": "NoteType 1",
          "patientId": 6,
          "showOnShift": false,
          "showOn24hr": true,
          "showOnComm": false,
          "sections": [
            {
              "name": "Date of Service",
              "value": "2015-01-02"
            },
            {
              "name": "Visit Type",
              "value": "Visit Type value"
            },
            {
              "name": "Transition of Care",
              "value": "Transition of Care value"
            },
            {
              "name": "History Details",
              "value": "History Details for this progress note."
            },
            {
              "name": "Details",
              "value": "Details this progress note."
            },
            {
              "name": "Provider",
              "value": "Provider Name who provided the service."
            },
            {
              "name": "Signed Date",
              "value": "Date this progress note was signed by the provider. This is a string field and the date format is left to the calling partner."
            }
          ]
        },
        "properties": {
          "effectiveDate": {
            "description": "Date-time in UTC for Effective Date of the progress note.",
            "format": "date-time",
            "type": "string"
          },
          "externalId": {
            "description": "External ID in the calling application. If an instance with the same ID already exists - the request fails with 409 error code. This id must be unique for each vendor.",
            "maxLength": 40,
            "minLength": 1,
            "type": "string"
          },
          "isEncounterNote": {
            "description": "Represents if the progress note is an encounter note or not. Possible values are 'true' or 'false'. The default value is set to true which indicates the new note will be created as an encounter note.",
            "type": "boolean"
          },
          "noteType": {
            "description": "Progress note type to categorize the notes. Progress notes are grouped using the note type, and is used by the nurses to better view the notes. This field will not accept any XML sensitive characters such as (quotes, ampersand, angle brackets, etc.)",
            "maxLength": 75,
            "minLength": 1,
            "type": "string"
          },
          "patientId": {
            "description": "PointClickCare's unique identifier for a patient within the organization.</br></br>When a patient is admitted to a facility within an organization, they are assigned a patientId which is unique to their stay within that facility. If the same patient were to get admitted to another facility within the same organization in the future, they would be assigned a new patientId. The patientId however is unique at the organization level. That is, no two patients across different facilities within the organization will have the same patientId.",
            "format": "int32",
            "minimum": 1,
            "type": "integer"
          },
          "sections": {
            "description": "List of sections for the Progress Note.",
            "items": {
              "$ref": "#/components/schemas/ProgressNoteSection"
            },
            "maxItems": 2147483647,
            "minItems": 1,
            "type": "array"
          },
          "showOnShift": {
            "description": "Determines if the progress note will appear on the shift report. If this parameter is not included in the request body, the default value will be retrieved from the PN type config.",
            "type": "boolean"
          },
          "showOn24hr": {
            "description": "Determines if the progress note will appear on the 24hr report. If this parameter is not included in the request body, the default value will be retrieved from the PN type config.",
            "type": "boolean"
          },
          "showOnComm": {
            "description": "Determines if the progress note will appear on MD/Nursing Communications Report. If this parameter is not included in the request body, the default value will be retrieved from the PN type config.",
            "type": "boolean"
          }
        },
        "required": [
          "effectiveDate",
          "externalId",
          "noteType",
          "sections"
        ],
        "title": "ProgressNote",
        "type": "object"
      },
      "ProgressNoteAddendum": {
        "description": "New Addendum for Progress Note Content",
        "example": {
          "addendumText": "Addendum 1",
          "apiCreatedDate": "2016-03-01T01:02:03.000Z",
          "providerName": "Provider Name who provided the service."
        },
        "properties": {
          "addendumText": {
            "description": "Text of Addendum in plain text format.",
            "type": "string"
          },
          "apiCreatedDate": {
            "description": "Date and time when the addendum was created. The Date and Time should be expressed in UTC in the following format YYYY-MM-DDTHH:MM:SS.sssZ.",
            "format": "date-time",
            "type": "string"
          },
          "providerName": {
            "description": "Name of the Provider who provided the service.",
            "type": "string"
          }
        },
        "required": [
          "addendumText",
          "apiCreatedDate"
        ],
        "title": "ProgressNoteAddendum",
        "type": "object"
      },
      "ProgressNoteDetails": {
        "description": "Progress note details.",
        "example": {
          "createdBy": "Jonathan Snow",
          "createdByNpi": 1234567890,
          "createdDate": "2019-05-01T13:10:32.000Z",
          "effectiveDate": "2019-05-01T13:10:32.000Z",
          "facId": 1,
          "focus": "Resident requires assistance with activities due to cognitive and physical impairments.",
          "followUpTo": {
            "createdBy": "Jonathan Snow",
            "effectiveDate": "2019-04-25T16:15:58.000Z",
            "progressNoteId": 32,
            "progressNoteType": "Nursing Note"
          },
          "orgUuid": "1750abe8-1b7c-4e26-969c-9d7076ff8c02",
          "patientId": 44,
          "progressNoteId": 69901,
          "progressNoteType": "Nursing Note",
          "sections": [
            {
              "name": "Bathing",
              "value": "Patient was able to bathe with minimal assistance. Continued improvement in their functional status."
            },
            {
              "name": "Skin Condition",
              "value": "Skin on left arm looked blistered. Continue monitoring."
            }
          ],
          "noteCode": {
            "codings": [
              {
                "system": "http://loinc.org",
                "version": "2.68",
                "code": "11506-3",
                "display": "Progress Note"
              }
            ]
          }
        },
        "properties": {
          "createdBy": {
            "description": "The PointClickCare user who completed the progress note for the patient.",
            "type": "string"
          },
          "createdByNpi": {
            "description": "National Provider ID for the PointClickCare user who completed the progress note for the patient.",
            "type": "string"
          },
          "createdDate": {
            "description": "The date and time the progress note was completed. The date and time are expressed in UTC in the following format YYYY-MM-DDTHH:MM:SS.sssZ.",
            "format": "date-time",
            "type": "string"
          },
          "effectiveDate": {
            "description": "The effective date and time the progress note was created or started. The date and time are expressed in UTC in the following format YYYY-MM-DDTHH:MM:SS.sssZ.",
            "format": "date-time",
            "type": "string"
          },
          "facId": {
            "description": "PointClickCare's unique identifier for a facility within the organization.",
            "format": "int32",
            "type": "integer"
          },
          "focus": {
            "description": "Optional field that represents the type of care plan item associated with the progress note. For example, any specific intervention, goal, or task.",
            "type": "string"
          },
          "followUpTo": {
            "$ref": "#/components/schemas/ProgressNoteFollowUp"
          },
          "orgUuid": {
            "description": "PointClickCare's unique identifier for the organization.",
            "type": "string"
          },
          "patientId": {
            "description": "PointClickCare's unique identifier for a patient within the organization.",
            "format": "int32",
            "type": "integer"
          },
          "progressNoteId": {
            "description": "Unique identification number associated with the progress note.",
            "format": "int32",
            "type": "integer"
          },
          "progressNoteType": {
            "description": "Represents the progress note type. Progress note type is used to categorize the notes.",
            "type": "string"
          },
          "sections": {
            "description": "List of all sections within the progress note.",
            "items": {
              "$ref": "#/components/schemas/ProgressNoteDetailsSection"
            },
            "type": "array"
          },
          "noteCode": {
            "description": "Represents the applicable standard code of the note.",
            "$ref": "#/components/schemas/SwitcherooCodeableConcept"
          }
        },
        "title": "ProgressNoteDetails",
        "type": "object"
      },
      "ProgressNoteDetailsSection": {
        "description": "All sections within the progress note.",
        "example": {
          "name": "Bathing",
          "value": "Patient was able to bathe with minimal assistance. Continued improvement in their functional status."
        },
        "properties": {
          "name": {
            "description": "Each section's name as titled in the progress note.",
            "type": "string"
          },
          "value": {
            "description": "The details recorded about the patient in the section of the progress note.",
            "type": "string"
          }
        },
        "title": "ProgressNoteDetailsSection",
        "type": "object"
      },
      "ProgressNoteFollowUp": {
        "description": "Represents if the progress note is a follow-up to a previous progress note.",
        "example": {
          "createdBy": "Jonathan Snow",
          "effectiveDate": "2019-04-25T16:15:58.000Z",
          "progressNoteId": 32,
          "progressNoteType": "Nursing Note"
        },
        "properties": {
          "createdBy": {
            "description": "The PointClickCare user who completed the progress note for the patient.",
            "type": "string"
          },
          "effectiveDate": {
            "description": "The effective date and time the progress note was created or started. The date and time are expressed in UTC in the following format YYYY-MM-DDTHH:MM:SS.sssZ.",
            "format": "date-time",
            "type": "string"
          },
          "progressNoteId": {
            "description": "Unique identification number associated with the progress note.",
            "format": "int32",
            "type": "integer"
          },
          "progressNoteType": {
            "description": "Represents the progress note type. Progress note type is used to categorize the notes.",
            "type": "string"
          }
        },
        "title": "ProgressNoteFollowUp",
        "type": "object"
      },
      "ProgressNoteList": {
        "description": "List of Progress Notes.",
        "example": {
          "data": [
            {
              "completed": "Y",
              "createdBy": "John Dohe",
              "createdDate": "2019-05-01T13:10:32.000Z",
              "effectiveDate": "2019-02-01T14:11:40.000Z",
              "facId": 1,
              "orgUuid": "1750abe8-1b7c-4e26-969c-9d7076ff8c02",
              "progressNoteId": 1,
              "progressNoteType": "Health Status",
              "noteCode": {
                "codings": [
                  {
                    "system": "http://loinc.org",
                    "version": "2.68",
                    "code": "11506-3",
                    "display": "Progress Note"
                  }
                ]
              }
            },
            {
              "completed": "Y",
              "createdBy": "John Smith",
              "createdDate": "2019-02-01T14:10:32.000Z",
              "effectiveDate": "2019-01-01T14:11:40.000Z",
              "facId": 1,
              "orgUuid": "1750abe8-1b7c-4e26-969c-9d7076ff8c02",
              "progressNoteId": 2,
              "progressNoteType": "PACEMAKER CHECK",
              "noteCode": {
                "codings": [
                  {
                    "system": "http://loinc.org",
                    "version": "2.68",
                    "code": "11506-3",
                    "display": "Progress Note"
                  }
                ]
              }
            },
            {
              "completed": "Y",
              "createdBy": "John Smith",
              "createdDate": "2019-02-01T14:10:32.000Z",
              "effectiveDate": "2019-03-01T14:11:40.000Z",
              "facId": 1,
              "orgUuid": "1750abe8-1b7c-4e26-969c-9d7076ff8c02",
              "progressNoteId": 3,
              "progressNoteType": "SKIN ASSESSMENT (SPN)",
              "noteCode": {
                "codings": [
                  {
                    "system": "http://loinc.org",
                    "version": "2.68",
                    "code": "11506-3",
                    "display": "Progress Note"
                  }
                ]
              }
            }
          ],
          "paging": {
            "hasMore": true,
            "page": 1,
            "pageSize": 8
          }
        },
        "properties": {
          "data": {
            "description": "List of all progress notes for the specified patient.",
            "items": {
              "$ref": "#/components/schemas/ProgressNoteSummary"
            },
            "type": "array"
          },
          "paging": {
            "$ref": "#/components/schemas/PagingResponseByPage"
          }
        },
        "title": "ProgressNoteList",
        "type": "object"
      },
      "ProgressNoteResponse": {
        "description": "Status of new Progress Note creation",
        "example": {
          "progressNoteId": 1
        },
        "properties": {
          "progressNoteId": {
            "description": "ID of created Progress Note. Use this ID for all further references to this Progress Note.",
            "format": "int32",
            "type": "integer"
          }
        },
        "title": "ProgressNoteResponse",
        "type": "object"
      },
      "ProgressNoteSection": {
        "description": "Sections for the Progress Note.",
        "example": {
          "name": "Section Name. The following section names are currently supported ['Date of Service', 'Visit Type', 'Transition of Care', 'History Details', 'Details', 'Provider', 'Signed Date']",
          "value": "Value for the section specified in the name. All values are strings and their format is left to the calling partner. There is no size limit for the value."
        },
        "properties": {
          "name": {
            "description": "Name of Progress note section. Sections are defined by the Progress Note templates.<p><b>Note 1:</b> If the Progress Note is an Encounter note, only the following sections are supported ['Date of Service', 'Visit Type', 'Transition of Care', 'History Details', 'Details', 'Provider', 'Signed Date']</br><b>Note 2:</b> The 'Provider' section is required <b><u>regardless</u></b> of the Progress Note type. A value must be provided for this section even if it is not listed in the Progress Note Template returned by the <a href=\"document?operation=com.pointclickcare.docs.apidocs.api.progressnote.operationDefinition.GetProgressNoteTypesPublicOpDef\">GET ProgressNoteTypes</a> API. The max character limit is 200.</p>",
            "type": "string"
          },
          "value": {
            "description": "Value for the section specified above. All values are strings and their format is left to the calling partner. Maximum 60,000 characters. </br></br>Note: The value for the 'Provider' section is required. The Provider name must be recorded in this section.",
            "type": "string"
          }
        },
        "title": "ProgressNoteSection",
        "type": "object"
      },
      "ProgressNoteSummary": {
        "description": "all progress notes for the specified patient.",
        "example": {
          "completed": "Y",
          "createdBy": "John Dohe",
          "createdDate": "2019-05-01T13:10:32.000Z",
          "effectiveDate": "2019-02-01T14:11:40.000Z",
          "facId": 1,
          "orgUuid": "1750abe8-1b7c-4e26-969c-9d7076ff8c02",
          "progressNoteId": 1,
          "progressNoteType": "Health Status"
        },
        "properties": {
          "completed": {
            "description": "Flag indicating if the progress note is signed or in draft status.",
            "type": "string"
          },
          "createdBy": {
            "description": "The PointClickCare user who completed the progress note for the patient.",
            "type": "string"
          },
          "createdDate": {
            "description": "The date and time the progress note was completed. The date and time are expressed in UTC in the following format YYYY-MM-DDTHH:MM:SS.sssZ.",
            "format": "date-time",
            "type": "string"
          },
          "effectiveDate": {
            "description": "The effective date and time the progress note was created or started. The date and time are expressed in UTC in the following format YYYY-MM-DDTHH:MM:SS.sssZ.",
            "format": "date-time",
            "type": "string"
          },
          "facId": {
            "description": "PointClickCare's unique identifier for a facility within the organization.",
            "format": "int32",
            "type": "integer"
          },
          "orgUuid": {
            "description": "PointClickCare's unique identifier for the organization.",
            "type": "string"
          },
          "progressNoteId": {
            "description": "Unique identification number associated with the progress note.",
            "format": "int32",
            "type": "integer"
          },
          "progressNoteType": {
            "description": "Represents the progress note type. Progress note type is used to categorize the notes.",
            "type": "string"
          },
          "noteCode": {
            "description": "Represents the applicable standard code of the note.",
            "$ref": "#/components/schemas/SwitcherooCodeableConcept"
          }
        },
        "title": "ProgressNoteSummary",
        "type": "object"
      },
      "ProgressNoteTypesSummary": {
        "description": "all progress note types data",
        "example": {
          "facId": 1,
          "highPriority": true,
          "noteType": "Physician Order",
          "orgUuid": "12345678-AAAA-4444-AAAA-000010000001",
          "progressNoteTypeId": 12,
          "sections": [
            "Data",
            "Action",
            "Recommendation"
          ],
          "showOn24HourReport": true,
          "showOnShiftReport": true
        },
        "properties": {
          "facId": {
            "description": "PointClickCare's unique identifier for a facility within the organization.",
            "format": "int32",
            "type": "integer"
          },
          "highPriority": {
            "description": "Represents whether the progress note type is among the high priority types. Possible responses are 'true' or 'false'.",
            "type": "boolean"
          },
          "noteType": {
            "description": "Represents the progress note type. These are custom defined fields defined by the facility to categorize the notes.",
            "type": "string"
          },
          "orgUuid": {
            "description": "PointClickCare's unique identifier for the organization.",
            "type": "string"
          },
          "progressNoteTypeId": {
            "description": "Identifier for the progress notes type within a facility.",
            "format": "int32",
            "type": "integer"
          },
          "sections": {
            "description": "List of sections supported for the template attached to the given type. Each array element represents the name of a supported section which can be passed in conjunction with the text value for that section when pushing in a progress note.<p><b>NOTE:</b> If you will be using the POST ProgressNote API to post a Progress Note, please note there is an additional 'Provider' section that will need to be sent <b><u>in addition</u></b> to the template fields returned through the GET ProgressNoteTypes call. The details of this section can be found <a href=\"document?operation=com.pointclickcare.docs.apidocs.api.progressnote.operationDefinition.PostProgressnoteOpDef\">here</a>.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "showOn24HourReport": {
            "description": "Represents whether the progress note type is going to show on the 24 Hour Report. Possible responses are 'true' or 'false'.",
            "type": "boolean"
          },
          "showOnShiftReport": {
            "description": "Represents whether the progress note type is going to show on the shift report. Possible responses are 'true' or 'false'.",
            "type": "boolean"
          }
        },
        "title": "ProgressNoteTypesSummary",
        "type": "object"
      },
      "PublicGetWebhookSubscription": {
        "description": "webhook subscription requests.",
        "example": {
          "applicationName": "pcc",
          "applicationType": "PRODUCTION",
          "createdDate": "2017-06-06T18:40:55.567Z",
          "enableRoomReservationCancellation": true,
          "endUrl": "https://www.testurl.com",
          "eventGroupList": [
            "ADT01",
            "ADT02"
          ],
          "includeDischarged": true,
          "includeOutpatient": true,
          "revisionDate": "2017-06-06T18:47:31.164Z",
          "status": "APPROVED",
          "username": "pcc-testcase1",
          "vendorExternalId": "2b87c6a7-4bf4-4ef5-b78f-db274544e4e5",
          "webhookSubscriptionId": 196
        },
        "properties": {
          "action": {
            "description": "Represents the action applied to the app's webhook subscription. Possible values are - <br /><ul><li>SUBSCRIBE</li><li>UNSUBSCRIBE</li></ul>",
            "enum": [
              "SUBSCRIBE",
              "UNSUBSCRIBE"
            ],
            "type": "string"
          },
          "applicationName": {
            "description": "Represents your application's name as seen on the Developer Portal under My apps > Details > Application Name.",
            "type": "string"
          },
          "applicationType": {
            "description": "Represents whether your application is to be used in a Sandbox environment or in Production. Possible values are 'SANDBOX' or 'PRODUCTION'.",
            "enum": [
              "SANDBOX",
              "PRODUCTION"
            ],
            "type": "string"
          },
          "createdDate": {
            "description": "Represents the date and time when the subscription request was created.",
            "format": "date-time",
            "type": "string"
          },
          "currentSubscription": {
            "description": "List of webhook Org Status",
            "items": {
              "$ref": "#/components/schemas/WebhookSubscriptionStatus"
            },
            "type": "array",
            "uniqueItems": true
          },
          "enableRoomReservationCancellation": {
            "description": "Represents the notification of the cancellation of a room reservation for the patient. Possible values are 'true' or 'false'.",
            "type": "boolean"
          },
          "endUrl": {
            "description": "Represents the URL for the webservice where the events are sent.",
            "type": "string"
          },
          "eventGroupList": {
            "description": "Array of event group names subscribed for your app in the webhook subscription request.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "includeDischarged": {
            "description": "Represents whether your app is subscribed to reveive events for discharged patients or not. Possible values are 'true' or false'.",
            "type": "boolean"
          },
          "includeOutpatient": {
            "description": "Represents whether your app is subscribed to receive events for outpatients or not. Possible values are 'true' or 'false'.",
            "type": "boolean"
          },
          "revisionDate": {
            "description": "Represents the date and time when the subscription request was last updated.",
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "description": "Represents the status for your webhook subscription status. Possible Values are 'PENDING, 'APPROVED', 'CANCELLED', 'REJECTED', and 'RETIRED'. When a webhook subscription request is submitted for a Production app, it is in the 'PENDING' state. PointClickCare reviews the webhook subscription request and approves or rejects it. The status becomes 'APPROVED' or 'REJECTED' respectively. If a new webhook subscription request is received for the application, the previously active subscription for the application remains 'APPROVED' until the new one is approved. When the latest webhook subscription request is approved, the previously approved subscription is changed to 'RETIRED'.",
            "enum": [
              "PENDING",
              "APPROVED",
              "CANCELLED",
              "REJECTED",
              "RETIRED",
              "PARTIAL_APPROVED"
            ],
            "type": "string"
          },
          "username": {
            "description": "The username for your webservice.",
            "type": "string"
          },
          "vendorExternalId": {
            "description": "A unique identifier that allows vendors to receive targeted webhook notifications. The identifier will be provided to the Vendor by PointClickCare, if the Use case supports it.",
            "type": "string"
          },
          "webhookSubscriptionId": {
            "description": "Unique identifier for the webhook subscription request.",
            "format": "int32",
            "type": "integer"
          }
        },
        "title": "PublicGetWebhookSubscription",
        "type": "object"
      },
      "PublicGetWebhookSubscriptionList": {
        "description": "List of webhook subscriptions.",
        "example": {
          "data": [
            {
              "action": "SUBSCRIBE",
              "applicationName": "pcc",
              "applicationType": "PRODUCTION",
              "createdDate": "2017-06-06T18:40:55.567Z",
              "currentSubscription": [
                {
                  "action": "SUBSCRIBE",
                  "orgUuid": "a60aba9f-ab02-48fa-b7e6-08c1efb93d32",
                  "status": "FAILED"
                },
                {
                  "action": "SUBSCRIBE",
                  "orgUuid": "a60aba9f-ab02-48fa-b7e6-08c1efb93d32",
                  "status": "PROCESSING"
                },
                {
                  "action": "UNSUBSCRIBE",
                  "orgUuid": "a60aba9f-ab02-48fa-b7e6-08c1efb93d32",
                  "status": "SUCCESS"
                }
              ],
              "enableRoomReservationCancellation": true,
              "endUrl": "https://www.testurl.com",
              "eventGroupList": [
                "ADT01",
                "ADT02"
              ],
              "includeDischarged": true,
              "includeOutpatient": true,
              "revisionDate": "2017-06-06T18:47:31.164Z",
              "status": "APPROVED",
              "username": "pcc-testcase1",
              "vendorExternalId": "2b87c6a7-4bf4-4ef5-b78f-db274544e4e5",
              "webhookSubscriptionId": 1963
            }
          ],
          "paging": {
            "hasMore": false,
            "page": 1,
            "pageSize": 50
          }
        },
        "properties": {
          "data": {
            "description": "List of webhook subscription requests.",
            "items": {
              "$ref": "#/components/schemas/PublicGetWebhookSubscription"
            },
            "type": "array"
          },
          "paging": {
            "$ref": "#/components/schemas/PagingResponseByPage"
          }
        },
        "title": "PublicGetWebhookSubscriptionList",
        "type": "object"
      },
      "PublicImmunization": {
        "description": "immunizations.",
        "example": {
          "administeredBy": "John Smith",
          "administrationDateTime": "2016-02-01T04:45:15.000Z",
          "amountAdministered": {
            "unit": "ml",
            "value": 0.1
          },
          "consentConfirmedBy": "James",
          "consentConfirmedDate": "2016-02-01",
          "consentStatus": "Consented",
          "createdBy": "james",
          "createdDateTime": "2016-02-01T04:45:15.000Z",
          "cvxCode": "97",
          "cvxDescription": "tuberculin skin test; purified protein derivative, multipuncture device",
          "educationProvided": true,
          "educationProvidedBy": "Sam Ackers",
          "educationProvidedDate": "2016-02-01",
          "given": true,
          "immunization": "TB 2 Step Mantoux Skin Test",
          "immunizationId": 102892,
          "induration": 0.8,
          "locationGiven": "Left Forearm",
          "lotNumber": "98A7B6D",
          "manufacturerName": "Roche",
          "multiStep": true,
          "nextStepRequired": true,
          "notes": "Mild Erythema observed.",
          "patientId": 938,
          "results": "Positive",
          "resultsPending": false,
          "revisionBy": "james",
          "revisionDateTime": "2016-02-01T04:45:15.000Z",
          "routeOfAdministration": "intradermally",
          "step": 1,
          "substanceExpirationDate": "2021-08-07",
          "trackResults": true
        },
        "properties": {
          "administeredBy": {
            "description": "Represents the name and login name of the PointClickCare user who administered the immunization to the patient.",
            "type": "string"
          },
          "administrationDateTime": {
            "description": "Represents the date and time when the immunization was administered to the patient. This field is present if 'given' is set to true. The date is expressed in UTC in the following format: YYYY-MM-DDTHH:MM:SS.sssZ.",
            "format": "date-time",
            "type": "string"
          },
          "amountAdministered": {
            "$ref": "#/components/schemas/AdministeredAmount"
          },
          "consentConfirmedBy": {
            "description": "Represents the login name for the PointClickCare user who recorded the patient's consent for the immunization.",
            "type": "string"
          },
          "consentConfirmedDate": {
            "description": "Represents the date when the patient or their family were educated with regards to the immunization. The date is expressed in UTC in the following format:YYYY-MM-DD.",
            "format": "date",
            "type": "string"
          },
          "consentStatus": {
            "description": "Represents the patient's consent for the immunization. Possible values are 'TBD', 'Consented', 'Refused', 'Historical', 'notEligible'.",
            "type": "string"
          },
          "createdBy": {
            "description": "The recorded client/user name who created the immunization record.",
            "type": "string"
          },
          "createdDateTime": {
            "description": "Represents the date/time when the immunization record was first created. The date is expressed in UTC in the following format: YYYY-MM-DDTHH:MM:SS.sssZ.",
            "format": "date-time",
            "type": "string"
          },
          "cvxCode": {
            "description": "Represents the CVX code for the immunization if defined, if available.",
            "type": "string"
          },
          "cvxDescription": {
            "description": "Represents the full-name vaccine name for the immunization if defined, if available.",
            "type": "string"
          },
          "educationProvided": {
            "description": "Represents whether if the patient or their family have been educated with regards to the immunization.",
            "type": "boolean"
          },
          "educationProvidedBy": {
            "description": "Represents who provided the patient or their family education with regards to the immunization.",
            "type": "string"
          },
          "educationProvidedDate": {
            "description": "Represents the date when the patient or their family were educated with regards to the immunization. The date is expressed in UTC in the following format:YYYY-MM-DD.",
            "format": "date",
            "type": "string"
          },
          "given": {
            "description": "Represents if an immunization was administered or not. If this field is 'true', then administration date and time will be present.",
            "type": "boolean"
          },
          "immunization": {
            "description": "Represents the immunization.",
            "type": "string"
          },
          "immunizationId": {
            "description": "The unique identifier for the immunization record.",
            "format": "int32",
            "type": "integer"
          },
          "induration": {
            "description": "Represents the recorded induration in millimeters (mm) for immunizations that require results to be tracked, i.e. trackResults is 'true'.",
            "format": "double",
            "type": "number"
          },
          "locationGiven": {
            "description": "Represents the location where the immunization was administered. Possible values are 'Left Deltoid', 'Right Deltoid', 'Left Forearm', 'Right Forearm', 'Left Hip', 'Right Hip', 'Left Buttock', 'Right Buttock', 'Left Thigh', 'Right Thigh'.",
            "type": "string"
          },
          "lotNumber": {
            "description": "Represents the immunization's lot number found on the immunization label or accompanying packaging, if recorded.",
            "type": "string"
          },
          "manufacturerName": {
            "description": "Represents the name of the immunizations manufacturer, if recorded.",
            "type": "string"
          },
          "multiStep": {
            "description": "Represents if the vaccination is to be administered in multiple steps. This is true for 'TB 2 Step Mantoux Skin Test'.",
            "type": "boolean"
          },
          "nextStepRequired": {
            "description": "Represents if the next step for the vaccination is required or not. This field is only applicable for immunizations that are multi step.",
            "type": "boolean"
          },
          "notes": {
            "description": "Free text notes entered for the immunization record. Notes can be added at the time of obtaining consent from the patient, administering an immunization, or even later.",
            "type": "string"
          },
          "patientId": {
            "description": "PointClickCare's unique identifier for a patient within the organization.</br></br>When a patient is admitted to a facility within an organization, they are assigned a patientId which is unique to their stay within that facility. If the same patient were to get admitted to another facility within the same organization in the future, they would be assigned a new patientId. The patientId however is unique at the organization level. That is, no two patients across different facilities within the organization will have the same patientId.",
            "format": "int32",
            "type": "integer"
          },
          "reasonNotEligible": {
            "description": "Represents the reason the patient is not eligible for the immunization. This field is present if 'consentStatus' is 'notEligible'. Possible values are: <ul><li>'Admitted after flu season'</li><li>'Allergies'</li><li>'Contraindicated'</li><li>'Had Previously / Not Due'</li><li>'Illness / Medical Condition'</li><li>'MD Refused'</li><li>'No consent'</li><li>'Not offered'</li><li>'Vaccine Unavailable'</li></ul>",
            "type": "string"
          },
          "reasonRefused": {
            "description": "Represents the reason the immunization was refused. This field is present if 'consentStatus' is 'Refused'. Possible values are: <ul><li>'Family Refused'</li><li>'POA Refused'</li><li>'Religious Beliefs'</li><li>'Resident Refused'</li><li>'Vaccine Safety Concerns'</li><li>'Vaccine Efficacy Concerns'</li><li>'Philosophical Objection'</li></ul>",
            "type": "string"
          },
          "results": {
            "description": "Represents the recorded results after administering an immunization that requires results to be tracked. Possible values are 'Positive', 'Negative' and 'Unable to Determine'.",
            "type": "string"
          },
          "resultsPending": {
            "description": "Represents if results are pending for an administered immunization that requires results to be tracked.",
            "type": "boolean"
          },
          "revisionBy": {
            "description": "The recorded client/user name who last revised the immunization record.",
            "type": "string"
          },
          "revisionDateTime": {
            "description": "The recorded date the immunization record was last revised. The date and time are expressed in UTC in the following format YYYY-MM-DDTHH:MM:SS.sssZ.",
            "format": "date-time",
            "type": "string"
          },
          "routeOfAdministration": {
            "description": "Represents the route by which the immunization was administered to the patient, if recorded. If recorded, the possible values are 'by mouth', 'in both nostrils', 'in each nostril', 'intradermally', 'intramuscularly', 'orally','subcutaneously'.",
            "type": "string"
          },
          "step": {
            "description": "Represents the step for the immunization record. This is only applicable for TB 2 Step Mantoux Skin Test which is a multi-step immunization, i.e. 'multiStep' is true.",
            "format": "int32",
            "type": "integer"
          },
          "substanceExpirationDate": {
            "description": "Represents the expiration date for the immunization, if recorded. The date is expressed in UTC in the following format: YYYY-MM-DD.",
            "format": "date-time",
            "type": "string"
          },
          "trackResults": {
            "description": "Represents if the immunization requires results to be tracked. This is true for TB vaccines.",
            "type": "boolean"
          }
        },
        "title": "PublicImmunization",
        "type": "object"
      },
      "PublicImmunizationListResponse": {
        "description": "List of immunizations.",
        "example": {
          "data": [
            {
              "administeredBy": "John Smith",
              "administrationDateTime": "2016-02-01T04:45:15.000Z",
              "amountAdministered": {
                "unit": "ml",
                "value": 0.1
              },
              "consentConfirmedBy": "James",
              "consentConfirmedDate": "2016-02-01",
              "consentStatus": "Consented",
              "createdBy": "james",
              "createdDateTime": "2016-02-01T04:45:15.000Z",
              "cvxCode": "97",
              "cvxDescription": "tuberculin skin test; purified protein derivative, multipuncture device",
              "educationProvided": true,
              "educationProvidedBy": "Sam Ackers",
              "educationProvidedDate": "2016-02-01",
              "given": true,
              "immunization": "TB 2 Step Mantoux Skin Test",
              "immunizationId": 102892,
              "induration": 0.8,
              "locationGiven": "Left Forearm",
              "lotNumber": "98A7B6D",
              "manufacturerName": "Roche",
              "multiStep": true,
              "nextStepRequired": true,
              "notes": "Mild Erythema observed.",
              "patientId": 938,
              "results": "Positive",
              "resultsPending": false,
              "revisionBy": "james",
              "revisionDateTime": "2016-02-01T04:45:15.000Z",
              "routeOfAdministration": "intradermally",
              "step": 1,
              "substanceExpirationDate": "2021-08-07",
              "trackResults": true
            },
            {
              "consentConfirmedBy": "svaughn",
              "consentConfirmedDate": "2016-02-01",
              "consentStatus": "Consented",
              "createdBy": "svaughn",
              "createdDateTime": "2016-02-01T04:45:15.000Z",
              "educationProvided": false,
              "given": false,
              "immunization": "Influenza",
              "immunizationId": 102893,
              "induration": 0,
              "multiStep": false,
              "patientId": 938,
              "revisionBy": "svaughn",
              "revisionDateTime": "2016-02-01T04:45:15.000Z",
              "trackResults": false
            },
            {
              "consentConfirmedBy": "svaughn",
              "consentConfirmedDate": "2016-01-22",
              "consentStatus": "Refused",
              "createdBy": "svaughn",
              "createdDateTime": "2016-01-22T04:45:15.000Z",
              "cvxCode": "140",
              "cvxDescription": "Influenza, seasonal, injectable, preservative free",
              "educationProvided": false,
              "given": false,
              "immunization": "Influenza",
              "immunizationId": 103862,
              "induration": 0,
              "multiStep": false,
              "notes": "Son Michael refused immunization.",
              "patientId": 938,
              "reasonRefused": "Family Refused",
              "revisionBy": "svaughn",
              "revisionDateTime": "2016-02-01T04:45:15.000Z",
              "trackResults": false
            },
            {
              "consentConfirmedBy": "svaughn",
              "consentConfirmedDate": "2016-05-01",
              "consentStatus": "Not Eligible",
              "createdBy": "svaughn",
              "createdDateTime": "2016-05-01T04:45:15.000Z",
              "cvxCode": "12",
              "cvxDescription": "diphtheria antitoxin",
              "educationProvided": false,
              "given": false,
              "immunization": "Diphtheria",
              "immunizationId": 104857,
              "induration": 0,
              "multiStep": false,
              "patientId": 938,
              "reasonNotEligible": "Had Previously / Not Due",
              "revisionBy": "svaughn",
              "revisionDateTime": "2016-02-01T04:45:15.000Z",
              "trackResults": false
            },
            {
              "administrationDateTime": "2016-03-01T04:40:15.000Z",
              "amountAdministered": {
                "unit": "ml",
                "value": 0.5
              },
              "consentConfirmedBy": "svaughn",
              "consentConfirmedDate": "2016-03-01",
              "consentStatus": "Consented",
              "createdBy": "svaughn",
              "createdDateTime": "2016-03-01T04:45:15.000Z",
              "educationProvided": false,
              "given": true,
              "immunization": "Pneumovax Dose 1",
              "immunizationId": 145893,
              "locationGiven": "Left Deltoid",
              "lotNumber": "A4-560900",
              "manufacturerName": "GSX",
              "multiStep": false,
              "patientId": 938,
              "revisionBy": "svaughn",
              "revisionDateTime": "2016-02-01T04:45:15.000Z",
              "routeOfAdministration": "intramuscularly",
              "substanceExpirationDate": "2019-06-27",
              "trackResults": true
            }
          ],
          "paging": {
            "hasMore": false,
            "page": 1,
            "pageSize": 50
          }
        },
        "properties": {
          "data": {
            "description": "List of immunizations.",
            "items": {
              "$ref": "#/components/schemas/PublicImmunization"
            },
            "type": "array"
          },
          "paging": {
            "$ref": "#/components/schemas/PagingResponseByPage"
          }
        },
        "title": "PublicImmunizationListResponse",
        "type": "object"
      },
      "PutCalendarEvent": {
        "description": "Put Calendar Event",
        "example": {
          "description": "Bingo Night",
          "endDateTime": "2016-11-30T20:30:00.000Z",
          "eventType": "Bingo",
          "facId": 2,
          "location": "Building 2 Recreation Room",
          "maxNumberOfParticipants": 10,
          "notes": "Snacks to be provided",
          "otherPersonnel": "Jeff Smith, Joe Smith",
          "participantIds": [
            123456,
            3434443,
            3025156
          ],
          "resources": [
            "Bingo Cards",
            "Markers"
          ],
          "startDateTime": "2016-11-30T19:30:00.000Z"
        },
        "properties": {
          "description": {
            "description": "Description of the event. Max of 200 characters.",
            "type": "string"
          },
          "endDateTime": {
            "description": "End date & time of the event. Must be in 5-minute increments, without seconds nor milliseconds, starting on the hour (for example 2018-09-25T20:35:00.000Z).",
            "format": "date-time",
            "type": "string"
          },
          "eventType": {
            "description": "Types of events facility patients can attend. Is defined by facility users. Only 1 facility defined eventType can be specified for an event. Values can be obtained by calling the EventConfigurations API.",
            "type": "string"
          },
          "facId": {
            "description": "PointClickCare's unique identifier for a facility within the organization. If this is included in the request, the event will be updated as a facility level event. Otherwise, the event will be updated as a patient specific event.",
            "format": "int32",
            "minimum": 1,
            "type": "integer"
          },
          "location": {
            "description": "Locations where events can be held. Is defined by facility users. Only 1 facility defined location can be specified for an event. Values can be obtained by calling the EventConfigurations API.",
            "type": "string"
          },
          "maxNumberOfParticipants": {
            "description": "The maximum number of participants that can attend the event. The maximum value is 500. This field is specific to facility/community level events.",
            "format": "int32",
            "maximum": 500,
            "type": "integer"
          },
          "notes": {
            "description": "Additional details of the event. Max of 200 characters.",
            "maxLength": 200,
            "minLength": 0,
            "type": "string"
          },
          "otherPersonnel": {
            "description": "Other personnel that may be required to assist with the event. Max of 120 characters.",
            "maxLength": 120,
            "minLength": 0,
            "type": "string"
          },
          "participantIds": {
            "description": "PointClickCare's unique identifiers for participants (participantId's) that are signed up to attend the event. If the event is to be updated as a patient specific event, then an array containing only the patient's ID must be passed in. A max of 500 patient IDs can be supported through this field.",
            "items": {
              "format": "int32",
              "type": "integer"
            },
            "type": "array"
          },
          "resources": {
            "description": "Types of resources required for events at the facility. Is defined by facility users. Multiple resources can be specified for an event. Values can be obtained by calling the EventConfigurations API.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "startDateTime": {
            "description": "Start date & time of the event. Must be in 5-minute increments, without seconds nor milliseconds, starting on the hour (for example 2018-09-25T20:35:00.000Z).",
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "endDateTime",
          "startDateTime"
        ],
        "title": "PutCalendarEvent",
        "type": "object"
      },
      "RacePickListItem": {
        "description": "",
        "example": {
          "description": "Asian",
          "id": 1
        },
        "properties": {
          "description": {
            "description": "Description of the pick list value for race.",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the pick list value for race.",
            "format": "int32",
            "type": "integer"
          }
        },
        "title": "RacePickListItem",
        "type": "object"
      },
      "RadiologyProcedureDetails": {
        "description": " ",
        "example": {
          "comment": "this is a comment\nwith line breaks",
          "conclusion": "mild scoliosis",
          "identifier": {
            "code": "72082",
            "display": "X-ray exam entire spi 2/3 vw",
            "system": "http://www.ama-assn.org/go/cpt"
          }
        },
        "properties": {
          "comment": {
            "description": "Notes/comments associated with the diagnostic procedure. Line breaks are represented by \\n, carriage returns by \\r and and a combination of both is represented by \\r\\n. Backslashes in the text must be represented as \\\\\\\\.",
            "type": "string"
          },
          "conclusion": {
            "description": "Concise and clinically contextualized impression or summary of the diagnostic results.",
            "type": "string"
          },
          "identifier": {
            "$ref": "#/components/schemas/RadiologyProcedureDetailsIdentifier"
          }
        },
        "title": "RadiologyProcedureDetails",
        "type": "object"
      },
      "RadiologyProcedureDetailsIdentifier": {
        "description": "Represents the radiology procedure performed.",
        "example": {
          "code": "72082",
          "display": "X-ray exam entire spi 2/3 vw",
          "system": "http://www.ama-assn.org/go/cpt"
        },
        "properties": {
          "code": {
            "description": "Represents the code for the diagnostic procedure.<br><br>Note: Limit of 50 characters.<br>Note: If a radiologyProcedureDetails.identifier is being sent, this field is required.<br>Note: Cannot be empty string.",
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "display": {
            "description": "Represents the description of the code.<br><br>Note: Limit of 500 characters.<br>Note: If a radiologyProcedureDetails.identifier is being sent, this field is required.<br>Note: Cannot be empty string.",
            "maxLength": 500,
            "minLength": 0,
            "type": "string"
          },
          "system": {
            "description": "Represents the code system. For Radiology reports, CPT is used as the code system in PCC. Can be a URL.<br><br>Current Procedural Terminology (CPT): <a href=\"https://www.ama-assn.org/practice-management/cpt-current-procedural-terminology\" target=\"_blank\">https://www.ama-assn.org/practice-management/cpt-current-procedural-terminology</a><br><br>If other codes are passed, only the CPT code will be saved. <br><br>Note: Limit of 500 characters.<br>Note: If a radiologyProcedureDetails.identifier is being sent, this field is required.<br>Note: Cannot be empty string.",
            "maxLength": 500,
            "minLength": 0,
            "type": "string"
          }
        },
        "title": "RadiologyProcedureDetailsIdentifier",
        "type": "object"
      },
      "ReligionPickListItem": {
        "description": "",
        "example": {
          "description": "Buddist",
          "id": 1
        },
        "properties": {
          "description": {
            "description": "Description of the pick list value for religion.",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the pick list value for religion.",
            "format": "int32",
            "type": "integer"
          }
        },
        "title": "ReligionPickListItem",
        "type": "object"
      },
      "Room": {
        "description": "Facility rooms.",
        "example": {
          "amenities": [
            {
              "description": "Private Bathroom",
              "id": 12528
            },
            {
              "description": "Flat Screen TV",
              "id": 12538
            }
          ],
          "facId": 1,
          "floorId": 1,
          "orgUuid": "1750abe8-1b7c-4e26-969c-9d7076ff8c02",
          "roomDesc": "201",
          "roomId": 1,
          "unitId": 94
        },
        "properties": {
          "amenities": {
            "description": "Array of amenities assigned to the room in PointClickCare.",
            "items": {
              "$ref": "#/components/schemas/Amenity"
            },
            "type": "array"
          },
          "facId": {
            "description": "PointClickCare's unique identifier for a facility within the organization.",
            "format": "int32",
            "type": "integer"
          },
          "floorId": {
            "description": "PointClickCare's unique identifier for a floor within the facility.",
            "format": "int32",
            "type": "integer"
          },
          "orgUuid": {
            "description": "PointClickCare's unique identifier for the organization.",
            "type": "string"
          },
          "roomDesc": {
            "description": "A description of the room within a facility.",
            "type": "string"
          },
          "roomId": {
            "description": "PointClickCare's unique identifier for a room within the facility.",
            "format": "int32",
            "type": "integer"
          },
          "unitId": {
            "description": "PointClickCare's unique identifier for a unit within the facility.",
            "format": "int32",
            "type": "integer"
          }
        },
        "title": "Room",
        "type": "object"
      },
      "RoomWithBeds": {
        "description": "Facility beds.",
        "example": {
          "beds": [
            {
              "description": "A",
              "id": 1,
              "isCompanionBed": true,
              "isMedicaidCertified": false,
              "isMedicareCertified": true,
              "isOccupied": true
            },
            {
              "description": "B",
              "id": 2,
              "isCompanionBed": true,
              "isMedicaidCertified": true,
              "isMedicareCertified": false,
              "isOccupied": false
            }
          ],
          "facId": 1,
          "orgUuid": "1750abe8-1b7c-4e26-969c-9d7076ff8c02",
          "roomId": 1
        },
        "properties": {
          "beds": {
            "description": "List of beds assigned to the room in PointClickCare.",
            "items": {
              "$ref": "#/components/schemas/Bed"
            },
            "type": "array"
          },
          "facId": {
            "description": "PointClickCare's unique identifier for a facility within the organization.",
            "format": "int32",
            "type": "integer"
          },
          "orgUuid": {
            "description": "PointClickCare's unique identifier for the organization.",
            "type": "string"
          },
          "roomId": {
            "description": "PointClickCare's unique identifier for a room within the facility.",
            "format": "int32",
            "type": "integer"
          }
        },
        "title": "RoomWithBeds",
        "type": "object"
      },
      "SaveCarePeriodResponse": {
        "description": "New care period record.",
        "example": {
          "carePeriodId": 8989111
        },
        "properties": {
          "carePeriodId": {
            "description": "ID used to associate a record with a particular period of care delivered to a patient at an organization.",
            "format": "int32",
            "type": "integer"
          }
        },
        "title": "SaveCarePeriodResponse",
        "type": "object"
      },
      "Schedule": {
        "description": "schedules for this medication.",
        "example": {
          "orderScheduleId": 786541,
          "directions": "Give 80 mg by mouth one time a day for headache",
          "dose": "81",
          "doseUOM": "mg",
          "endDateTime": "2016-04-17T12:59:00.000Z",
          "frequency": "one time a day",
          "indicationsForUse": "headache",
          "lastAdministration": {
            "administeredAmount": "81mg",
            "administeredBy": "asmith",
            "administeredDateTime": "2020-11-30T19:06:18.817Z",
            "code": "16",
            "codeDescription": "Partial Administration",
            "unableToAdminister": false
          },
          "scheduleType": "Everyday",
          "startDateTime": "2016-03-18T13:00:00.000Z"
        },
        "properties": {
          "codeableDoseUOM": {
            "description": "Dose unit of measure codeable concept",
            "items": {
              "$ref": "#/components/schemas/CodeableDoseUOM"
            },
            "type": "array"
          },
          "directions": {
            "description": "Administration directions for each schedule, indications for use and other related text.",
            "type": "string"
          },
          "dose": {
            "description": "The quantity of the medication.",
            "type": "string"
          },
          "doseUOM": {
            "description": "Unit of measure for medication quantity. Can be in metric units, imperial units or 'each' e.g. 'Capsule'.<br/>PointClickCare supported Units of measure are listed below:<ul><li>application</li><li>applicator</li><li>applicatorful</li><li>bar</li><li>blister</li><li>buccal system</li><li>can</li><li>caplet</li><li>capsule</li><li>cc</li><li>centimeter</li><li>device</li><li>dose</li><li>drop</li><li>each</li><li>gram</li><li>film</li><li>gum</li><li>implant</li><li>inch</li><li>inhalation</li><li>insert</li><li>IU</li><li>IUD</li><li>kilogram</li><li>kit</li><li>lancet</li><li>liter</li><li>lozenge</li><li>mcg</li><li>mcg/hr</li><li>mcg/min</li><li>mCi</li><li>mEq</li><li>mg</li><li>mg/ml</li><li>ml/hr</li><li>mMol</li><li>million units</li><li>ml</li><li>milligram</li><li>milliliter</li><li>milliunit</li><li>oral strips</li><li>ounce</li><li>packet</li><li>pad</li><li>patch</li><li>PE units</li><li>pen needle</li><li>piece</li><li>puff</li><li>pump</li><li>ribbon</li><li>ring</li><li>sachet</li><li>scoop</li><li>sponge</li><li>spray</li><li>stick</li><li>strip</li><li>suppository</li><li>swab</li><li>syringe</li><li>tablet</li><li>tampon</li><li>tbsp</li><li>troche</li><li>tsp</li><li>unit</li><li>unspecified</li><li>vial</li><li>wafer</li></ul>Note: If dose details are being sent, this field is required<br/>Note: If the administration.route is set to 'topically', this field should not be used. Otherwise this field is required.",
            "type": "string"
          },
          "endDateTime": {
            "description": "The end date and time of schedule. Date and time are expressed in UTC (Coordinated Universal Time), with a special UTC designator (\"Z\").",
            "format": "date-time",
            "type": "string"
          },
          "frequency": {
            "description": "Predefined list of possible medication administration frequencies from PointClickCare. <br/>PointClickCare supported Units of measure are listed below:<ul> <li>one time a day</li> <li>in the morning</li> <li>in the afternoon</li> <li>in the evening</li> <li>at bedtime</li> <li>two times a day</li> <li>three times a day</li> <li>before meals</li> <li>after meals</li> <li>with meals</li> <li>four times a day</li> <li>before meals and at bedtime</li> <li>five times a day</li> <li>every hour</li> <li>after meals and at bedtime</li> <li>every morning and at bedtime</li> <li>every shift</li> <li>every day shift</li> <li>every evening shift</li> <li>every night shift</li> <li>every day and night shift</li> <li>every day and evening shift</li> <li>every evening and night shift</li> <li>every 2 hours</li> <li>every 3 hours</li> <li>every 4 hours</li> <li>every 5 hours</li> <li>every 6 hours</li> <li>every 8 hours</li> <li>every 10 hours</li> <li>every 12 hours</li> <li>every 16 hours</li> <li>every 18 hours</li> <li>every 24 hours</li> <li>every 30 hours</li> <li>every 36 hours</li> <li>every 48 hours</li> <li>every 60 hours</li> <li>every 72 hours</li> <li>every 96 hours</li> </ul>",
            "type": "string"
          },
          "indicationsForUse": {
            "description": "Indications for which medication was administered.",
            "type": "string"
          },
          "orderScheduleId": {
            "description": "Unique id which associate the schedule with the order.",
            "format": "int32",
            "type": "integer"
          },
          "scheduleType": {
            "description": "Predefined list of possible medication administration schedule types from PointClickCare.<br/>PointClickCare supported schedule types are listed below:<ul> <li>Everyday</li> <li>Every X Day(s)</li> <li>Specific Day(s) of Week</li> <li>Days On/Days Off</li> <li>PRN</li> <li>Odd Days</li> <li>Even Days</li> <li>Specific Days of Month</li> <li>Every Other Day</li> <li>One Time Only</li> <li>Every X Month(s)</li> <li>STAT</li> </ul>",
            "type": "string"
          },
          "scheduleTemplate": {
            "description": "Schedule template value.<br/>PointClickCare supported schedule templates are listed below:<ul> <li>PRN</li> <li>Routine</li> <li>Titration</li> <li>One Time Only</li> <li>STAT</li> </ul>",
            "type": "string"
          },
          "startDateTime": {
            "description": "The start date and time of schedule. Date and time are expressed in UTC (Coordinated Universal Time), with a special UTC designator (\"Z\").",
            "format": "date-time",
            "type": "string"
          },
          "lastAdministration": {
            "description": "Last medication administration details for the schedule.",
            "items": {
              "$ref": "#/components/schemas/LastAdministration",
              "type": "array"
            }
          }
        },
        "title": "Schedule",
        "type": "object"
      },
      "ServiceConfiguration": {
        "description": "A list of service task configurations associated with the facility.",
        "example": {
          "allowDocumentationPeriod": 5,
          "dueNowPeriod": 5,
          "isBatchUpdateEnabled": true,
          "lateEntryPeriod": 1,
          "overduePeriod": 5,
          "patientCarePlan": {
            "applicableToCareGivers": true,
            "id": -52,
            "type": "CARE_PLAN"
          },
          "standardBehaviorTrackingLevel": "CATEGORY",
          "standardResponses": [
            {
              "code": "-99",
              "description": "Resident Not Available",
              "isResponseForFollowUpQuestions": true,
              "isResponseForMDSQuestions": true
            },
            {
              "code": "-98",
              "description": "Resident Refused",
              "isResponseForFollowUpQuestions": true,
              "isResponseForMDSQuestions": true
            },
            {
              "code": "-97",
              "description": "Not Applicable",
              "isResponseForFollowUpQuestions": true,
              "isResponseForMDSQuestions": true
            }
          ],
          "timeTracking": true,
          "trackUnscheduledTasks": true
        },
        "properties": {
          "allowDocumentationPeriod": {
            "description": "The period, in minutes, before the scheduled time in which a service task can be documented.",
            "format": "int32",
            "type": "integer"
          },
          "dueNowPeriod": {
            "description": "The period, in minutes, before the scheduled time in which a service task can be completed.",
            "format": "int32",
            "type": "integer"
          },
          "isBatchUpdateEnabled": {
            "description": "Indicates whether all tasks can be bulk updated using the 'Resident Not Available' response.",
            "type": "boolean"
          },
          "lateEntryPeriod": {
            "description": "The period, in hours, after the scheduled time in which documentation for a service task is considered a late entry.",
            "format": "int32",
            "type": "integer"
          },
          "overduePeriod": {
            "description": "The period, in minutes, after the scheduled time in which a service task is considered overdue.",
            "format": "int32",
            "type": "integer"
          },
          "patientCarePlan": {
            "$ref": "#/components/schemas/PatientCarePlan"
          },
          "standardBehaviorTrackingLevel": {
            "description": "Indicates the level of response, category vs. detailed, required for standard behavior-related documentation. Possible values: CATEGORY, DETAILED.",
            "type": "string"
          },
          "standardResponses": {
            "description": "List of a list of standard responses available for all service tasks.",
            "items": {
              "$ref": "#/components/schemas/StandardResponse"
            },
            "type": "array"
          },
          "timeTracking": {
            "description": "Indicates if time tracking is enabled for the facility.",
            "type": "boolean"
          },
          "trackUnscheduledTasks": {
            "description": "Indicates whether unscheduled tasks can be documented for the facility.",
            "type": "boolean"
          }
        },
        "title": "ServiceConfiguration",
        "type": "object"
      },
      "LastAdministration": {
        "description": "Last medication administration details for the schedule.",
        "example": {
          "administeredAmount": "81mg",
          "administeredBy": "asmith",
          "administeredDateTime": "2020-11-30T19:06:19.207Z",
          "code": "16",
          "codeDescription": "Partial Administration",
          "unableToAdminister": false
        },
        "properties": {
          "administeredAmount": {
            "description": "The quantity of medication last administered.",
            "type": "string"
          },
          "administeredBy": {
            "description": "Represents the login name for the PointClickCare user who administered the medication.",
            "type": "string"
          },
          "administeredDateTime": {
            "description": "The last administration date and time when the medication was administered to the patient. The date is expressed in UTC in the following format:YYYY-MM-DDTHH:MM:SS.sssZ.",
            "format": "date-time",
            "type": "string"
          },
          "code": {
            "description": "This code is provided if the medication administration was not completed.",
            "type": "string"
          },
          "codeDescription": {
            "description": "Text description of the code.",
            "type": "string"
          },
          "unableToAdminister": {
            "description": "A true flag indicate that the patient refused to take the medication. A false flag would mean the medication was administered to the patient.",
            "type": "boolean"
          }
        },
        "title": "LastAdministration",
        "type": "object"
      },
      "Simulation": {
        "description": "Simulation",
        "example": {
          "eventType": "patient.transfer",
          "patientId": 1234
        },
        "properties": {
          "eventType": {
            "description": "Type of the event that you want to simulate. The list of available events can be viewed at the <a href='/spa/documentation/supported-events-webhooks'>Supported Webhook Events</a> page.",
            "type": "string"
          },
          "patientId": {
            "description": "PointClickCare's unique identifier for a patient within the organization.</br></br>When a patient is admitted to a facility within an organization, they are assigned a patientId which is unique to their stay within that facility. If the same patient were to get admitted to another facility within the same organization in the future, they would be assigned a new patientId. The patientId however is unique at the organization level. That is, no two patients across different facilities within the organization will have the same patientId.",
            "format": "int32",
            "minimum": 0,
            "type": "integer"
          },
          "pendingPatientId": {
            "description": "PointClickCare's unique identifier for a pending patient within the organization",
            "type": "string"
          }
        },
        "required": [
          "eventType"
        ],
        "title": "Simulation",
        "type": "object"
      },
      "SmokingStatusPostCodeableConcept": {
        "description": "Smoking status.",
        "example": {
          "coding": [
            {
              "code": "former_smoker",
              "display": "Former smoker",
              "system": "https://pointclickcare.com/system/smoking-status"
            }
          ]
        },
        "properties": {
          "coding": {
            "description": "List of smoking status codes, can accept up to 3 entries",
            "items": {
              "$ref": "#/components/schemas/SmokingStatusPostCoding"
            },
            "type": "array"
          }
        },
        "title": "SmokingStatusPostCodeableConcept",
        "type": "object"
      },
      "SmokingStatusPostCoding": {
        "description": "Smoking status codes, can accept up to 3 entries",
        "example": {
          "code": "former_smoker",
          "display": "Former smoker",
          "system": "https://pointclickcare.com/system/smoking-status"
        },
        "properties": {
          "code": {
            "description": "Specific code for the smoking status being conveyed.<br>The codes and display associated with the PointClickCare system are listed below:<br><table><th>Code</th><th>Display</th><tr><td>not_assessed</td><td>Not Assessed</td></tr><tr><td>current_every_day_smoker</td><td>Current every day smoker</td></tr><tr><td>Current_some_day_smoker</td><td>Current some day smoker</td></tr><tr><td>former_smoker</td><td>Former smoker</td></tr><tr><td>heavy_tobacco_smoker</td><td>Heavy tobacco smoker</td></tr><tr><td>light_tobacco_smoker</td><td>Light tobacco smoker</td></tr><tr><td>never_smoker</td><td>Never smoker</td></tr><tr><td>smoker_current_status_unknown</td><td>Smoker current status unknown</td></tr><tr><td>unknown_if_ever_smoked</td><td>Unknown if ever smoked</td></tr></table>",
            "type": "string"
          },
          "display": {
            "description": "Text description of the smoking status as defined by the system.",
            "type": "string"
          },
          "system": {
            "description": "Type of coding system being used. Supported systems are:<ul><li>\"https://pointclickcare.com/system/smoking-status\"</li></ul>.",
            "type": "string"
          }
        },
        "title": "SmokingStatusPostCoding",
        "type": "object"
      },
      "StandardResponse": {
        "description": "A list of standard responses available for all service tasks.",
        "example": {
          "code": "-99",
          "description": "Resident Not Available",
          "isResponseForFollowUpQuestions": true,
          "isResponseForMDSQuestions": true
        },
        "properties": {
          "code": {
            "description": "Short code of the standard response.",
            "type": "string"
          },
          "description": {
            "description": "Description of the standard response.",
            "type": "string"
          },
          "isResponseForFollowUpQuestions": {
            "description": "Indicates whether the standard response is used for non-MDS related questions.",
            "type": "boolean"
          },
          "isResponseForMDSQuestions": {
            "description": "Indicates whether the standard response is used for MDS-related questions.",
            "type": "boolean"
          }
        },
        "title": "StandardResponse",
        "type": "object"
      },
      "SuffixPickListItem": {
        "description": "",
        "example": {
          "description": "Jr.",
          "id": 1
        },
        "properties": {
          "description": {
            "description": "Description of the pick list value for suffix.",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the pick list value for suffix.",
            "format": "int32",
            "type": "integer"
          }
        },
        "title": "SuffixPickListItem",
        "type": "object"
      },
      "SupplementOrder": {
        "description": "all active an on hold supplement orders for a patient.",
        "example": {
          "supplementOrderId": 345,
          "patientId": 123,
          "supplementId": 455,
          "description": "Ensure",
          "status": "active",
          "schedules": [
            {
              "type": "routine",
              "scheduleDirections": "In the morning dislikes fruit punch",
              "additionalDirections": "Dislikes Fruit Punch",
              "startDateTime": "2021-05-07T18:27:38.683Z"
            },
            {
              "type": "PRN",
              "scheduleDirections": "Every 8 hours as needed When meal intake is poor",
              "additionalDirections": "When meal intake is poor",
              "startDateTime": "2021-05-07T18:27:38.683Z"
            }
          ],
          "orderedBy": "Dr Young",
          "orderedById": 355,
          "orderDateTime": "2021-05-07T18:27:38.683Z",
          "administrativeOrders": [
            {
              "physOrderId": 1,
              "adminOrderId": 1,
              "orderVerified": "Y",
              "relationship": "Hold",
              "orderedBy": "Lastname, Firstname",
              "createdBy": "Firstname Lastname",
              "confirmedBy": "Firstname Lastname",
              "effectiveDate": "2019-05-10T04:00:00.000Z",
              "inEffectiveDate": "2019-05-14T04:00:00.000Z"
            }
          ]
        },
        "properties": {
          "administrativeOrders": {
            "description": "List of administrative orders for this supplement order.",
            "items": {
              "$ref": "#/components/schemas/AdministrativeOrder"
            },
            "type": "array"
          },
          "description": {
            "description": "Description of the order.  Represents Diet Supplement.",
            "type": "string"
          },
          "orderDateTime": {
            "description": "Represents the date/time when the supplement order was ordered. The date and time should be expressed in UTC in the following format: YYYY-MM-DDTHH:MM:SS.sssZ.",
            "format": "date-time",
            "type": "string"
          },
          "orderedBy": {
            "description": "Represents the PointClickCare user who ordered the supplement order. This is typically the practitioner or medical professional assigned to the patient.",
            "type": "string"
          },
          "orderedById": {
            "description": "Unique identifier for the practitioner or medical professional that ordered the supplement order.",
            "format": "int32",
            "type": "integer"
          },
          "patientId": {
            "description": "PointClickCare's unique identifier for a patient within the organization. When a patient is admitted to a facility within an organization, they are assigned a patientId which is unique to their stay within that facility. If the same patient were to get admitted to another facility within the same organization in the future, they would be assigned a new patientId. The patientId however is unique at the organization level. That is, no two patients across different facilities within the organization will have the same patientId.",
            "format": "int32",
            "type": "integer"
          },
          "schedules": {
            "description": "List of schedules for this supplement order.",
            "items": {
              "$ref": "#/components/schemas/SupplementOrderSchedule"
            },
            "type": "array"
          },
          "status": {
            "description": "Represents the status of the supplement order for the patient. Possible values are \"active\", \"pending confirmation\", and \"on hold\".",
            "type": "string"
          },
          "supplementId": {
            "description": "Represents the ID of the diet supplement on the order for the patient.",
            "format": "int32",
            "type": "integer"
          },
          "supplementOrderId": {
            "description": "PointClickCare's unique identifier for a Supplement Order",
            "format": "int32",
            "type": "integer"
          }
        },
        "title": "SupplementOrder",
        "type": "object"
      },
      "SupplementOrderList": {
        "description": "SupplementOrder List",
        "example": {
          "data": [
            {
              "supplementOrderId": 345,
              "patientId": 123,
              "supplementId": 455,
              "description": "Ensure",
              "status": "active",
              "schedules": [
                {
                  "type": "routine",
                  "scheduleDirections": "In the morning dislikes fruit punch",
                  "additionalDirections": "Dislikes Fruit Punch",
                  "startDateTime": "2021-05-07T18:27:38.683Z"
                },
                {
                  "type": "PRN",
                  "scheduleDirections": "Every 8 hours as needed When meal intake is poor",
                  "additionalDirections": "When meal intake is poor",
                  "startDateTime": "2021-05-07T18:27:38.683Z"
                }
              ],
              "orderedBy": "Dr Young",
              "orderedById": 355,
              "orderDateTime": "2021-05-07T18:27:38.683Z",
              "administrativeOrders": [
                {
                  "physOrderId": 1,
                  "adminOrderId": 1,
                  "orderVerified": "Y",
                  "relationship": "Hold",
                  "orderedBy": "Lastname, Firstname",
                  "createdBy": "Firstname Lastname",
                  "confirmedBy": "Firstname Lastname",
                  "effectiveDate": "2019-05-10T04:00:00.000Z",
                  "inEffectiveDate": "2019-05-14T04:00:00.000Z"
                },
                {
                  "physOrderId": 2,
                  "adminOrderId": 2,
                  "orderVerified": "Y",
                  "relationship": "Hold",
                  "orderedBy": "Lastname, Firstname",
                  "createdBy": "Firstname Lastname",
                  "confirmedBy": "Firstname Lastname",
                  "effectiveDate": "2019-05-10T04:00:00.000Z",
                  "inEffectiveDate": "2019-05-14T04:00:00.000Z"
                }
              ]
            },
            {
              "supplementOrderId": 946,
              "patientId": 567,
              "supplementId": 975,
              "description": "Ensure Clear",
              "status": "active",
              "schedules": [
                {
                  "type": "PRN",
                  "scheduleDirections": "Every 10 minutes as needed",
                  "startDateTime": "2021-07-07T18:27:38.683Z",
                  "endDateTime": "2021-05-07T18:27:38.683Z"
                }
              ],
              "orderedBy": "Dr Marc",
              "orderedById": 967,
              "orderDateTime": "2021-05-07T18:27:38.683Z",
              "administrativeOrders": [
                {
                  "physOrderId": 1,
                  "adminOrderId": 1,
                  "orderVerified": "Y",
                  "relationship": "Hold",
                  "orderedBy": "Lastname, Firstname",
                  "createdBy": "Firstname Lastname",
                  "confirmedBy": "Firstname Lastname",
                  "effectiveDate": "2019-05-10T04:00:00.000Z",
                  "inEffectiveDate": "2019-05-14T04:00:00.000Z"
                }
              ]
            }
          ],
          "paging": {
            "hasMore": false,
            "page": 1,
            "pageSize": 50
          }
        },
        "properties": {
          "data": {
            "description": "List of all active and on hold supplement orders for a patient.",
            "items": {
              "$ref": "#/components/schemas/SupplementOrder"
            },
            "type": "array"
          },
          "paging": {
            "$ref": "#/components/schemas/PagingResponseByPage"
          }
        },
        "title": "SupplementOrderList",
        "type": "object"
      },
      "SupplementOrderSchedule": {
        "description": "Information on the supplement order for the supplement order.",
        "example": {
          "type": "Routine",
          "scheduleDirections": "Small portions",
          "additionalDirections": "4 OZ of Prune Juice with breakfast",
          "startDateTime": "2021-05-07T18:27:38.683Z",
          "endDateTime": "2021-05-12T15:57:27.612Z"
        },
        "properties": {
          "additionalDirections": {
            "description": "Free text directions entered for the supplement order. Directions can be added at the time of entering an order or as an update after the order has been promoted to the patient's chart.",
            "type": "string"
          },
          "endDateTime": {
            "description": "The end date and time of schedule. Date and time are expressed in UTC (Coordinated Universal Time), with a special UTC designator (\"Z\").",
            "format": "date-time",
            "type": "string"
          },
          "scheduleDirections": {
            "description": "Directions for the supplement order task.",
            "type": "string"
          },
          "startDateTime": {
            "description": "The start date and time of schedule. Date and time are expressed in UTC (Coordinated Universal Time), with a special UTC designator (\"Z\").",
            "format": "date-time",
            "type": "string"
          },
          "type": {
            "description": "Represents type of schedule. Possible values are Routine, PRN, OneTime or STAT.",
            "type": "string"
          }
        },
        "title": "SupplementOrderSchedule",
        "type": "object"
      },
      "SwitcherooCode": {
        "type": "object",
        "properties": {
          "system": {
            "type": "string",
            "description": "Represents the coding system used to share the concept."
          },
          "version": {
            "type": "string",
            "description": "Represents the version of the coding system."
          },
          "code": {
            "type": "string",
            "description": "Represents the code as per the coding system."
          },
          "display": {
            "type": "string",
            "description": "Represents the code display name as per the coding system."
          },
          "errorCode": {
            "type": "string",
            "description": "PointClickCare error code."
          },
          "errorMessage": {
            "type": "string",
            "description": "Error description."
          }
        },
        "title": "SwitcherooCode",
        "description": "Representation of a concept in a given coding system.",
        "example": {}
      },
      "ConditionSwitcherooCode": {
        "type": "object",
        "properties": {
          "system": {
            "type": "string",
            "description": "Represents the coding system used to share the concept."
          },
          "version": {
            "type": "string",
            "description": "Represents the version of the coding system. There are multiple versions compiled by the Observational Health Data Sciences and Informatics (OHSDI) in their library. All versions are returned in this field."
          },
          "code": {
            "type": "string",
            "description": "Represents the code as per the coding system."
          },
          "display": {
            "type": "string",
            "description": "Represents the code display name as per the coding system."
          },
          "errorCode": {
            "type": "string",
            "description": "PointClickCare error code."
          },
          "errorMessage": {
            "type": "string",
            "description": "Error description."
          }
        },
        "title": "ConditionSwitcherooCode",
        "description": "Representation of a concept in a given coding system.",
        "example": {}
      },
      "AllergenCode": {
        "type": "object",
        "properties": {
          "manifestations": {
            "type": "array",
            "description": "List of reaction manifestations. reaction.manifestations may not be enabled.",
            "items": {
              "type": "object",
              "properties": {
                "systemName": {
                  "type": "string",
                  "description": "UI Friendly name for the coding system of this entry. (e.g. SNOMED CT, RxNorm, PCC)."
                },
                "systemNameSpace": {
                  "type": "string",
                  "description": "The name space to search to find the code supplied for mapping between coding systems. (e.g. OID, URL, PCC category). Optional if systemName is \"PCC\"."
                },
                "code": {
                  "type": "string",
                  "description": "Represents the code value within the coding system. Optional if systemName is \"PCC\"."
                },
                "displayName": {
                  "type": "string",
                  "description": "Represents the displayable name of the entry (E.g. Allergen- Penicillin, Apple, Mold, Reaction type- Photosensitivity reactions, Severity- Mild)."
                }
              }
            }
          }
        }
      },
      "SwitcherooCodeableConcept": {
        "type": "object",
        "properties": {
          "codings": {
            "type": "array",
            "description": "List of representation of a concept in a given coding system.",
            "items": {
              "$ref": "#/components/schemas/SwitcherooCode"
            }
          }
        },
        "title": "SwitcherooCodeableConcept",
        "example": {
          "codings": []
        }
      },
      "ConditionSwitcherooCodeableConcept": {
        "type": "object",
        "properties": {
          "codings": {
            "type": "array",
            "description": "List of representation of a concept in a given coding system.",
            "items": {
              "$ref": "#/components/schemas/ConditionSwitcherooCode"
            }
          }
        },
        "title": "ConditionSwitcherooCodeableConcept",
        "example": {
          "codings": []
        }
      },
      "User": {
        "description": "User Information",
        "example": {
          "defaultFacId": 1,
          "enabled": true,
          "initials": "MA",
          "name": "Example User",
          "orgUuid": "7e217908-51ea-459f-b10b-bcd42c40f074",
          "passwordExpired": false,
          "position": "C.N.A.",
          "positionId": 9091,
          "privilegeScopes": [
            "user/patient.read",
            "user/observation.read"
          ],
          "restrictedAccess": true,
          "sub": "10001.123456",
          "title": "Manager",
          "userId": 123456,
          "username": "pcc-example"
        },
        "properties": {
          "defaultFacId": {
            "description": "PointClickCare's unique identifier for the default facility for the user.",
            "format": "int32",
            "type": "integer"
          },
          "enabled": {
            "description": "Boolean indicating whether or not a user is enabled.",
            "type": "boolean"
          },
          "initials": {
            "description": "The user's initials.",
            "type": "string"
          },
          "name": {
            "description": "The user's name.",
            "type": "string"
          },
          "orgUuid": {
            "description": "PointClickCare's unique identifier for the organization.",
            "type": "string"
          },
          "passwordExpired": {
            "description": "Boolean indicating whether or not a user password is expired.",
            "type": "boolean"
          },
          "position": {
            "description": "Description of the position associated to the user.",
            "type": "string"
          },
          "positionId": {
            "description": "PointClickCare's unique identifier for the position associated to the user within the organization.",
            "format": "int32",
            "type": "integer"
          },
          "privilegeScopes": {
            "description": "Array of privilege scopes that the user has access to. Privilege scopes define the resources that the user has access to in PointClickCare, and thus can be retrieved through API calls made on behalf of this user. For more info, refer to the User Privileges documentation.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "restrictedAccess": {
            "description": "Represents whether if the user has access to all or a limited set of patients in the facility.",
            "type": "boolean"
          },
          "sub": {
            "description": "Represents the unique identifier for the user. This is constructed as the user's orgId.userId. This field is applicable when using 'Login with PointClickCare' and is part of the Open ID Connect flow. It can be used otherwise as well to uniquely identify a user.",
            "type": "string"
          },
          "title": {
            "description": "The user's title.",
            "type": "string"
          },
          "userId": {
            "description": "PointClickCare's unique identifier for a user within the organization. Note that the userId is not guaranteed to be unique across organizations.",
            "format": "int32",
            "type": "integer"
          },
          "username": {
            "description": "PointClickCare's unique user name for a user within the organization.  Note that the user name is not guaranteed to be unique across organizations.",
            "type": "string"
          }
        },
        "title": "User",
        "type": "object"
      },
      "WebhookSubscriptionStatus": {
        "description": "Webhook Org Status",
        "example": {
          "orgUuid": "a60aba9f-ab02-48fa-b7e6-08c1efb93d32",
          "status": "SUCCESS"
        },
        "properties": {
          "action": {
            "description": "Action of this org subscription. Possible values are - <br /><ul><li>SUBSCRIBE</li><li>UNSUBSCRIBE</li></ul>",
            "enum": [
              "SUBSCRIBE",
              "UNSUBSCRIBE"
            ],
            "type": "string"
          },
          "orgUuid": {
            "description": "PointClickCare's unique identifier for the organization, in UUID format.",
            "format": "uuid",
            "type": "string"
          },
          "status": {
            "description": "Status of this org subscription. Can be one of SUCCESS, FAILED, PROCESSING.",
            "enum": [
              "PROCESSING",
              "SUCCESS",
              "FAILED"
            ],
            "type": "string"
          }
        },
        "title": "WebhookSubscriptionStatus",
        "type": "object"
      },
      "assessment": {
        "description": "A list of assessment specific configurations associated with the facility.",
        "example": {
          "signature": "password"
        },
        "properties": {
          "signature": {
            "description": "The assessment signature configuration the facility is using.",
            "enum": [
              "none",
              "password",
              "2-factor"
            ],
            "type": "string"
          }
        },
        "title": "assessment",
        "type": "object"
      },
      "clinicalConfiguration": {
        "description": "A list of clinical configurations associated with the facility.",
        "example": {
          "progressNote": {
            "signature": "password"
          },
          "units": {
            "bloodPressure": "mmHg",
            "bloodSugar": "mg/dL",
            "heartRate": "bpm",
            "height": "Cm",
            "oxygenSaturation": "%",
            "respirations": "Breaths/min",
            "temperature": "°C",
            "weight": "Kg"
          },
          "weightScaleTypes": [
            "Standing",
            "Wheelchair",
            "Hoyer",
            "BATH",
            "SITTING",
            "Mechanical lift"
          ]
        },
        "properties": {
          "progressNote": {
            "$ref": "#/components/schemas/facilityProgressNoteConfiguration"
          },
          "units": {
            "$ref": "#/components/schemas/FacilityUnitOfMeasure"
          },
          "weightScaleTypes": {
            "description": "Represents the weight scale types used by the facility. Weight scale types are configurable at a facility level in PointClickCare.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "title": "clinicalConfiguration",
        "type": "object"
      },
      "facilityProgressNoteConfiguration": {
        "description": "Facility configuration relating to progress notes.",
        "example": {
          "signature": "password"
        },
        "properties": {
          "signature": {
            "description": "Determines whether a signature is required when entering a progress note and if so, what kind of signature. Possible values are: none, password, 2-factor.",
            "enum": [
              "none",
              "password",
              "2-factor"
            ],
            "type": "string"
          }
        },
        "title": "facilityProgressNoteConfiguration",
        "type": "object"
      },
      "generalConfiguration": {
        "description": "A list of general configurations associated with the facility.",
        "example": {
          "assessment": {
            "signature": "password"
          }
        },
        "properties": {
          "assessment": {
            "$ref": "#/components/schemas/assessment"
          }
        },
        "title": "generalConfiguration",
        "type": "object"
      },
      "orderAdministrationConfiguration": {
        "description": "A list of order administration configurations associated with the facility.",
        "example": {
          "allowedSupplementaryDocumentationResponses": [
            "LAST_RECORDED",
            "NEW_VALUE"
          ],
          "hasOrderAdministrationBarcodeScanning": true,
          "hasResidentBarcodeScanning": true,
          "orderAdministrationBarcodeRegex": "\\d{0,11}$",
          "requireProgressNoteforPRN": false,
          "shouldAutoPopulateProgressNote": true,
          "showProgressNoteOn24HourReport": true,
          "showProgressNoteOnShiftReport": true,
          "signature": "password",
          "usePharmacyDirections": false
        },
        "properties": {
          "allowedSupplementaryDocumentationResponses": {
            "description": "Indicates the possible input options available for supplementary documentation tied to an order administration task. Possible values are one or more of: LAST_RECORDED, NEW_VALUE, NOT_APPLICABLE.",
            "items": {
              "enum": [
                "LAST_RECORDED",
                "NEW_VALUE",
                "NOT_APPLICABLE"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "hasDrugImages": {
            "description": "Determines whether drug images are returned for medication orders.",
            "type": "boolean"
          },
          "hasOrderAdministrationBarcodeScanning": {
            "description": "Determines whether the facility allows barcode scanning to identify a medication.",
            "type": "boolean"
          },
          "hasResidentBarcodeScanning": {
            "description": "Determines whether the facility allows barcode scanning to identify a resident.",
            "type": "boolean"
          },
          "orderAdministrationBarcodeRegex": {
            "description": "Regular expression to apply to the barcode to identify the medication supply.",
            "type": "string"
          },
          "requireProgressNoteforPRN": {
            "description": "Indicates whether a progress note is required for a PRN order administration task.",
            "type": "boolean"
          },
          "shouldAutoPopulateProgressNote": {
            "description": "Indicates whether a progress note for an order administration task is populated automatically.",
            "type": "boolean"
          },
          "showProgressNoteOn24HourReport": {
            "description": "Determines whether or not the progress note should show on the 24Hr shift report.",
            "type": "boolean"
          },
          "showProgressNoteOnShiftReport": {
            "description": "Determines whether or not the progress note should show on the shift report.",
            "type": "boolean"
          },
          "signature": {
            "description": "Determines whether a signature is required when documenting the administration of an order and if so, what kind of signature. Possible values are: none, password, 2-factor.",
            "enum": [
              "none",
              "password",
              "2-factor"
            ],
            "type": "string"
          },
          "usePharmacyDirections": {
            "description": "Determines whether the facility is using Pharmacy Directions instead of the PointClickCare generated orders directions.",
            "type": "boolean"
          }
        },
        "title": "orderAdministrationConfiguration",
        "type": "object"
      },
      "pickList": {
        "description": "PointClickCare provides the ability for facilities to create custom pick lists for common sets of reference data. They are used to show a list items on the UI controls that the user can 'pick' from when entering data. For example, a facility is able to customize a martial status picklist such that when creating a patient the user may only pick from list of approved values. The pick list values themselves are free-form text fields and at this time are not locale specific and case sensitivity is not important. There is no meaning associated with the ordering of the pick list values.",
        "example": {
          "censusActionCode": [
            {
              "actionCode": "AA",
              "actionType": "Actual Admit",
              "id": 1,
              "standardActionType": "Admission"
            },
            {
              "actionCode": "L",
              "actionType": "Leave of Absence/LOA",
              "id": 2,
              "standardActionType": "Leave"
            },
            {
              "actionCode": "RAA",
              "actionType": "Respite - Actual Admit/ReAdmit",
              "id": 3,
              "standardActionType": "Admission"
            }
          ],
          "citizenship": [
            {
              "description": "Canadian",
              "id": 1
            }
          ],
          "contactRelationships": [
            {
              "description": "Aunt",
              "id": 1
            },
            {
              "description": "Brother",
              "id": 2
            },
            {
              "description": "Child",
              "id": 3
            },
            {
              "description": "Cousin",
              "id": 4
            },
            {
              "description": "Daughter",
              "id": 5
            }
          ],
          "contactTypes": [
            {
              "description": "A/R Guarantor",
              "guarantor": true,
              "id": 1,
              "isSurveyContact": false,
              "standardContactType": "Agent"
            },
            {
              "description": "Next of Kin",
              "guarantor": false,
              "id": 2,
              "isSurveyContact": true,
              "standardContactType": "Next of Kin"
            }
          ],
          "documentCategories": [
            {
              "description": "Clinical Document",
              "id": 1,
              "isCustom": false
            },
            {
              "description": "Other",
              "id": 2,
              "isCustom": true
            }
          ],
          "language": [
            {
              "description": "English",
              "id": 1
            },
            {
              "description": "French",
              "id": 2
            }
          ],
          "maritalStatus": [
            {
              "description": "Married",
              "id": 1
            }
          ],
          "prefix": [
            {
              "description": "Dr.",
              "id": 1
            },
            {
              "description": "Mr.",
              "id": 2
            },
            {
              "description": "Mrs.",
              "id": 3
            },
            {
              "description": "Ms.",
              "id": 4
            }
          ],
          "race": [
            {
              "description": "Hispanic",
              "id": 1
            }
          ],
          "religion": [
            {
              "description": "Catholic",
              "id": 1
            }
          ],
          "suffix": [
            {
              "description": "Jr",
              "id": 1
            },
            {
              "description": "Sr",
              "id": 2
            }
          ]
        },
        "properties": {
          "censusActionCode": {
            "description": "Represents the list of values configured for Census Action Codes by the facility. Values that can be selected for Census Action Codes are configurable at a facility level in PointClickCare.",
            "items": {
              "$ref": "#/components/schemas/CensusActionCodePickListItem"
            },
            "type": "array"
          },
          "citizenship": {
            "description": "Represents the list of values configured for Citizenship by the facility. Values that can be selected for Citizenship for a patient are configurable at a facility level in PointClickCare.",
            "items": {
              "$ref": "#/components/schemas/CitizenshipPickListItem"
            },
            "type": "array"
          },
          "contactRelationships": {
            "description": "Represents the list of values configured for Contact Relationships by the facility. Values that can be selected for Relation for a contact are configurable at a facility level in PointClickCare.",
            "items": {
              "$ref": "#/components/schemas/ContactRelationshipsPickListItem"
            },
            "type": "array"
          },
          "contactTypes": {
            "description": "Represents the list of values configured for Contact Types by the facility. Values that can be selected for Contact Type for a contact are configurable at a facility level in PointClickCare.",
            "items": {
              "$ref": "#/components/schemas/ContactTypesPickListItem"
            },
            "type": "array"
          },
          "documentCategories": {
            "description": "List of document Categories in use by the Facility. The list returned will be based on User permissions in PointClickCare. At least one of the following permissions is required to access this information:<ul><li>user/adminDocumentCategory.write</li><li>user/clinicalDocumentCategory.write</li></ul>",
            "items": {
              "$ref": "#/components/schemas/DocumentCategoriesItem"
            },
            "type": "array"
          },
          "language": {
            "description": "Represents the list of values configured for Language by the facility. Values that can be selected for Language for a patient are configurable at a facility level in PointClickCare.",
            "items": {
              "$ref": "#/components/schemas/LanguagePickListItem"
            },
            "type": "array"
          },
          "maritalStatus": {
            "description": "Represents the list of values configured for Marital Status by the facility. Values that can be selected for Marital Status for a patient are configurable at a facility level in PointClickCare.",
            "items": {
              "$ref": "#/components/schemas/MaritalStatusPickListItem"
            },
            "type": "array"
          },
          "prefix": {
            "description": "Represents the list of values configured for Prefix by the facility. Values that can be selected for Prefix for a patient are configurable at a facility level in PointClickCare.",
            "items": {
              "$ref": "#/components/schemas/PrefixPickListItem"
            },
            "type": "array"
          },
          "race": {
            "description": "Represents the list of values configured for Race by the facility. Values that can be selected for Race for a patient are configurable at a facility level in PointClickCare.",
            "items": {
              "$ref": "#/components/schemas/RacePickListItem"
            },
            "type": "array"
          },
          "religion": {
            "description": "Represents the list of values configured for Religion by the facility. Values that can be selected for Religion for a patient are configurable at a facility level in PointClickCare.",
            "items": {
              "$ref": "#/components/schemas/ReligionPickListItem"
            },
            "type": "array"
          },
          "suffix": {
            "description": "Represents the list of values configured for Suffix by the facility. Values that can be selected for Suffix for a patient are configurable at a facility level in PointClickCare.",
            "items": {
              "$ref": "#/components/schemas/SuffixPickListItem"
            },
            "type": "array"
          }
        },
        "title": "pickList",
        "type": "object"
      }
    },
    "securitySchemes": {
      "three-legged": {
        "description": "This API requires a three-legged OAuth access token.",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://connect.pointclickcare.com",
            "scopes": {
              "At least one of the following: user/adminDocumentCategory.write user/clinicalDocumentCategory.write": "",
              "For all observations: user/observation.read<BR> For latest observations: user/latestObservation.read": "",
              "user/adlScore.read": "",
              "user/adtRecord.read": "",
              "user/advanceDirectivesConsent.read": "",
              "user/allergyIntolerance.read": "",
              "user/ancillaryImport.write": "",
              "user/assessments.read": "",
              "user/bedsAvailability.read": "",
              "user/calendarConfiguration.read": "",
              "user/carePlan.read": "",
              "user/condition.read": "",
              "user/coverage.read": "",
              "user/episodeOfCare.read": "",
              "user/facilityCalendarEvent.read: If patientId is null<BR>user/residentCalendarEvent.read: If patientId is not null": "",
              "user/facilityCalendarEvent.read: If the occurrence belongs to an event that is facility-specific  user/residentCalendarEvent.read: If the occurrence belongs to an event that is patient-specific": "",
              "user/facilityCalendarEvent.write: If event is a Facility/Community Event<BR>user/residentCalendarEvent.write: If event is a Resident Event": "",
              "user/facilityCalendarEvent.write: If facId is not null<BR>user/residentCalendarEvent.write: If facId is null": "",
              "user/facilityCalendarEvent.write: If facId is not null<BR>user/residentCalendarEvent.write: If facId null": "",
              "user/facilityCalendarEvent.write: If the occurrence belongs to an event that is facility-specific  user/residentCalendarEvent.write: If the occurrence belongs to an event that is patient-specific": "",
              "user/immunization.read": "",
              "user/labResult.read OR user/radiologyResult.read": "",
              "user/medication.read": "",
              "user/nutritionOrder.read": "",
              "user/observation.read": "",
              "user/observation.write": "",
              "user/observationBaselines.read": "",
              "user/patient.read": "",
              "user/patient.write": "",
              "user/patientContact.read": "",
              "user/patientContact.write": "",
              "user/patientPhoto.read": "",
              "user/patientProgressNote.read": "",
              "user/pointOfCare.read": "",
              "user/practitioner.read": "",
              "user/privacyConsent.read": "",
              "user/privateCashImport.write": "",
              "user/privateCashImport.read": "",
              "user/progressNote.write": "",
              "user/progressNoteAddendum.write": "",
              "user/riskManagement.read": ""
            }
          }
        },
        "type": "oauth2"
      },
      "two-legged": {
        "description": "This API requires a two-legged OAuth access token.",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://connect2.pointclickcare.com",
            "scopes": {}
          }
        },
        "type": "oauth2"
      },
      "two-legged-or-three-legged": {
        "description": "This API requires a two-legged-or-three-legged OAuth access token.",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://connect.pointclickcare.com",
            "scopes": {
              "At least one of the following: user/adminDocumentCategory.write user/clinicalDocumentCategory.write": "",
              "For all observations: user/observation.read For latest observations: user/latestObservation.read": "",
              "user/adlScore.read": "",
              "user/adtRecord.read": "",
              "user/advanceDirectivesConsent.read": "",
              "user/allergyIntolerance.read": "",
              "user/ancillaryImport.write": "",
              "user/assessments.read": "",
              "user/bedsAvailability.read": "",
              "user/calendarConfiguration.read": "",
              "user/carePlan.read": "",
              "user/condition.read": "",
              "user/coverage.read": "",
              "user/episodeOfCare.read": "",
              "user/facilityCalendarEvent.read: If patientId is nulluser/residentCalendarEvent.read: If patientId is not null": "",
              "user/facilityCalendarEvent.read: If the occurrence belongs to an event that is facility-specific  user/residentCalendarEvent.read: If the occurrence belongs to an event that is patient-specific": "",
              "user/facilityCalendarEvent.write: If event is a Facility/Community Event user/residentCalendarEvent.write: If event is a Resident Event": "",
              "user/facilityCalendarEvent.write: If facId is not null user/residentCalendarEvent.write: If facId is null": "",
              "user/facilityCalendarEvent.write: If facId is not null user/residentCalendarEvent.write: If facId null": "",
              "user/facilityCalendarEvent.write: If the occurrence belongs to an event that is facility-specific  user/residentCalendarEvent.write: If the occurrence belongs to an event that is patient-specific": "",
              "user/immunization.read": "",
              "user/labResult.read OR user/radiologyResult.read": "",
              "user/medication.read": "",
              "user/nutritionOrder.read": "",
              "user/observation.read": "",
              "user/observation.write": "",
              "user/observationBaselines.read": "",
              "user/patient.read": "",
              "user/patient.write": "",
              "user/patientContact.read": "",
              "user/patientContact.write": "",
              "user/patientPhoto.read": "",
              "user/patientProgressNote.read": "",
              "user/pointOfCare.read": "",
              "user/practitioner.read": "",
              "user/privacyConsent.read": "",
              "user/progressNote.write": "",
              "user/progressNoteAddendum.write": "",
              "user/riskManagement.read": ""
            }
          }
        },
        "type": "oauth2"
      }
    }
  },
  "x-navigateMethodsByName": true
}